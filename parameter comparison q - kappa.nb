(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    907812,      18727]
NotebookOptionsPosition[    878422,      18240]
NotebookOutlinePosition[    878849,      18257]
CellTagsIndexPosition[    878806,      18254]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Properties of the Coupled Gaussian", "Subsection",
 CellChangeTimes->{{3.8856575530006227`*^9, 
  3.885657564607095*^9}},ExpressionUUID->"f9ac21f0-fdab-401b-b0d3-\
b9117ac59fb3"],

Cell[TextData[{
 "Examination of the ability of the \[Kappa], \[Sigma], q, and \[Beta] \
parameters to provide interpretations of the properties of the distribution. \
In this analysis \[Mu] = 0 is assumed for simplicity. From analysis of the \
generalized mean, it is known that x = \[Sigma] is significant because f(\
\[Sigma]) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"\[Kappa]", "-", "avg"}]], "(", "x", ")"}], TraditionalForm]], 
  "Input",ExpressionUUID->"8251fad8-a185-493d-995b-b7384aaed3e6"],
 ". It\[CloseCurlyQuote]s further established that x = \[Sigma] is the point \
where the derivative of the distribution on a log-log scale is equal to -1. \
Also, the point where the log-log derivative is one-half its asymptotic \
derivative is equal to ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Sigma]", 
    SqrtBox["\[Kappa]"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0fe82ff3-380b-44e5-bd48-74edc994b963"],
 ".\n\nAs the results below show, the minimum of the derivative (inflection \
point) and the maximum of the second derivative, also have relatively simple \
relationships with the \[Sigma] and \[Kappa]. While ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"1", "/", 
     SqrtBox["\[Beta]"]}]}], TraditionalForm]],ExpressionUUID->
  "5d4b20aa-9704-4253-a1fe-d32b15cfbc6e"],
 "appears to be very close to the maximum of the second derivative, the \
functional relationship is quite complicated.\n\n2nd Derivative: f\
\[CloseCurlyQuote]\[CloseCurlyQuote](\[PlusMinus] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["\[Sigma]", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "\[Kappa]"}]}]]], ")"}], "=", "0"}], ";"}], " "}], 
   TraditionalForm]],ExpressionUUID->"8cbec621-18f9-4373-8752-54bd36e26df5"],
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "''"}], 
     RowBox[{"(", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"\[Beta]", 
         RowBox[{"(", 
          RowBox[{"1", "+", "q"}], ")"}]}]]], ")"}]}], "=", "0"}], 
   "NaturalLanguageInput"]],
  CellChangeTimes->{{3.8856574325747423`*^9, 3.885657443598144*^9}},
  ExpressionUUID->"8b3e90da-44f6-419e-963e-14d4c5328d76"],
 "\nThird Derivative: \
f\[CloseCurlyQuote]\[CloseCurlyQuote]\[CloseCurlyQuote](\[PlusMinus] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], "\[Sigma]"}], 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "\[Kappa]"}]}]]], ")"}], "=", "0"}], ";"}], " "}], 
   TraditionalForm]],ExpressionUUID->"051f3070-8946-4e06-8691-c801f33a1aa2"],
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'''"}], 
     RowBox[{"(", 
      FractionBox[
       SqrtBox["3"], 
       SqrtBox[
        RowBox[{"\[Beta]", 
         RowBox[{"(", 
          RowBox[{"1", "+", "q"}], ")"}]}]]], ")"}]}], "=", "0"}], 
   "NaturalLanguageInput"]],
  CellChangeTimes->{{3.8856574325747423`*^9, 3.885657443598144*^9}},
  ExpressionUUID->"559b15e2-e76b-4b34-99cd-37a41272f537"]
}], "Text",
 CellChangeTimes->{{3.885657576323655*^9, 3.88565791440891*^9}, {
  3.885657948506081*^9, 3.88565803404138*^9}, {3.885658081485755*^9, 
  3.88565811215679*^9}, {3.8856581496482162`*^9, 3.885658240043548*^9}, {
  3.917419431333725*^9, 3.91741947090772*^9}, {3.917419736422061*^9, 
  3.9174197449272127`*^9}, {3.9174990372200127`*^9, 3.917499104390381*^9}, {
  3.9174992218959417`*^9, 
  3.917499298418714*^9}},ExpressionUUID->"6b252861-82a5-47cf-90f5-\
8aecb2d36e04"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
gGywIdjLhfpH9NAeEkIIIXpM8ZPUPwghhADa5XDp0KGDNm/V119/HaiN8ePH
a9v44IMPQr6Cf7N27VrHZ3/22Wdxzxk1ahT1j4hI5n599913YvTo0bGSSX0t
HTz++OPGxy6zGfoLM7j99tsdz3n79u2t319+9OzZk/pHALLBhmCND/WP6KE9
JIQQQvSY4iepfxBCCAG0y+HStWvX2BhffvnljpjFkCFDArVRr1692DkXXnih
o43PP/885Cv4Ny+++GLC8fSnnnqK+kdEJHO/sp0nnnjC+NhlNkN/ET3r1q0T
p5xySuxe4L+3b98e9zx5zQD1Dz3ZYENwv6l/RA/tISGEEKLHFD9J/YMQQgig
XQ4XWf949tlnHTGLqlWrWr7Rj/Xr18fqI2dWp06dItM/MMeY+kf2kMz9ynay
IXaZzdBfRE/Hjh0dzzjWGAblrbfeEgsXLgy89jAXyQYbQv3DDGgPCSGEED2m
+EnqH4QQQgDtcrjI+sfq1avFBRdckFD+qj59+sTqYj5/mzZtktY/Dh06JFat
WiWmT58uxowZI8aOHSvef/99630gHh9//LEoVKiQ47Pnzp0rvv32W1f5448/
YufF0z82bNhg/Q3a0KJFi8SePXsCX48MPhNjib1+cW3z588XO3fujKsvYY8M
zIvGnGrcn6VLl4rFixdb58rs2rXLGjeM2euvv+4733r//v1WO9jjHv1ArDFe
P7zI5P3SjUMicVK8J3766afW+Dz99NNW/qzJkydb8Vbkawk6BqlcdzbELrMZ
+otowXegRIkSjmd83rx5oX0WbOrMmTOt7+HUqVMtPV627zp+/vlnT1vjlaPr
+PHjnnV/++03V134hy+//NKyb9gDfMmSJZadwufJYK8j217Dlh08eDDwdadi
Q5L1Q15g7/r33nvPagt+9LnnnrPaw7731D/MgPaQEEII0WOKn6T+QQghBNAu
h4usf2DurRpb6du3r/bc33//XZx66qlWPfw//n3FFVckpH8cPnzY2oOjadOm
4s9//rPjXLsULVpUTJw40fP83bt3i0cffVSULl3a81yvgvo2Ov1jzZo1olGj
Rq5zCxQoIHr37m29kwQBcfsHHnhAlCpVyrMvJUuWFIMGDbLeWbzo1auX53l2
fpi9e/eK66+/3pFvBgX/xjxs3BMbxODQntc4Q7dCX+MR1f3SjcNdd90Vt8/H
jh0TI0eOFOecc47v5+AeIbd+GNdtQ/0jXOgvomXlypWu7wX01nQCO3bvvfeK
M844w/N7CNtXs2ZNy4brqF+/vue52IddBTqBV90BAwa46l5yySWedTE3AEB/
bdy4sWed2rVrB8oTlowNSdUPyUCrwfj72XD1GPWPaKA9JIQQQvSY4iepfxBC
CAG0y+Ei6x/Lli2z5q/KsfTTTz9dO68dc+ftelgHApo3b+6Ie+j0D8TB77nn
HlG8ePFYXcSVq1WrZn2mGk/BsdmzZ7vaQWw8aBzdLkOHDo2d76V/IL6k6glq
QTw+HlivUKlSpdg5hQsXFs2aNRPt2rUTxYoVc7R35ZVXes4BRjzRa4/6wYMH
W/OLTzvtNN9+Xn311VY7WMdStmxZ37qIv+nmAUd9v3TjEE//gD4k70+Dgn1u
br31Vitfm9pe586dQ7luG+of4UJ/ES0PPvig4/muUqVKWtvH+i9Vx0SeRvix
Vq1aufYdue+++8TJkydd7WCtWcOGDV3fX6zbUPnqq68se6H6BGgAKi+//LJo
0qSJq12sgcF6O512KvtbrKnwI1Ebkg4/ZAN/LreFctZZZ1m2GRpHhQoVPK+L
+kc00B4SQgghekzxk9Q/CCGEANrlcJH1jzfeeMP6m7qGY8GCBZ7nyvEje+8G
Nfaj0z+6d+/uqIdYNHIQAfhjxGwuvvhiRx3MUYX/l0F8GjlGUNT92zFf3z4m
F5xjo+ofcvwGsXCsB8A+FUWKFHHFdL7//nvtuEJHkrUJtAsNwgZ5SHr06OFo
r2fPntr2sA5HrotxRhwL/401CcOHD7f6WrlyZVc/MQ52X+rUqWNpEPgb5kir
dZHjy+T7pY6Dn/7x66+/OmKlyMvz9ttvO+pgzPz0j3Rdtw31j3Chv4iWbt26
OZ7vtm3bpq3t7777LrbeEAVr8dTvD9ZXqDrv/fff79ke1oWVKVMmrv5hA1sT
T/8AsAuXXXaZo65s61q3bm3ZYKy3gO1WbTD65KXZ2CRiQ9Lph6Aly+tHoOVM
mDDBUQf9xroY6h9mQHtICCGE6DHFT1L/IIQQAmiXw0XWP7APAsAcVjl28Ze/
/MV1HmIo9nHkErFR59QH0T+QK+PHH3901dmyZYuVU0hu76OPPtJey5133umo
m8z+5yiIFy1fvtxRT97n3S7YE0THNddcE6uHecO4FhXkcZHzhEDP2Ldvn2d7
0CXUz0f8CblZ5DUbyHOC+bhqXTsOKMflkde+bt26jjp4Hrww5X6p4+Cnf9x2
222B4oRY9xJE/0jHdVP/CBf6i2hp2bKl4/nG9ycd4LdbixYtHG2/+uqrnnXx
3ZPXasCuyhqqTKdOnQLrH1gzEkT/AKquigJddM6cOa66WKOi1p0yZYq27URs
SLr8EHwMdBv5c1966SXPz0RdrC+h/hE9tIeEEEKIHlP8JPUPQgghgHY5XGT9
A/EdgH1d5bwYiIdgLr1M//79Y8ft3OZAjafr9A/M48d8fBTkTNGBuIncnt1H
L9KhfxQsWNDKteTFdddd59ITvMD+3HK9Ll26aD//4YcfdtQdOHCgZz3ksldj
ZH//+9896yJflFoXc3y9mDVrlqMeckV5Ycr9UsdBp39s3LjRUQ8ah45XXnlF
VK9e3SrqPU33dVP/CBf6i2hR10L169cvLe2q33usc/Paq9xGtdU333yzZz3k
tQqqf6h7m/jpHy+88ILLBmNvcB3IOxXUXgW1Ien0Qx9++KHjOPKa+Y0/5gZQ
/4ge2kNCCCFEjyl+kvoHIYQQQLscLrL+Ic9NVfP+yBoH1g3YOTXsfc9t1PhX
vP3P4zFixAhHe5MmTdLWTYf+oVv/AFStAOsLvJC1IZTFixdr25w5c6aj7qWX
XupZb+3atY56yGOiiz+9+eabjrqY93vkyBHPujt37nTUxb4WqRD2/VLHQad/
IH4n1xs9enTS1xSEoNdN/SNc6C+ipXz58o7nG3tupwPoKHK7yB/lB9YyyvXh
p7xQbZCf/qFqMH76x8SJEx11sQ7DD6xlUfWSw4cPe9YNakPS6YewB5J8HH3w
Y9WqVdQ/DID2kBBCCNFjip+k/kEIIQTQLoeLrH8gBmKDvdDl+AXymdtgvrz9
9969ezvaU/eUSFX/UOfRPv/889q66dA/xo8fr62rzoFF7hQvKlas6Kj37bff
attEH+W6yJHiBXK6BI0nbd261VH3ggsu0NbFu5Kqq6RC2PdLHQed/lGjRo3A
cc10EPS6qX+EC/1FtKj7D6Vr/Ye65zm0CD+QB1DVE7z29Q5L/8B8Abku8mH5
gTWXWHson7Np0ybPukFtSDr9kHpfoUP7obZH/SMaaA8JIYQQPab4SeofhBBC
AO1yuMj6x4wZM2J/h089++yzY8ewhgD7zwLMDbX/jn0xZNKtf8haSyb0D3kM
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
reXHvUrz5s1d9dGGSrJjZ5Os78TaVnmtD/yR2j98z+W9q+K9Q5LooV0mhBAS
BPoLQgjJg/Yw+0HMS97DIEgMXNUbotY/3n//fVf84OjRo656QWPgyMfkldsD
ua+HDRtm7VkahHTF6hONc6Sif8RbZ6JqFZgH60U26h9hxtgSuScAedfsuqed
dlqgayRmYoqfpP5BgpKKP/YjUTto8+OPPwby8Spq7qZZs2a56iSjf9StW9dx
zksvvRQ7hrxPal8TLdDVVZIdO5tkfSeQ93JHWbBggeO4vCZYl7+LmAXtMiGE
kCDQXxBCSB60h9kP9s2Wf9dCC0EczI8tW7YYpX9gr1L5XMSOvUgkfjBnzhxX
jgu7FC1aVPztb38Tv/zyi2+/wl6rkI7zE9U/1HuPgnwgKtmof4QZY0v0nsrz
i6l/ZDem+EnqHyQopukfXn4Hz248mjRp4jhn8uTJrjrJ6B+tWrVynDNu3LjY
sQ0bNjiOISfi1KlTAxfsB+KVGzFK/QPvQ/K5nTt3dhzv2LFj7Ni8efMS6heJ
BtplQgghQaC/IISQPGgPsx/kiZJ/12L+u25fAhvT9A/sySqfW79+fc96icYP
kMNB3e9CLsgDsWjRIu35+VH/+Omnn1zj4JXvKRv1jzBjbIneU+z5Qf0jf2CK
n6T+QYJimv7h5XcwdyMetWrVcpzj5a+T0T9Uvzl9+vTYMXVOCXIZ4vuRKunW
P9avXx/43JMnT1rvO/a5RYoUsfY7B1gvbK+XRZ402AhiPrTLhBBCgkB/QQgh
edAeZj+7du1yxRXirWswTf+A3iGfq9tbIdn4AfJrXX311Z4aCNaI6OY7Jhtv
MFn/UPfmxnohxEhV1Gv/4IMPtG2mon+kc0zDjLFR/8hdTPGT1D9IUEzTP0Cx
YsUc537++edxzznrrLMc53jp8Kr+8fzzz8dtt3r16o5zVqxYETuG70KhQoUc
x/fu3Rv4OnWkW/9YvXp1Quf36dPHcf6UKVOsvz/yyCOxv2EPdJId0C4TQggJ
Av0FIYTkQXuY/WBenxrzjbfngZrfIUr9A3txqHs2vPLKK551U40fYJ9X5H1Q
x6t06dKecx6TjTdEqX945bKSgd4g19flGlOv/d1339W2mYr+ke4xDSvGRv0j
dzHFT1L/IEExUf9Q8wyqe1CoHDt2zPFuAK0eGreKqn9gX/d4IKeVfM5XX33l
OF6tWjXHcfi4VEm3/vHGG2+k9PktW7a07EfZsmVjfur3339PqE0SHbTLhBBC
gkB/QQghedAe5g/OPPNMx+9a7Kfhx1tvvWWM/qGehxwNx48f96ybavzABvmN
VM3Fa8/rZOMNUeof+/fv9217yZIljvr16tXzrNerVy9HPb+c4LNnz05a/0j3
mIYVY6P+kbuY4iepf5Cg9O/f32GvBg4cmJZ2165dm7Rva9++fULvHa+99pqj
fuPGjT3rqfrHoEGDfNuFJi7XP+ecc1x11LyZ/fr1C3SN+H7qSGXswD333OM4
316/kQg1atSInQ+/99RTT8X+jT3RSPZAu0wIISQI9BeEEJIH7WH+oE6dOo7f
xV27dvWtD20i3fqHGm8Jon9s3bo1lnfaLo899pi2fpD4AeKByHkUL+/RzTff
7GhrwoQJrjrJxhtSjXMkcr6qf2zbts23bfXe6+7Tfffd56g3atQobZuqhoVx
0xH2mIYVY0v0nlaqVClWt2TJkoGukZiJKX6S+gcJyq233pqSD9KxcuVKR7u3
33574HNVnRxr9fzWGyAPplx/9OjRnvVU/QPahR/Q5+NpGy+//LKjDgrmjeg4
ceKE6Nmzp7WWYseOHZ51Uhk78OSTTzrOV/cwD8KIESNc14WC9zDkxiTZA+0y
IYSQINBfkEyC/eWwbnrZsmVi7ty5YurUqWLixInW/ON07KdHSCrQHuYP1Jh2
8eLFtesAvvzyS+t4uvUP/JZPRP/45ptvHHMRUerWrWvF8HSo61awlkAF8XT7
uN+eFYilyG0hNqGSbLwh1ThHkOu0UfUP+BgdiH2WL1/eUf/DDz/0rDt8+HBH
vRYtWnjWQ14s7KESL55kk+yYBh2TsGJsidwTgLxidl3kkifZiyl+kvoHCcp1
113nsFft2rVLS7tz5sxxtHvttdcGPhfPkrrXl06XWbx4sWNdHvbl1u1tpeof
KLp9pfDeIdtm+Idvv/3WVQ/fm/POO8/RZoUKFawcmirInYV3F7te9+7dPT87
lbEDs2bNcpxftGhRR65G/N7s3bu3VU/Hnj17rDWO6njFmzNDzIN22VyQ1xff
Nb/yww8/iKNHj3rm3iWEkHSSq/6Ctjgali5d6jnXBiXePrWEhE2u2sP8BtY6
qDHoiy++WPz666+Oem+//bYoU6aMyxalQ/+4/vrrA+kf8C+Ibag5u5CHCX7I
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
dPwTJkyw7Yt7TewLm4Kdr4SEn2zUF6j1tXDhQu21117T3nzzTccYpi1btui2
tkmTJmkrV65M0ywJIekmG+VhpoD3kEsvvdS8hlirgbU6+DdqoqcS60EIISSH
sOhJ+j8IIYQAyuXMBzH/og36559/Tmoco/YFYh5gE4xH9erV9b74vnQTH4Fv
TXGOAwcOTGqO6QDvP0YuabSaNWsGPaW0gvrm4rVCfgg7Dh8+HJOjQVyDSaJF
tumLVatWaaVLl5buX9jGrPKMQM6hJpLY94orrkj/pAkhaSHb5GGmcffdd1vm
kZozZ07QUyOEkIwgLHqS/g9CCCGAcjmzUeuJI28R6pvv27fPbH/++afjOIcO
HTLH6NevX9y+Z86c0XLlyqX3dVsfo2vXrtI8Ua89GdK1Vrtnz56ufQCZhOrP
QE0PvE/GQ/QVoVnVCiHRIJv0xerVq/VaSVb2sUaNGkl98U3UunXrmH733Xdf
SnM4ffq0tnbtWl8bvvkIIYmTTfIwEzHqgoht8ODBQU8r7VjpODa2qDYSLsJy
Xej/IIQQAiiXMw/Y7eBPqFOnjqt3RdR2dOKDDz7Q+15wwQV6/Yd4wAcxdOhQ
vS4EfC1O4P0gf/785nwQr5IM6VyrrebAeuKJJ5Kac9RYtmyZdNw33nij4zZi
XjO0J598Mg0zJX6QLfoCNZMMv12tWrV0nx3i3sT7+OjRo2b/Pn36WMrWsWPH
pjQP1swlJLxkizzMVD7//HNJFjZo0EC3Y2UbQdur2di8bCRchOW60P9BCCEE
UC5nHh07dkzoXfH55593HPP//u//9L5Nmzb1fL6wI4rz6dSpU8JjpHut9vnz
56VtkUchVaKw1nv06NHScTds2NBxG/V+9OJckWDIFn1hrAuGL/bvv//W/zZ8
+HDpPv7oo4/0v8+aNcv8W/ny5fVYMPiUb7rpppRzyNP/QUh4yRZ5mKmcOHEi
be8mePcS4679aKytRggJG2HRk/R/EEIIAZTLmcf27du1xYsX682o52i0MWPG
mL8Z7ZdffnEc89ixY9q7777rS56nTZs2SXPs379/QtsHtVa7UKFC5rZu4iCc
iIKt8/HHH5fGa9WqleM2uJ7iNlhjSaJJNukL5MUTa9Vs3rw5Rk7t2bNHK1Cg
gP7/UqVKaQcOHPB0DuvWrdOqVavma8MxEEISJ5vkYSaC/KyiTEf8sF/Mnz/f
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
PyI3irqOauHChUFPjSRBWPRktvs/sJZIzN2N1r9/f9v+X3/9tbTGkf4Pe5D/
Iuz+D9Ry8dr/gTWApUuXlsZ97LHHbPvj+VPr/dL/4Q30fyRGWOQy8Yb//e9/
0v0Pn3SUGDBggDR/sY6HSrrXaiOO5uqrrzbnhjibn376KeFxMhHUuoKv/8sv
v9TXGMDPj3dJkllQXxC/WbFihSv5T0jQUB4SYs8jjzxiPiOwpaUC3vMRF2jE
k6itUqVK+prlZGrxYb1znTp1pPH+85//6Dl2kxnr7bff1mbPnp3wtuRfcB2R
Wx81Ho1rgnhQ5Akg0SIsejLb/R9YrynKuBYtWjjKy65du9L/4QL498Pu/0CM
j9f+DzXuBXrTaS3Cnj17JD1O/4c3IA4H+fiNtnjx4qCnFGrCIpeJN3To0EGS
RZ988knQU0oIvIugbo+4/go+izDQvn17c16IjV+6dGnQUyIkrVBfEL/p27ev
eZ8xbx4JM5SHhNhTsWJF/flADqNk4zNgn0ONPvG7Bu/f+E7A+kaMLf42dOjQ
hMaHffKee+4xt0eu3GS/mxYsWKBVqFBBH6dUqVJJjUFkkPeqd+/e0jUePnx4
0NMiCRAWPZnN/o9vvvlGqkmNf+/atctxOzFmgP4Pe1588cXQ+z9wvb30f3z3
3XeSHwP3lNs1waLOpf+DBEEY5DLxBujZyy67TIpPiGLcNnyY4nGULFlS2759
e2DzwXkdOXKkpDdef/31wOZDSFBQXxC/MfLIQu5D9iYC197mgPOG+r3r1q3T
10SPHz9emzFjhvb999/r54h4A+UhIdbs3bvXfD6QmzZZxHVHaA8//LBeH9sA
tpObbrpJWjMFW59b1JjzZHTH7t27tTvvvFMaB74f4g2wLWNdsWhn4/qz6BAW
PZnN/g8151CrVq1cb4uY7Pnz5+t5HYg12ej/aNeuXUw8kVsOHTqk31OLFi1K
OXclIckQBrlMvOGrr76SZFHbtm2DnlLSID7OWDuGhpy8ffr0SXstibVr1+o5
6MXz2q9fv7TOgZCwQH1B/AR2JOMeS7S2UravvcU3xPLly7UHHnhAX/sg6iyx
wT7YqVMn7eDBg0FPOfJQHhJiDWpzGM/H5MmTkxoD64xE2YU4ACuf+Keffir1
gy3KDcivJG6X6PpmxCagNrdV/bvrrrsuobG8ZOXKldqYMWP0hu/CTAA5i8uU
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
MEZDbiaSGqj7EYZnIBOgXCaEEOIG6gtCCMmB8pAQQgixJyx6kv6PaPPoo49K
tt8nn3wykHksX7484Xm8+OKLkfZ/TJkyJWH/B/GeZcuWSdeBNeWTh3KZEEKI
G6gvCCEkB8pDQgghxJ6w6En6P6JNWPwf48aNk+aB3FZORN3/gXoS9H8Ez4QJ
E6Tr8NxzzwU9pchCuUwIIcQN1BeEEJID5SEhhBBiT1j0JP0f0cat/wO1KrZu
3ap988032ueff64tXbpUW7hwobZnzx6p36FDh7QFCxbo/ozZs2drP/74o6t5
oO6IOI/evXtr+/btk5pKsv6PM2fOaGvXrtWmT5+ujR49Wps7d65+HLivkgH3
88aNG7WPPvpIe+211/S8VG+99ZY2f/58bceOHZbjfvXVV1ru3Lml+c+ZMyfm
mNEwX7vzv3PnTtfzxHOK437//ff14542bZq2adMmfXwn/L7+yZDK8Yh06tQp
4XuPWEO5TAghxA3UF4QQkgPlISEkCH744QdtyZIlUtuwYUPQ0yIkhrDoSfo/
oo1b/0e3bt2kfkbD9gB1KeDDuOCCC2L63HHHHdrBgwctx4VN/ZlnnrHcTm3w
JYgk6v+ADR/HV7hwYcvxCxYsqD399NP6/eiGs2fPai+99JJWtmzZuPPG/lCr
BKDOydChQ7UiRYo4Hq/R0N/u/Pfs2dNxnseOHdMef/xx7dJLL7UcA+e+SpUq
2po1a2zH8Ov6J4MXxwN27dql+6pUP5Sbe49YQ7lMCCHEDdQXhBCSA+UhISQI
rrvuuhi7xzXXXBP0tAiJISx6kv6PaOPW/7Fy5UqtVatWMfIRvotPPvlEK1So
UFz7cbVq1bR//vknZtzWrVu79gP89NNP0raJ+D/gZylXrpzZ9+KLL9bq16+v
NW/eXMubN2+Mvf6PP/6Ie94OHz6s3XjjjdJ2t956q/bggw9qNWvWjJn7Pffc
o28HX4bb4zXakCFDbM+/k/8D8Rqqf6ZChQrafffdpzVq1EjyV+DfTzzxhHb+
/Pm0Xf9E8ep4QCr3HrGGcpkQQogbqC8IISQHykNCSLrB+tRE7VLJNEK8ICz3
E/0f0SbR+h+PPPKI1B+2/osuukj/d61atbThw4frMRGVK1eOkX3IU6SyZcsW
Pc6uX79+Ut+2bdvGxOLhvhJx6/+AbBft86VLl9Zj/QyQL6lDhw7SWF27drU9
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
jdxDLImxb3HebhD9nWhhsJ9DDiH+xO56ZCM//fST9G6CcwJ/G2JcRZ8d2iOP
PBL0dEkcqC+IVyD2y2//B/ITEuIXlIeEEEKIPWHRk/R/RIcuXbq49n+A33//
XatZs6a0DfKgIydJVNi/f7/26quvms0qx3zYgS8qmW+wTDj2oEA8lHjOuU7O
HZTL0ea7776TcmM8+eST0u9//PGHHpOAhmfEikWLFpnbJxoziHcJ5APp3r27
OQ/kEMff3ID1uca+EcvoFuRPEp93xEaGBZxzMWd8sWLF9Lxh2cjx48f1vGvG
uShcuLDuJzOArkSdGPFaYq0zCSfUF8QrEKuH+EQ/G3z7hPgF5SEhhBBiT1j0
JP0f0QE2nUT8HwC5YbH2Vtzuqquu0q8NSQ9GXV+uQUsfYt0BNNaOdwflcrRp
3769eQ0h91FTI1EQF2KM8dVXX7nerm3btlquXLmk5w71VZGj0S3IOW5si3gO
N+D9pXjx4uZ2N998s/4OEyZg4xdzjz311FNBTykQ4BcT7w/UmVFBDnqxD2rC
HDlyJIDZEieoLwghJAfKw+hx7tw5Pffea6+9pr355puO7xqoJff+++9rkyZN
0lauXJmmWRJCSGYQFj1J/0d0SMb/AUaMGBETBz5nzhyfZ0sMUGOC/o/0MmHC
BOmcP/fcc0FPKRJQLkcXxBSIsR/Il5gM8BUaYyAGzS2IT0QOo0KFCknPHvww
o0ePduVzx7uFkQMJ+c3dMGPGDGl/GzdudD3ndIJcTsYcixYtGlOPKNPBWgzR
B1SvXj39XdCKxo0bS9e0b9++aZ4tcQP1BSGE5EB5GC1WrVqllS5dWnrXQI5q
q290vK89+OCDUl/UVSWEEOKesOhJ+j+iQ7L+D9QaFe0OaG3atHG1Lequr127
Vs/LDhvW3LlztT179tjaLQyQ5wJ5vvEegbrsiG3HGgtsK/LLL79oy5cv18aN
G6eNHTtWe/fdd/X1GKiZsXXrVu2bb77RPv/8cz1nOrbfuXOntD1yfO3bt8+2
/f3331J/3Nvx+tvZpHA8q1ev1m1tOA+Y75dffulYoxfrp0WbpOF7sto3zjVw
c+zpOm6Q7D2QLDin2B/W2GB/06ZN0zZt2mSeHzd06tRJOufI96MeM4mFcjm6
wMcn3vOIO0sGMYYEsjgZ4IuBfhL1jlsfZMGCBU37uBvq1q1r7gO5lcLKZ599
Jl2f9957L+gppZVnnnlGOn74qO1QYyaRE8svfUOSh/qCEEJyoDyMDvieV3Nj
GK1Ro0ZSX9i4WrduHdPvvvvuS3r/p0+f1r9z/Wyw3xFCSJgIi56k/yM6JOv/
ALfddpu0bYkSJeL2hw0eueORn9vq/QA2qqefflq/9lZ069bNcjvYoQFiTLG+
16oPfrPbvmfPntJ+kMvLqp/dutGPPvoobn/EtBr8+eefeu5x2NdQN8WqP96f
rHJ4HDhwQBs6dKhWpEiRuPsTG/rHO3fisft53F7dA4mCPDmPP/64dumll1ru
D+vCq1Spoq1Zs8Z2jF27dum1UlSfk1XbsWOHJ/POJCiXo0vFihWl+/vnn39O
apx27dqZY+AbLRXGjBljjoXcWKiF4YQhM2vXru3YF3VFxGMOc547yEnoXWOu
qM2VTSA2SLxW8O/bcfjw4Rh5jdowJFxQXxBCSA6Uh9EA63OMd7FatWrp3/CI
yRXfN/D9a9CnTx/Lb0is2UyWefPmubYNJNuYa4IQEjbCoifp/4gOqfg/Ro0a
FaMb7erfIvagXLlyZj/k365fv77WvHlzLW/evNIYyO9uZdNCXsxWrVrF7BP2
cuRCN9b4WjX4P+y2V/0fqHsrzlVs8K+oNpaDBw9qHTt21I9J7Y/1HYixgO/i
scce0+Ngjd/g/4B9UX1HMn6bPXu2tB/4MhJ9VxkyZEjccyceux/H7fU9kAiY
b9myZaVxK1SooK+vwVocIycOGv79xBNPaOfPn48Zx2qNjl1DfBKRoVyOJmr9
b8RdQL6L8U7w57oBPk9jHDVeL1HwbiHGgCAOMB549zD6op6IE127dpWOG/Xf
EyWd+Z8hw8X5xvMBZBKqPwP6xCl2UvQVoVmtMyDBQn1BCCE5UB5GA8Megm96
I1fC8OHDpfcNrBkEs2bNMv9Wvnx5/Z0N76Y33XSTvv4mWej/IIRkI2HRk/R/
RIdU/B+w76i6cf369TH9YCcX87cjN6a47hI5iDp06CCNAxuUHWLOc8OmZYyP
3JlYe6HGVoj2J3V71f8BYLvPkyeP1O+uu+6Kez5Qf1bsjzXPBmL+FzSs0zVi
BXDvwjdQtWpVqQ/8OWKsKXwoS5Ys0dutt94q9UVMifGb2LBNvHOnHrvXx23g
9T3gBGoMFChQwBwL68Q//PBDqQ9y+l922WXSPvv16xczFmyTOJf4Tb3v1PMd
thrJYYByOTogfh/PXZ06dVx9C7nxJ4Dx48eb28BXnSpifuVly5bF7Yt8iPGe
bxHI4vz585v98S2bKOnO/6zmwIIfNxvAdReP+8Ybb3TcRsxrhga/HAkX1BeE
EJID5WF0wBoW8bt28+bN0vtG//799fU/xrcpcnCq3+ipsG7dOq1atWq+tlTX
LxFCiNeERU/S/xEdUvF/wI6l2sNgA1a58847zd+xzn7btm0xfZCnSMzrhLWc
dmtmFyxYYGmLM3I9AdU2Io6lbm/l/wCovSv2c6r9K+YXRw4rxMMaiP4PHOdv
v/0Wsz3Oi5o71M5WqM7N7ZoMN8fu5XEbeH0PxAMyQs3NNnXqVMu+OL9iHAj2
afc+ihol4pjPP/98wnPLRiiXowPiudz4PRJ9BubPn29ug3/H48UXX9TjwfAM
W4G1daJ/2ylOTMxnhRpL8UB+AvH4UPMnEYLI/4yYNXH7u+++O6HtrYhCHmnU
cRKPu2HDho7bqPe3F+eKeEs26ot0xosRQqJDNsrDTAF2KTH3cuPGjbWbb77Z
XBOTSqwHIYSQHMKiJ+n/iA6p+D+QC1613cycOVPqg1rb4u/x1gtj32Jfu7zr
qNWg7tdqHSdqNnTv3l2PeRDrXKvb2/k/VP9O8eLF9fvPDjHHPWpOiGAOWFeM
hjUgdtx7773SPlHX3Ipk/R9ujt3L4wZ+3AOJHCPii+PNv2XLllJ/2MisoP8j
OSiXo8P27du1xYsX6834TjMa6m4YvxkNsRVuEH0QTs/N4MGDbfUJnuMePXqY
v8N/4AR8n259L5s2bZKOOZ6sVgky/7MYW+cmDsKJKORRgK4Rx0N+RydwPcVt
GjRokNIciPdkm75Id7wYISQ6ZJs8zDSwxsLq/cfu254QQkhihEVP0v8RHVLx
fxw6dChGp6v2JdQmF3/HGjc7sJ5N7FuvXj3LfsixJfaDzUn0bzihbm/n/wBq
TXC7Otl//fWXWcMCuelxbpLhhRdekPaHtYBWJOv/cHvsXh63H/dAPHr16iWN
IcYFWSGuTUdDbLIV9H8kB+VyNEGOPuPa4dnGGuVkgd6+8sor9bGQ5y8eov8D
cR6IP3vppZe0AQMGaDfccIP52zXXXKPLHydatGih90c+Qafa6+ozjhgDtwSZ
//nqq682x8N6w1SJgv9D1YEPPPCA4zZqDS2cbxIusklfBBEvphKFWC9CspVs
koeZiFWdVLzjZht+v0+ysaWzkXARlutC/0d0SMX/gZoVqkz48ccfpT5lypSR
fkfNXDtgDxH7wl5lhRqfgPrZiaBuH8//ARu3m75Ys2v0QR2LZHn99del/SG/
gRXJ+j/cHruXx+3HPRAPtea5ne/GQM15g2aVU4f+j+SgXI4e8HWINcarV6+e
8pjidyBiB+2A/R8+U9GmbzT4Q+CbnThxoqtaO/BDIKcdtoWuc0KUZ2gzZsxI
6BiDyv+MOAZxP2fPnk1pvCjkkRbjDtG6devmuA3qZInbwIdGwkW26Isg48VE
ouDrJCRbyRZ5mKmo+Q/wrhYvH0Gm4reOYWNLZyPhIizXhf6P6JCK/+PLL7+M
kQmnTp0yf8c9oP7erFkz3V9h1W655ZaY/hhDRbXhI7dUIiTi/9i7d6/Ut1ix
Yvq9KoJ7T4yXSCWn53vvvSftLyj/h1fH7dc9YAfkhlgbAG3Xrl2O28EOKW6D
9dgq9H8kB+Vy9FBzyCUqY634888/zbXOw4YNc7UNalvs379f96vv3r3blc9D
5N133zWPAbm9nEB9dPG4U82tn678z2rexJ07d3oybpi56667pGN++OGHHbdB
/Rdxm8qVK6dhpiQRskVfBBkvJkL/ByHhJVvkYaZy4sQJSRb6WXMMtjWsL/Sz
4Z2WEELCRFj0JP0f0SEV/4dqD8baNZGDBw+m/N0krn8zSMR/YUWi29evX1/q
v3z5cul3sda6mrPADuQcwPlDXpeuXbvqtX4RJ5EnT55Q+D+8Om6/7gE7UFde
3V70ydlx3XXXSdvA3qBC/0dyUC5HD8gl8V6HH8EL4EfBeJBzftd+RC4+w/fQ
tGlTV9vApige91dffZXyPNKR/1mtCZANNZHVXEBufHSoCSZu40WtFOIt2aQv
gooXE4lCrBch2Uo2ycNM5KmnnpJkOmo9+YWay9mP9t133/k2f0IISYaw6En6
P6JDKv4PtZZojRo1pN/xXSf+jm+4adOmuW74NrRaa5Bu/wfyEoj9O3fuLP1u
5JdHg08gHvi9ffv2Zs0Mpxak/8OL4/brHrBj27ZtMefQzZrxOnXqSNu89dZb
MX3o/0gOyuXoIT7baHiuvADxHEaupkqVKpnrnr0G7xioHYT9oO7IsWPHXG2n
2tRRDz1V0pH/uXv37tL4n3zyiafjhxHU+4inn6wYMmSItA3iDUm4yGZ9ka54
MUJINMhmeRh1xLg9sSH3oR8wlo8Qko2ERU/S/xEdUvF/wN8hbou1syJHjhyR
fkcedi/yXqbb/4H4VSOHPFqhQoXMnEyIBzXyLcWr63vy5EmtVatW0n5z586t
r0ueMGGCtmjRIn2t8bPPPpuU/8OtnS6RY/fiuP26B+z4/fffY97XMAcnrr/+
emmbBQsWxPSh/yM5KJejhWqDQw0eL59Z1CyHzMDY8FGoNaNSBbLJ8N8gJjGR
XFCPPfaY536EdOR/Vv02qM2V6ag+Hzd5Jfr27Sttk2jtMOI/2a4v0hEvRgiJ
BtkuD6MK4iSMdY4lS5aUZPmHH37oyz4//fRTPVe1n23Hjh2+zJ0QQpIlLHqS
/o/okKz/A+tp1ToLqF0hgmsFG7/Y5/DhwynPOd3+D9CmTRtL+7gYAzN16lTL
bXEvYx2faquBHfD/2bvz8CvG/4/jl6WibKVNRCJrZImyRFlCtrKUKH5CSrbQ
ikhZs2QrS7ZU1kilRQoVKktSokULhW8LLeTP+V2vOdeMmTkz58w5n3POzDnn
+biuueRz7pkzZ5n7nnO/7/t9e2W7/of62PLx2ivyuiVf34FUvHNrwszXtdYh
tTa/vDfEP7JDvVxctF6O83vesmXLnD/HmjVrzJx5Or7aEfVlV3QuiO4xevXq
ZcdstT7EggULMjqGd65GqrotrELkf7bmulibX9uSiWLII92vXz/Xa27evHna
fbRGiHMfrSmNeCn39qIQ88WKiV8siI0taCs1pfq6SpnG3CmftT63vfbayxyP
4vyOdu/ePepTBICSEZd2kvhH8cg2/uHdb/fddzf++eefpHJa29FZTuvqVlQU
8Q/vvNIOHToY27Zts8dJK6dnUJ6lmTNnuvbVmNOg8b/e9VnDxj80fyQfr70i
r9uSj+9AKt61PPQaUvn7779dsbztttvOnEfiRfwjO9TLxcUbg81kTmCmNG/t
oosuMnbYYQczJlIRuudQfj3N/cg2b9Ubb7zheu0PPfRQhc5JCpH/2VnHar5O
RRVDHmnn2vbatC50Ou3atXPto7mXiJdyby8KMV+smOS7HmIrra3UlOrrKlUa
e2LlE9Dvyo8//tj8uxUP0ab7Nae+ffsa48ePj+J0AaDoxaWdJP5RPDQOwXnv
GKava9GiRWZ/lXO/oL5g77yHbt26hTovK8+Sn9mzZ7uOmWn8I5v9dT7KpWLt
o1zM6jux/j9VP9mgQYNcz5dqTLHyYTnLPvXUU77lvHlaRowYkfY1SKavvSKv
25KP70Aq3rULOnbsmLK85iI7yx9//PG+5d555x1XuXvuuSer8ys31MvFxZtX
KF38MBd+++23nBzHL26ZCW98+LbbbqvQ8QqV/9laH1mbfntXVDHkkfaOK9C2
ZcuWlPtozRln+bDzJlE45d5eFGK+mFMxzPUCylW514dxp74qzfHQGFCtV3nk
kUfan9mAAQPscsoP7qzX586da/5dv931/xp3t2LFiqheBgAUrbi0k8Q/iofW
DM0k/rF06VLjwAMPdO3TpEkT8zP14x2jqW3KlCmBx9fcgi5duhi1a9c2lixZ
4ltm6tSpruOFWffUSc/v3F9zKcJQrMCvH0fjbVPlG1H/u7O81vX2o/4g53ob
2h5//HHfsoo7OMtpDHUY2bz2bF+3JR/fgVTGjBnjei7lw0rVL+a9L33kkUd8
y7322ms57RstF9TLxcU7f6qi8zKKiXe9oiuuuCLrYxUq/7PmXTqPnYs1LYoh
j7TaiZ122sn12hUTCaKYk7OsYkbp5i6i8Mq9vSjEfDGnYpjrBZSrcq8P4045
Vv3qPOVfdc7b0+9+5+MHH3yw0alTJ2PHHXc0/793794RvorScOmll/p+FrnI
YwsgvuLSThL/KB7etRaD4h/6PMaNG2f2WzjLH3XUUcaqVasCj6/PtVGjRkm/
5/zysv/www9mLMUqd9lll/ke05ujRPcZmfCOydXasWF4505YW8+ePVPu9+CD
D7rKn3XWWUn9LlpvQuNHvMcO+jy8r0H9QM41KxSX0Dhulavoa8/2dVvy8R1I
RXXBMccc43q+oHku+k47c181aNDA2Lp1q2/ZoUOHuo6pe1ekR71cPP78809z
HJr1mWnOfjlRO2f9HrXqg2wUMv+zdzxApvMhi5l3vqTWBAnineenXFiIn3Ju
Lwo1X8ypGOZ6AeWqnOvDYvDcc88l1XdNmzY18yo76XdltWrVAmMl+p2M7Klv
0Ns/xcaW7w3xEJfPg/hHcVCuEG+fe/v27Y1PP/3U7PPWmhLPP/+8ceutt5p9
ON7rXmNjNQYzHb/fdOpjO/XUU80+esVg1B/ufFyPbdq0yfd4l1xyiaus7ik0
LyUszZVw7q9xoGHGOOs7tv/++7v2VV/Z6tWrU+43Z86cpNd/7LHHGgMHDjT7
a5o1a2bnE2vRooWrnMZi+73HypHgzHmiTbmp9No0BsJaz3uPPfZwjUHJ5rVn
+7qdcv0dSGfatGlJz3fzzTeb/bvy77//mr/79Z5Zj+szmD59uu/xVB/pfJzH
073W+vXrszq/ckK9XDwmTZrk+o6XYx+xYsLO9yDTvrtC53++7rrrXOf74Ycf
ZnWcYuSdk7fPPvsYmzdv9i3rHRuY73WokJ1ybS8KNV/MqxjmegHlqlzrw2Lh
zRere+ag34Uau+kcX1OpUiVzLVXmoVac2s+o+8LZym9DPMTl8yD+EX933XWX
mV8om+td+z3zzDMZPd/rr79u7LbbbqGOr3H1fms//PTTT0l90Nam/n6tK5Fq
nUjNLQjaX7/RhgwZkvZ13H333a790q0tITqnzp07p3zNigUozqSYgvcx5Rsb
OXJk0nEVO0l1zEMOOcQcd5yL157N6/bKxXcgExMnTkyK26k/UvOOrX4Ga6tZ
s6bdT+ml8dWa5+R3norZ9O/fv0LnWeqol4uH2gXn9zsX638XG/UHOt8DxSZS
iTL/s57binVrU1ylnNZK1n2j5ug439drrrkmqZx3jHvLli0jOFuEUY7tRSHn
iwEoHuVYHxaTdevWmePtNHbul19+SVteYxdVXuMvtC9yw5kTfPjw4eY4JGvT
fTKA0hWXdpL4R/x51wH1blqHQus7KNah/hzNz9Qa51ofNtt5murbadu2re9c
Ej2fnmPevHmB+2tca6pz1liKVO2cch2l2v+UU05J+xq0HoVzn2+//TbUa9f3
U/k9nX1V2vT+6j2ZNWuWWU5zcpz5Z6zNLw+9jqm1KqpUqZIUC9LvZef824q+
9mxft1dFvwOZ2rBhg7mWiOav+L2vGi+sPt9U+SXUh5nqvSu3HEGZol4uHqed
dprru12O60OrXj3ooIPs90Dx51SizP+sz8d5zKC1i0qZ+h2s+ZPOuNPKlSvN
NlBj5xXfdraPmcxdRGGVW3tR6PliAIpHudWHQDbOOOMM+1oppzULAcSnnST+
gXSUh0hrlU6ePNlYtmxZUcXn1d+l/n+/9SvCWL58uTk3Qa87F3Q9aX7HhAkT
zDky+VLR1+1V6O+A1gnWHFnld1NOMt0jldNY6ahQLxcHXX/OnHrqi9uyZUvU
pxWJJ554wtWf/t133wWWjTL/s3InWMfQGlCK95ajl19+OWkcgDZvXETxbmve
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
fvnlqE8JacSlnST+AQAQ6mUAQBi0F8iX8ePH29+vRx55xLcMY2+TeeMfWgcl
iH7L16hRw1U+05z3+A/1IZDsoYcesq+NsHkMnZ577jlXHaW8iKlccMEFoeeK
iDM+o613796hz01z6WrXrm2ub+KMyXz77bfEPwpA/c+1atWyX9+xxx4b9Skh
jbi0k8Q/AABCvQwACIP2AvnSrVs3+/v1ww8/+JZh7G0y5b7fd999zfkwzZo1
M3+Hp9KqVSvXe3XKKafk/RxLFfUhkOyMM84wr4vtt9/e2LhxY8b7e+MZS5Ys
CSw7adIkY4cddrDLHnTQQWYfZSpdunRxHf/rr7/O+By9iH/40+c/a9YsM170
+OOPm7Gp+fPn249v2bLFjG9pDfuwrr/+etd7PWfOnHycOnIkLu0k8Q8AgFAv
AwDCoL1AvqgPP10uEsbeVpy37+iEE06I+pSKFvUh4Kb1GHbaaSfzutCa4plS
f2S1atVC5aaaPn26/Vzatttuu7TzTdRuOI/fsGHDjM/RD22Q2+rVq41OnTqZ
n4nzfXHO0XzggQfM91//r/ViwvLmwIpjO4v/xKWdJP4BABDqZQBAGLQXyIeF
Cxfa360ePXpkvD99T+F17NjR9V6lWit4+fLl5lhdreOuvsYJEyaYufbXrl2b
8jl++eUX46233jLzmI0YMaJk11inPgTcnH3T/fr1y3j/zz77LFR+Ps0pcMYx
KlWqZIwePTrt8TVfznl89dHnAm3Qf5S/zBmX0vwc5am68sorzfmGfvGQNm3a
hD7+v//+69pX84UQX3FpJ4l/AACEehkAEAbtBfLh4Ycftr9bymeSKfqewtFv
cWu8rbXpvfejcdzOvDLOTf1bftS3cOeddxo77rijq/yqVavy+bIiQ30IuPXp
08e+LmbMmJHx/s61Q7S999579mPqn5w7d67RuXNnM95hldH6T4q7hDFv3jzX
8e+4446Mz9EPbVDCCy+84JrzoXxkVp5Ky3333ZfUpgwePDij59ltt93sfY86
6qhcvgTkWFzaSeIfAAChXgYAhEF7gTA0PvOff/4JXf7UU081v1dVq1Y1980U
fU/hePOGKL4RNJdDn9/AgQONY445Jqmvypm/3bJp0yajRYsWSWXr1q2b75cV
GepDwE3j/HVNaG6G+hYz5V3747fffjP/PmTIEKNy5cqux4488kjjtddey+h5
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
2tfZRhH/QBTiUC8DAOKP9gJhOO9ttR1//PFJZZRDybp31jyFiijnvic/L774
ouv90JycbDz77LNJ8Q9t3vUxX3755Ry/guJAfYhSoTq0Y8eOrvittU2ePDnl
vur701pPVrwkG97+o3R1ireOO/LII0M9z+eff+7aL1e5+8q1DdK8C+frViw/
iL4nhx12mKu8xqlmY5dddrGPke13DoURl3aynOMf3pxD559/fuh9p0yZYrz3
3nvm+g3wV47xD+eYB22aTxTW6tWrze+Ucifna+1DIJU41MsAgPijvUAYc+fO
TepD8+a3Gj16tP3Y66+/XqHnK9e+Jz9a49DZh6lc6/oNnw3l8Xe+r1rjULnA
Pvroo5yM4S121IcoBY899phvnNPazjjjjJT7O9dxyrbOa9Omjes5040jvemm
m1zlzzvvvFDP8+uvv7r2u+KKK7I6X69ybYPUJ5purIPFmSPN2mbPnp3xc2pd
GOcxyHMeb3FpJ8s1/qHX7Mxjqi1oTnYunkv3+qNGjTKGDBlivPrqq+ZcPeU3
TEfziLUWkHfzy9GlOsCv7ObNm5PKak7jd999Z3zxxRfm/fGECROMcePGJc1b
XrRokTFy5EjjiSeeMCZOnGiudRdWtvEPvS96v5QzUu/Xu+++a+aHCjPn0o/y
C3766afm8ZTr8amnnjKPqfnluYx/6FrZbbfdCvKdsqxfv96cJ6rPSO+VPqfP
PvvM/M6lkq/vlZ9///3X/K6NGTPGfv+VY1PrjK1cuTLU55rpMTR/RvO0NMdr
xowZ5ndX3+9M4pXZvrdBz63vsJPiXe+//755XL0u5RaIWtT1MgCgONBeICzv
utve8Wbqd9LfNQdE914VUa59T166x1QuMef7EOZ3ZxCN5bWOpc/J+g3g/T2t
f6e7Ty5F1IcoBdZa4s2bNzfeeustc0ymt596wYIFgfs719TIZj1x/Z6vUaOG
fQz1q6TrJzjuuONc5/f000+Hei71Xzrjww0aNMj4fP14Y/5h56PkQyHboOXL
l4d63VoTxNsHW7lyZbOvJ1NTp051HSddrjREKy7tZLnGP7zXi7a1a9fm9DnU
x6yYtLMed27KjXTooYeauWSDHHPMMb77ah12L/XR+pW9+eabk8rqPtiv7HPP
PWc+rrpbcVu/MkcccUSoPGGZxj/Ub6y5h7vvvrvv8yqnX9++fUPPjVCsRu//
Hnvs4Xs8bd7HKhL/mDZtWt6/U6I8AQ8++KB5b+LNq2xtyjM8fPjwwGPk63vl
pDFh+q4EnaPzt1LQvVS2x7jmmmt8y6VrF3Px3gY9t5UrT2uSKL+DM/eetamP
QLHJqERdLwMAigPtBcJSzhTv7x9rPIozX4ruvSqK+Idh/k4/6aST7OfeZ599
0ubh1xhrrYnoR79nvb8DnTTe2vn4pEmTcvZaigX1IUqFc6yg+ux0vTuvb62d
G0TzQ1RG/dl///13xs/tHZd66qmnpiyvusZZvlKlSuZv+bC8uWC++uqrjM/Z
S2MbncesX79+hY+ZrUK2QepPdvZtKHalPmUn9c0dcsghSf0fzZo1y+o5r7vu
Otdxsom5oXDi0k6Wa/zjjjvucF0v++23X06Pr7Hfut90Pofiyu3btzdOO+20
pHVHVCf5xT3ffvtto2nTpkn1hOZteOnetXPnzkn9qooBeL300ktmXeM9ruYr
DB06NG1/s8YUaU5FKpnEPzReXu2DVVbt5oknnmjOY3OupWT1Eaebh6J1OJzH
01arVi1zzJliHPXq1fN9XRWJf/Tq1Suv3ynNc7jxxhuNqlWr2s+hz0nrPjnH
eDkf07wCP/n6Xonqgy5duiTdj7Rq1cr8/jdq1CjpeRVvy+UxFN/UZ+0tExT/
yOV7G/Tc/fr1M9tl7xwh76bxEpqzFIWo62UAQHGgvUAmmjRp4rrXsdah0Lgb
62+DBg2q8POU69hbJ72Pzt+YmoucivMz8BuDoznMfp+dxbs2SPfu3XP6eooB
9SFKlXISOq9v9dH4xVPVj6UxgiqTLm4RRGt9OJ9Lv/eDcvZpjpv6Wpzl7733
3oyez5u/T+NsK8rbH6Q1kqIa21joNmivvfZyvXbl0LAo78pRRx1l/l19fM7x
zj179sz4udRXpL496xjqs/HLY4L4iEs7Wa7xjw4dOriuz7POOitnx9b4buda
PKr3vH3/uj+vXbu26xyCrn3Fz2vWrJm2n9qiPt4w/dT6HE4++WRX2RYtWtj/
Vgz/7rvvNtsCjcny9tPqnFLNVQsb/1Cb4OwTVmxC47csmq+tdbicx1LfeJBf
fvnFVaeqr3rYsGGuMjpvzV/wvqaKxD80pt95LOXZzSXv8Y899lh7rJY+S8WQ
Gjdu7CqjOTO6hv3k63s1YsQIVznFGp25slRf3Hnnna4y3vhHLo4hXbt2dZUJ
in/k+r31e24d05pnq7m6AwcONO6//37joIMOSvoeKldeFKKulwEAxYH2Aplw
rvGhrUqVKua8b/3OsP7mvPfPVrmOvbXoPXX+BtX9cyr6Td+6dWu7vDcPsvTp
08f1nmq9YSflxHU+rj4wZz+U1sX15oAtNdSHKFWqI/bdd1/XNa4xfV7Kp249
rj6gbHjH82vTeiDKmeSkvO0aV+wspz6tTNc30m985+9wrWuUDeUKV/ulPjP1
+3lfg9bl1hjjNWvWZJ3PPRuFboO8bYViZRpDq348Kzam99ubh0fjcjOluL7z
GNmun47CiUs7Wa7xD40jd14z6v/MBb3mU045xXVsrVPg5/PPP3eNqVcdoXHo
ftq2bRu6n1p1SJh+arnvvvuS6mj1677xxhtJZVVvesuqnzpI2PiH4gRWGb0f
CxcuTCqj+3Fnriq9V1q3ykvfLWvuZdB9urOs4s/OshWJf+TrO2Vx9tHrvfAb
e6H3zmpfrE3fsyD5+F4555UovhLUzp9++ul2OW/sIhfHEO/v4DDxj1y9t97n
tr7fDzzwgOt3oe6ZvPnodL8ShajrZQBAcaC9QCb029HbX3XXXXfZ+Vj33nvv
nDxPOY+9lR49erhev8aLaT6Gd9MYnUsvvTQpV4Hf2h3e37UaE+R18MEHu8po
zoj8/vvvZv4c/bZMdc9c7KgPUcqefPJJ1/Wt3O76/eqkvv9Uv8nD8I41tDaN
Zd1///2NE044wWwrvI9rDalscydoHU7nsbTeaFjKbe3MHRFm02tRX0Mh6sNC
t0HK+54q77z63ZSf7LHHHnP9XXGhTOm9t/ZX/0wmec8Qjbi0k+Ua//DWr926
dcvJcbWWh/O4ipenmovlzZmq+tuPYqdh+6m9MdVU8Y9nnnkmqW7S2uBBvGsY
enPAOoWJf3hjtxdffHHg8bwx5d69eyeVmTVrlquM5kWmev+97XlF4h+K7efj
O2XRbxWtc6Et1XguvQbneaSKqefje6XfOFYZ5Y4Kil3o95PGeWjzrpOSi2OI
93oMin/k4731Prf1W9+P1phzlosqX3XU9TIAoDjQXiBTWpc2qF/Em1MpE4y9
TdAcC+WKzaQvzrlpTo6XfvM78xBrbonfOozOnFvaNA9f6wRYuYjVP5Uub3Ix
oz5EKVPOCGudJmtTH5KT8hzo74qNZJOHaNOmTa7868pdqN/k3hittams5oZU
dM0HzU9zxjA0njXs+XtzdWeylWL8Q5Q/wxsP11hWxZms9UD0uVmPqa80U/Pn
z3eNSU21Jg3iIy7tZLnGP7z56bTudi6oz9t5XM3rTuW9995zldd9pZ+rr746
dD+1t981VfxD6zg7y6bL2aS5LN76OyjeGib+oTFIzjLWeCE/ygnkLKsxAF5a
w8FZJt38y+nTp7vKVyT+ka/vVKa8v0Gef/75wLL5+F553wfl8sxULo4hs2fP
dh0n3frn6WTy3nqfW3ndgn53K4eps2w29wK5EHW9DAAoDrQXyJTiFN68q9am
ObOZYuytW0X64rQpL7OX1gN2lgnK669500Hr2+n9Vm6cUkZ9iFJ3zz33uK5r
5Yqy4gTqC7JiF6nGsqbiHWepHCWi3876nfzZZ58Z48ePNyZPnmwsWrTIzI+e
K955gwMGDMjZsaPkHLdZ6H4p5aOfMmWKuY6sM2auvmVnjkatSZCJLVu2uNaB
1bH0HIi/uLST5Rr/8OYxzNVYfW+MWn3GqShPq/c+0W9t73zFP5577jnftiaI
1mCw1jCwtgULFviWDRP/8M5hVA7ZIN57cM0R8PJ+ruqDTsV7zIrEP7xrcKXr
a9c4B7VFqbZ067z78c7p0Xi7IPn4XnnnlCjnk+KAGjsSVi6OIfp9m8lnkk4m
7633uVPdD6pOVE43q6zGzUUh6noZAFAcaC+QDb+8u5p3kE1fFmNv3bw5bTPd
1KfkNWbMGFcZv7n3Fo3p887fVl4D9V2WOupDlLr169cnxZutuLXm11l/U99S
NrR2ufPYhYyZqu9Ta3Naz61YzrRp0wr2/Pmifjvli9eWaR9KvnjHhyoXSyac
Ocs133PixIl5OlPkWlzayXKNf3hzFV1++eUVPqbeB+e8PW0//fRT2v3q1q3r
2mfOnDlJZQoV//DOZfTjHZs/adIk33Lp4h/63nnvvbUO/TnnnOO7nXTSSUnl
nXlq9f57572niqfIjz/+6CpfkfiHN6dauu/U8uXLXeu/+G2Z5KC0aK5E2D76
fHyvNH7DL/+AxvxpPIXf2or5OIbkOv6RyXub6XPrd6JVVmPoohB1vQwAKA60
F8jGxo0bzVyjzvsjrdtXiqIcexsVfb6aW697YL88WaWK+hDlQL/9nXW31hwX
/cYN2/cSRH1Azn5tjfMvpBUrVphz4KxzqFOnjjnPBLk1cOBA13do3rx5ofZT
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
qjxc3u+UX/xD8zKcj5911lnmdeqkdWP8Pv8+ffoEPneuv1eK4VuPa65EUB4p
b55P5+eTi2M4z91Zxi++la/3NsxzW/zWrlGsr9DiUi8DAOKN9gIAEqgPUW70
+9zKX6HxpOozBIAgcWknyz3+obkZyjnl7QNWbh+tvaRzVf6iuXPnGldddVVS
/6ffmiGaw+Utd/PNN9trQinHlub5Va1a1X5c6/9oLYogmzZtMvbcc0/XMbWP
+usvvfRSo1mzZq54i7Oc9vNbU0T84h/Kw6McX04a++5dWyNVriTFcfbff39X
ea3x7deX7e0n1qY41Kmnnmpce+215lrU3ufWY3pP/GjNDe/x1Hd93nnnmZ+r
5jhYf+/ataurXJUqVXznlWRC5+WX3/DKK680Fi9ebF4v+l5prffbb789ae6H
X/xDa1t4yxx77LHm/I1+/fqZn7++D/p7ixYtkuI/QX3puf5eOWMX2hSj0NpV
FtUdw4cPd/X1K8aR62NYvPnIdH/mnQ+Ur/c2zHNb3n777aRzGDVqlG/ZfIpL
vQwAiDfaCwBIoD5EOdLv8xUrVqTNWQ0AcWknyz3+IX/99ZfZx+7tf7T6w705
stLFP0RzSPbaa6+kuMrBBx9szptw/r1mzZpmfqF0FB/x5iBybsrNo/UIVq5c
mfRYjRo1zL5+L7/4h/O8FLNQrilvbEJzFoIop9V+++3ne0y9fr/8Vq+//rq5
5nPQuTi3Tp06Ba7/If/884851j7VMfQa7rnnHnO+iPcxrb3QoUOHCo2/1/2A
5hEEfU7eOSrp4h+6lrxzlfxek9bzWL16ddJjBx54oG/+Mcnl98obu9Cm7/vR
Rx9tnHzyyUatWrVcjx166KHm9eeUi2NorpBiZH6vR3GbIUOG5O29zeS5VRdq
DXq/74PiYu3bt7fjpoVgPTcAAKnQXgBAAvUhAADB4tJOEv/4j9ZbOv/889P2
TWud9FatWplj97WGSJANGzaYa1VoHoRfDEVrh991113G2rVrQ5/ja6+9Zhx1
1FGuse/6d5s2beycUcpT5Xfe1apVSzqeN/5Rt25dY9999/XdX/2xmhMwa9as
lOeoPttU75/iDn40fqBt27ZJcSOrD16vMSg3l5e+e1rL3bmmtNWPfcYZZ5jr
uIvydwWdp18+pUy9++67xtlnn520boS1KebTvXt348cffzQefvhh++/e+Tei
66Z3795J/f+KT+l9sz4Xzcnw+75pvfAgufpezZ8/3/i///s/c16EN5+Tc1N8
bMCAAWb8ySsXx1BuuVTfQe86J7l8bzN5bj1v0HfD2hR3KpQ41ssAgPihvQCA
BOpDAACCxaWdJP6RTPMHNIZ7xowZ5voIGh+v/nL1//r1tYY9po6htaGUb0d5
cILWNQhDeYvUR/7JJ58Yf/zxR9Lj3377rdmPrFxOei6Nj/fLy+iNfzzzzDPm
37WPcn6NHz/eXFdaeZuUB6xQNOZda19PnjzZWLZsmfkdy9Zvv/1mzqfQ++73
GrzvlZ7bu/5DRSkf2MKFC815PoqzffPNN66cThZ955QXKx3lZtMcI703uZSr
75XovVZ8Sd8jvf/6LL/77jvzGlIdEEYujpGpfL23xSDO9TIAID5oLwAggfoQ
AIBgcWkniX+Ut6D4B4DyQ70MAAiD9gIAEqgPAQAIFpd2kvhHeSP+AcBCvQwA
CIP2AgASqA8BAAgWl3aS+Ed5e/rpp13xjyeeeCLqUwIQEeplAEAYtBcAkEB9
CABAsLi0k8Q/yttDDz3kin8MGjQo6lMCEBHqZQBAGLQXAJBAfQgAQLC4tJPE
P8pbhw4dXPGPiy66KOpTAhAR6mUAQBi0FwCQQH0IAECwuLSTxD/K0/r1640H
H3zQ2GGHHVzxj+22284YMGCAsXLlyqhPEUCBUS8DAMKgvQCABOpDAACCxaWd
JP5Rnq655hpX3MO7HXHEEVGfIoACo14GAIRBewEACdSHAAAEi0s7SfyjPM2Z
M8d44YUXArcJEyZEfYoACox6GQAQBu0FACRQHwIAECwu7STxDwCAUC8DAMKg
vQCABOpDAACCxaWdJP4BABDqZQBAGLQXAJBAfQgAQLC4tJPEPwAAQr0MAAiD
9gIAEqgPAQAIFpd2Mur4BxsbGxsbGxsbGxsbGxsbGxsbGxsbGxtb6W1RI/7B
xsbGxsbGxsbGxsbGxsbGxsbGxsbGxpbrLWpRxz8AAPFAvQwACIP2AgASqA8B
AAgWl3aS+AcAQKiXAQBh0F4AQAL1IQAAweLSThL/AAAI9TIAIAzaCwBIoD4E
ACBYXNpJ4h8AAKFeBgCEQXsBAAnUhwAABItLO0n8AwAg1MsAgDBoLwAggfoQ
AIBgcWkniX8AAIR6GQAQBu0FACRQHwIAECwu7STxDwCAUC8DAMKgvQCABOpD
AACCxaWdJP4BABDqZQBAGLQXAJBAfQgAQLC4tJPEPwAAQr0MAAiD9gIAEqgP
AQAIFpd2kvgHAEColwEAYdBeAEAC9SEAAMHi0k4S/wAACPUyACAM2gsASKA+
BAAgWFzaSeIfAAChXgYAhEF7AQAJ1IcAAASLSztJ/AMAINTLAIAwaC8AIIH6
EACAYHFpJ4l/AACEehkAEAbtBQAkUB8CABAsLu0k8Q8AgFAvAwDCoL0AgATq
QwAAgsWlnST+AQAQ6mUAQBi0FwCQQH0IAECwuLSTxD8AAEK9DAAIg/YCABKo
DwEACBaXdpL4BwBAqJcBAGHQXgBAAvUhAADB4tJOEv8AAAj1MgAgDNoLAEig
PgQAIFhc2kniHwAAoV4GAIRBewEACdSHAAAEi0s7SfwDACDUywCAMGgvACCB
+hAAgGBxaSeJfwAAhHoZABAG7QUAJFAfAgAQLC7tJPEPAIBQLwMAwqC9AIAE
6kMAAILFpZ0k/gEAEOploPgtXrzYmDFjhnlvB+QL7QUAJFAfAgAQLC7tJPEP
AIBQLwPFa+HChUbTpk3t67hmzZpmHMTPLbfcYpcbPHhwgc8UpYD2AgASqA8B
AAgWl3aS+AcAQKiXgeI0adIkY+eddzav3+22286+ljt27OhbvlmzZnYZ7Qtk
ivYCABKoDwEACBaXdpL4BwBAqJeB4rNhwwYz9rHrrrsaH3zwgTkPxLqWGzVq
lFRe93yVK1c2H99+++2NTZs2RXDWKHa0FwCQQH0IAECwuLSTxD8AAEK9DBSn
CRMmGHPmzDH/vWTJEvta1jwPry+++MJ+vEmTJoU+VZQI2gsASKA+BAAgWFza
SeIfAAChXgaK3+jRo+1r+brrrkt6/PHHH7cf79GjRwRniFJAewEACdSHAAAE
i0s7SfwDACDUy0DxU0zDupZfeeWVpMfbt29vP/7mm28W/gRREmgvACCB+hAA
gGBxaSeJfwAAhHoZKH5HHHGEfS2vWLEi6fH69evbj69ZsyaCM0QpoL0AgATq
QwAAgsWlnST+AQAQ6mWguG3cuNHYbrvtzOt43333TXr8888/t6/zBg0aRHCG
KBW0FwCQQH0IAECwuLSTxD8AAEK9jFz4559/jHHjxhmPPvqo8fzzzxu//vpr
yvILFiwwRo0aZTz99NPG1KlTC3SW8bVy5UpzPfPhw4cbDz/8sDFy5Ejjr7/+
CrXv+PHj7eu4c+fOSY936NAh5eNAWLQXAJBAfQgAQLC4tJPEPwAAQr2Mipo2
bZpRr149+7ukrWrVqsZXX32VVHbbtm1mH7yz7H777Vf4k44B3S+NGDHCaN68
uev9sLbKlSsb559/vvHLL7+kPE6/fv3sfR555BHXYxMnTnQdc9iwYfl8SShx
tBcAkEB9CABAsLi0k8Q/AABCvYyKmD59urHTTjv59t+fdtpprrK6b7jwwguT
ymlt7orYsmWLMXPmzLxuui/KpR9++CEp7qHcVOecc44ZO3L+vWXLlimPdcEF
F9hlx4wZY/998eLFRu3atV3H0muxnl/zdIBM0F4AQAL1IQAAweLSThL/AAAI
9TKytXbtWqNWrVrm9+e4444zczdVr17d1d/+xx9/2OV79OjhGyd5/PHHK3Qe
Y8eO9T1uLje/uSzZ+vrrr4099tjDPvYuu+xivPvuu/bjmzZtMvbcc0/X82/e
vDnweJdeeqld7tprrzX+/vtv45133jE/Cx3n3HPPtR//8MMPjdmzZxt16tQx
1wxZtGhRzl4XSh/tBQAkUB8CABAsLu0k8Q8AgFAvI1tap0LfnYYNG9r98wMH
DnT127/11lvm30ePHm3/TWt0z5kzx7j44ouNo48+2vjmm28qdB7FFP9YunSp
K0ZUs2ZN3xhEx44dXc+vmEmQN954w/ecNfdj3rx5xquvvpr02I477mj+HcgE
7QUAJFAfAgAQLC7tJPEPAIBQL6MitIb5t99+a///d9995+pnv+OOO4xly5aZ
cxz0/3Xr1jXX+s6lWbNmGUceeWReN72GXLjkkktc749z3odTly5dXOXWrVsX
eMytW7eaOcR23nlnu3y7du3s93njxo1G48aN7ccOP/xwcw4IkCnaCwBIoD4E
ACBYXNpJ4h8AAKFeRi6pra9Ro4b9vTr99NONpk2bmv/WuhYVnetRzDSHRDmn
rPemU6dOvuWUv6p+/fp2ucMOOyzU8bUOypdffmls2LDB9/H58+cbP/30U9bn
D9BeAEAC9SEAAMHi0k4S/wAACPUycs25Hrdze/vtt6M+tUideeaZ9nuhOMjy
5cuTymzbti0p91XPnj0jOFsgGe0FACRQHwIAECwu7STxDwCAUC8j16x1QZzb
nXfeGfVpReqTTz5xvR+tWrVyPa78VsOGDTMOPvhgVznlqlJ+KyAOaC8AIIH6
EACAYHFpJ4l/AACEehm5NmPGDFcf/sknn2zeG5QzrYPifE923XVXcz6Iclvt
vvvuvvNlLr/8cuOvv/6K+tQBG+0FACRQHwIAECwu7STxDwCAUC8j17TetrMf
X/mw8kn3LD///HNeN93DVESbNm18YxzObfvttzdatGhhPPHEE8bq1atz9O4A
uUN7AQAJ1IcAAASLSztJ/AMAINTLyLXbb7/d1a9fr169vD7fe++9lza2UNHt
66+/rtA57rfffvaxqlevbvTp08cYMmSI8corrxjjx483vvjiCzMHFhBntBcA
kEB9CABAsLi0k8Q/AABCvYxcGj16tG/8YO3atXl7zrFjx+Y9/vHVV19lfX5a
v0PrnVvHOvHEE3P46oHCob0AgATqQwAAgsWlnST+AQAQ6mXkiuZI7Lzzzub3
qU6dOq74wZtvvpm35/3oo4+MPffcM6/b4sWLsz6/RYsWud6Ltm3b5vDVA4VD
ewEACdSHAAAEi0s7SfwDACDUy8iFX3/91dh7773N79Jee+1lfP/9964+/+7d
u0d9ipHZsGGD6704++yz0+4zdepUY9iwYQU4OyA82gsASKA+BAAgWFzaSeIf
AAChXkZF/fXXX8bhhx9ur+H98ccfm3+34iHaGjZs6Nqnb9++5roX5WKPPfaw
34t9993XvFcKojVBKlWqZJZ9+eWXC3iWQGq0FwCQQH0IAECwuLSTxD8AAEK9
jEyp/dccj913390YNWqUceSRR9rfowEDBtjlLr74Yte8h7lz55p/HzFihPn/
WhNjxYoVUb2MgmrZsqXrvXj66aeTyixdutRo3769XWa33XYzPv/88wjOFvBH
ewEACdSHAAAEi0s7SfwDACDUy8jUggULfNcIb9OmjWtew6uvvup6/OCDDzY6
depk7Ljjjub/9+7dO8JXUVgzZ85Mer9at25tdOvWzejQoYNRr14912M1atSo
0JrrQD7QXgBAAvUhAADB4tJOEv8AAAj1MjL13HPPJfXlN23a1Pj7779d5bZu
3WpUq1YtMFai+4py0rVrV9/3wrudfvrpxurVq6M+XSAJ7QUAJFAfAgAQLC7t
JPEPAIBQLyNT1157rau/vl27dsb69et9y77xxhv2fA9tWtfihhtuMO85ytHI
kSONOnXqJMU8tG6K5oO89dZb5v0SEEe0FwCQQH0IAECwuLSTxD8AAEK9jEyt
W7fOmDZtmjF9+nTjl19+SVt+48aNZvlPPvnE3BeG8fvvv5vrxE+ZMsVYuHCh
sXnz5qhPCUiL9gIAEqgPAQAIFpd2kvgHAEColwEAYdBeAEAC9SEAAMHi0k4S
/wAACPUyACAM2gsASKA+BAAgWFzaSeIfAAChXgYAhEF7AQAJ1IcAAASLSztJ
/AMAINTLAIAwaC8AIIH6EACAYHFpJ4l/AACEehkAEAbtBQAkUB8CABAsLu0k
8Q8AgFAvAwDCoL0AgATqQwAAgsWlnST+AQAQ6mUAQBi0FwCQQH0IAECwuLST
xD8AAEK9DAAIg/YCABKoDwEACBaXdpL4BwBAqJcBAGHQXgBAAvUhAADB4tJO
Ev8AAAj1MgAgDNoLAEigPgQAIFhc2kniHwAAoV4GAIRBewEACdSHQHY2bdpk
zJs3z3f7999/oz49ADkSl3aS+AcAQKiXAQBh0F4AQAL1IZCdt99+275+2NiK
eUNqcXmfiH8AAIR6GUCp+ueff4wJEyYYPXv2NMaMGWPe+3pt27bNfEzbZ599
FsFZFg/aCwBIoD4EsvP8889H3m/NxpaLDanF5X0i/gEAEOplAKVo4cKFRoMG
DVy/U/r06ZNU7tNPP7Ufv/rqqyM40+JBewEACdSHQHYeeugh+/qpW7eu0ahR
I3ubO3du1KcHIEfi0k4S/wAACPUygLjIVd7nadOmGbvuuqtRq1Yt45ZbbjGq
Vq1q1nMHHnhgUtkhQ4bY9eBLL73kekz3w7qvRQLtBQAkUB8C2dFYFOv6effd
d6M+HQB5Epd2kvgHAEColwFEbd26dUavXr2MXXbZxVizZk2Fj6e5Hy1atDCW
L19u/v/hhx9u1nONGzdOKtu+fXu7HlyyZInrsfvvv9+MmShXg1/urHJDewEA
CdSHQHauv/56+/qZPn161KcDIE/i0k4S/wAACPUygKhs3LjRHAdYrVo1sx5q
3bq18dtvv+X0OTSnpFKlSubxFevwsnJk1a5dO+mxDz74wNh7773Nx/faay8z
DlLOaC8AIIH6EMiOc9zJt99+G/XpAMiTuLSTxD8AAEK9DCAKmzdvNudjqP45
9NBDjcmTJ+fleT755BO7nrv33ntdj2neifVYu3btfPfXGur33XefsfPOO5vl
hg8fnpfzLAa0FwCQQH0IZOfMM8+0r5+VK1dGfToA8iQu7STxDwCAUC8DKDTd
U5511llm3VOvXj3jf//7X96e65577gnMszB+/Hj7scceeyzlcUaPHm2W2377
7Y2xY8fm7XzjjPYCABKoD4HsNG3a1L5+Nm3aFPXpAMiTuLSTxD8AAEK9DKDQ
+vbta9Y7O+64ozFr1qy8Ptepp55qPlflypWNbdu2uR678sor7Tpw7ty5aY/V
rVs3s2yVKlWM77//Pl+nHFu0FwCQQH0IZOeAAw6w7wHVRwigNMWlnST+AQAQ
6mUAhbR161Zjt912M+sdxUHySfekVt6qo446yvWY1kavWrWq+ZjK6N43Hd07
W+uFdOnSJV+nHVu0FwCQQH0IZKdGjRrmtaP/AihdcWkniX8AAIR6GUAhaf0M
q9758ccf8/pcK1assJ/riiuusP+ueSDNmze3Hzv66KNd+6Si9dqtmMmff/6Z
t3OPI9oLAEigPgQyp77CHXbYwbx2DjzwwKhPB0AexaWdJP4BABDqZSB+lA9Z
eaF++umnSJ5/1apVxrRp04xnn33WGDBggDF48GDj+eefNz799NPAfTZs2GAc
eeSR9ha0nvgRRxxh1jla+zxbWpNc788333yTstyXX35p13Ft27Y1//b7778b
J510krHPPvvY8z/atGlj3tdqPkqlSpVSvs6vv/469JohpYb2AgASqA+BzG3e
vNm+do477rioTwdAHsWlnST+AQAQ6mUgPnRvde+99xrVqlWzr82LLrrIt6zm
HmgtbpXZaaedzH0rSvGEM844w35u77b//vsH7utcS1xbkyZNksosXLjQfnzg
wIEZndsff/xh3HLLLea6mcoZbR2nfv365nvmR/ez1atXt8s2bNjQHHeoNdeX
LVtmtGrVyvy7/rbnnnua/27fvn3SOiFeeh9UVudSTmgvACCB+hDInMbXWNdO
69atoz4dAHkUl3aS+AcAQKiXgXhQn/s555xjXo/bbbedK5awZMmSpPKTJ0+2
Hz/++OMr/Px33XWX63mPOeYY87epM9Zw+eWXB+5vrWlubQ899FBSmQ8++MB+
/P333w99bvPmzTPna2g/rR1y9dVXGz169LDXEdE2ceJE332HDBli1KxZ0yyj
uNIll1xiv59vvfWWscsuu5iP1alTx5znEmYtzgsuuKAsc1fTXgBAAvUhkLn5
8+fb106HDh2iPh0AeRSXdpL4BwBAqJeBeOjdu7edp0lzOy6++GL7+hw9enRS
+Xvuucd+/Pbbb6/Qc7/44ov2sRQDccYSNLfCeuyZZ54JPMYpp5xil6tSpYqx
fv36pDLa3yrzxRdfhDq3UaNGmcez5pRo3XK/c1P8JojuYZW36t9//016bMuW
LcZ3330XKu5h6dq1q/28f//9d+j9ih3tBQAkUB8CmZsxY4Z97XTr1i3q0wGQ
R3FpJ4l/AACEehmIh61btxqPPvqonceqY8eO9vWpuR5empuRzVwKL8UFtOaF
dazbbrvN9fi6deuM7t27m5sz9uCk+0atB24do3Pnzr7lrBiPtnTrjMv3339v
VK5c2Z5rsWbNGtfjmtthHW/YsGEhX3HF3X333fbz5nsN9zihvQCABOpDIHPv
vfeefe3069cv6tMBkEdxaSeJfwAAhHoZiKdGjRrZ1+fatWtdj+meao899rAf
95trEdZll11mH0friGjt9UwpP5Uz95XWHU/3XFrDPJ2WLVva5V9//XXXY7/8
8otx4IEH2o9rPY9C0brn1vNOnTq1YM8bNdoLAEigPgQy99JLL9nXziOPPBL1
6QDIo7i0k8Q/AABCvQzEj+ZcWNfmfvvtl/T44sWL7ccPOeSQrJ9HcRXn3I+g
tdbTGTp0qGvdkCCXXnqpXU55p1Jx5ojWeuW6D5WVK1caDz74oPk36/GePXtm
dd7Zcr7eSZMmFfS5o0R7AQAJ1IdA5jTP2bp2lHsVQOmKSztJ/AMAINTLQPyM
HTvWvjavvPLKpMed4+euvfbarJ/HuYaItueeey6r4zjjGiNGjAgsp9xaYedr
OHNMaTv44INdc160ac3yp556Kqtzroj+/fvb57Bw4cKCP39UaC8AIIH6EMjc
nXfeaV877777btSnAyCP4tJOEv8AAAj1MhA/t9xyi31tvvzyy0mPn3nmmfbj
r776atbP07BhQ1c8YcmSJVkdZ++99zb3r169esq8Vs55E59//nnKY7Zq1cou
W7NmTePwww8311hv166dcccddxizZs0y7zmjoJiTdW6bN2+O5ByiQHuBUnXv
vfcaJ554orl5c+0BfqgPgczdcMMN9rUzffr0qE8HQB7FpZ0k/gEAEOplID+U
p2nChAnG8OHDjYcfftgYOXKk8ddff4XaVzmkrGvz559/dj2m3Ffbbbdd4ONh
aZ6GM/ax4447muub63jWtmHDhrTHWb16deg8VM51L/XvVJzrn/z6668ZvbZ8
O//8883z2n333aM+lYKivUCpUu4/6/uteXFAOtSHQOYuv/xy+9r59ttvoz4d
AHkUl3aS+AcAQKiXgdzRPZDiCs2bN3fFFqytcuXKZt+51u4OovkTikWofLVq
1VyP6d7LeezatWtndH4aa9elSxejWbNmvufn3S6++OK0x3zjjTfMsorJLF26
NGXZb775xj62xlunYs0p0RYUh/n777/NdUIKTWuy6LyOPPLIgj93lGgvUKqI
fyBT1IdA5s455xz72tE4IQClKy7tJPEPAIBQLwO58cMPPyTFPRo0aGD+1qta
tarr7y1btgw8jsbDWeUOOugg+++6j7r55ptdxznttNPsx4cMGWKsWbMm5Tle
ccUVoeIeYWMUYuXqat26ddqyukfcf//9zfKNGzdOWfbkk0+2z2POnDlJj2uN
eL3fihEVcgzhV199ldH7U0poL1CqiH8gU9SHQOac98mbNm2K+nTKwrZt28y1
5seMGRP1qaDMxKWdJP4BFCeNgZ05c6aZR2Xw4MHGwIEDjcceeyxv+TNnz55t
TJkyxVyLV/mQn3/+eWPYsGHGqlWr8vJ8KDzqZaDivv76a9fa3LvssotrXUf9
xttzzz1dsYWgdSMUR3HmpNKcihUrVhiXXXaZ+berrrrKfly/I7du3Wp07drV
/H+tQ57KokWLjPHjx5tb06ZNXeejtsR6zNrSxVPkf//7n7keu1+Mwo9ygVnP
mWq9kVtvvdUu16JFC7M90r2kXu8LL7xgzn2xHlu7dm2o586Fvn372p/Nb7/9
VrDnjQPaC5Qq4h/IFPUhkLmDDz7YvofSPR3y6/333zfHYuk9r1u3btSngzIT
l3aS+EfpUf+D+qSDtvXr1/vup76NVPv9/vvvBX4l8KOc8X369DF23nln3zG6
Wic2H6wcLN6NtSFLB/UyUDGKT2jdb+ta0lrdijN4dezY0VWPKmYSxPp96N2u
ueYa8/7L+i3j3I4//nhj48aNoc/72GOPdcVZUq1bnkuK4++0007m8w4YMCCw
3B9//GHsuuuurteo9TZ22GEHO99W//79zfejUHR/bK0Zny7WVIpoL1CqiH8g
U9SHQOassSs1atSI+lRKmn6bnH322a57aN2/AoUUl3aS+EfpsX6PB21HHXVU
0j6aC5cu94X6dBAtrUer/jTrM2nSpImZF8TqA8pn/OPll182zjjjDOIfJYx6
GaiYSy65xFU/Oud9OGndDWc55W8K8vbbbxuHHnqoXVZjtp577jn78SeffNKO
h1epUsWcK6H7urCca4xY7UohWfNVdO5aEyTId99954rTaDvggAOMK6+8Mm/z
HlO544477NiL5qOUG9oLlCriH8gU9SGQGfUHVqpUyb6XQ+5pXbx+/fqZ6w16
+28OO+ywqE8PZSYu7STxj9KjXBCHHHJIYOxj1KhRSfvoM7zvvvvM+LvffvXr
1zceffTRCF4NLP/++6/5+VmfyU033WTPFVVuknzHP0TPpzVeiX+UJuplIHta
C0J94dZ11KlTJ99y+j2iNjXT3yCaR7J48WLzHszrzz//NHNOaX5gpj755BNX
na54RCGpbbPW99Bv4KBcYBbNa/nyyy8jnZM6YcIE+7PWWivliPYCpSqu8Q/9
rlbOP82H01rBP//8s+/m10Ygv6gPgcwoF6x13Rx33HFRn07J0dgp528N73bE
EUdEfYooM3FpJ4l/lKYtW7a45glYMQz1M6Ry++23J9WP5513XlZ9KsitXr16
2Z+J8slrzo5Tt27djHPPPTfva7Aq7kL8ozRRLwPZO/PMM+1rSH3jmq/npXrb
m/uqZ8+eEZztf+6//37X+Wj9jkLTPYbWQNfzn3DCCcb8+fMLfg5h6L5W60Za
67uo3S1XtBcoVXGJfyiWobFpZ511lrH//vsb22+/fdq5+tqimA9X7qgPgcwo
77p13bRu3Trq0ykZGid1+umnu9oE3V/vtdderr8Veq43EJd2kvhH6XLev2vr
3Llz2n2uuOKKpNiHvgOIlq4lZ7ulHI4VpfFjVatWtTe/HPV+Bg0aRPyjRFEv
A9nxzqHwzsNTfqthw4YlreVx+OGHm+N5o6S4ufOcFi5cGMl56LfwaaedZp6D
+vmuvfbatHNBCklzTvR7UedXq1Yt45FHHinoeiNxQ3uBUhVl/EO/kV977TUz
Dhwm1uG3aV0lFBb1IZAZ3Wta102HDh2iPp2S4Wy/TjzxRDuvrPLxOtuJo48+
OuIzRbmJSztJ/KN0XX311a56TuP2U5k7d65rbJH6IdLNF0FhaByx87PMxZhT
5St3HlO5W8J48MEHiX+UKOplIDvWWhDWprW6NR9Eua20TrdfH9Xll18e+dxK
3Y85817qvHXvFqV58+aZv9+0rpViInExePBgc61OxT2Uw6zc0V6gVEUV/9Dv
a61nFCbGofqxTp06SZviJig86kMgMzNnzsxpvwYSFixYYN6rPv/883aedPn2
22+JfyBScWkniX+UrhtuuMFVz/Xp0yewrHJyONd10BjHOI27LHeTJk1yfZa9
e/eu8DG1fm428Y+HH36Y+EeJol4GstOmTZu0/VUaX9CiRQvjiSeeMFavXh31
KZt++ukn1zm2bNky6lOy/fbbb1GfgovyimqteCTQXqCYLFu2zOjfv3+orUGD
Bvb3W3npw+6ntYmypbrFOxdPm2IaGnc0a9Ys17glrfPI/Pz4oD4EMvPBBx/Y
143W6EZ+Ef9A1OLSThL/KF3e+Effvn0DyzrzXu23337G2rVrC3imSOfJJ590
fZa5GI/m/Z1F/APUy0B21G5a10/16tXN8QZaF/uVV14xxo8fb3zxxRdmDqy4
efnll0OPkwCcaC9QTMaOHRtqXkVFtu+++y6rc9Pv6pNOOikpXq45Z961/qwc
fNp0P454oD4EMqM8f9Z1o3m1yC/iH4haXNpJ4h+lyxv/CIqt33333a5+G62b
lIrWjfj++++NOXPmGDNmzDAmTpxojBs3zhxb5aTxre+//7451nXMmDFZr2eq
3OiaI6l2Uv1Jyl+o53LO6YvyeOno+tLzjRo1yny+V1991czvkUnO906dOrk+
y+7du5vrIjq3TKgvrlKlSq5jvv3220nH1OY9z3TxD7Wv+ptiNvr8V61aldG5
WQr9OSE+7RJQTFRXab1z6/pRvt1ioTU2nPW5+giBMGgvUEziHP/wzseuXLmy
8dZbb/mWvf766+1yu+22G/fEMUF9CGRm6NCh9nXz4osvRn06JY/4B6IWl3aS
+EfpChP/UHtjPb7TTjuZ86vTueaaa3zv+/V8smLFCuOyyy5z9QdZm3JrhO0P
V5zltttuC8ydrjzlmtMSdv3RXB8vnf/973/mmivO3OrOTe/PoYceaq6bG0S5
STQmwhur8NvSxa1k5cqVZrxrjz32CP17TuWdguIfeh3KE+DdXzmK1cemeiWM
Qn9O+A/1MpC5RYsWueqotm3bRn1KoWl9Eue5x2m9DcQb7QWKydKlS83csWE2
53y+Y489NvR+2eS/0lpCdevWddXDL730UmD5e++911VWv7kQPepDIDPKZWFd
NxrjiPwi/oGoxaWdJP5RurzxD+WmddJYKPVN6zHNsw477nPq1KnG+eefn9Qv
rfjKhx9+aI5HStWfrnVGvPO5vTS/pH79+q6xUBpTe8455xg777xzUkwlXV6R
XB8vHc2N2WeffVzHVT7h9u3bm+vKO2ND+vett97qu9b8hRdeGDpO8cMPP6Q9
L+dcn7DbXXfd5TqGX/xDc/T94l3OTXGzdAr9OcGNehnI3IYNG1x109lnn512
H7Wjw4YNK8DZBfvzzz9d9fbee+8d6fmguNBeoFQVcv3zQYMGudqPVq1apSzv
vQfXHHxEj/oQyMzNN99sXzfTp0+P+nRKHvEPRC0u7STxj9LljX/ceeed9mPK
deScU/DUU09lfPyuXbu6jq8xUjvuuKP5b80DGDhwoHH//fcbBx10UFJfuHJB
BdH8EGcMpV69emadbVGukY4dO7qO16VLl4IdLx2Nxdpll13sYynG9Oabb7rK
zJ0716hdu7brOXv27Jl0rAULFhgTJkwwH3OWvfjii82/O7cw8ys0/8Mqr3V4
ncfU+oreY2rTPk7e3156P61/6zfjfffdZ64tUqVKlaTPPdWav4X+nJCMehnI
jnNO3b777mve/wTRmiBW+6v1N6IyadIkV33arl27yM4FxYf2AqWqkPEPtRfO
elj3/an06tXLVX748OF5PT+EQ30IZKZz5872deP8vY/8IP6BqMWlnST+Ubq8
8Y8ePXqY6z5ceeWVrr8rl2w2tLaDt39bY0kfeOABV9/PP//8Y9axznL6bRFE
Y2edx1u4cGFSGeWWcvY3aZ7Ar7/+WpDjpaLXfcopp7heq/q6/Hz++eeusbd6
Tm+swaJ5oc5jav57RV199dWuY2a7/rk2xS3Ul+akNU685bQmSJBCfk7wR70M
ZEfz0Zx13dNPP51URvlXNAfQWW+qHYiK5vY5z/mhhx6K7FxQfGgvUKoKFf9Q
7ivn74DGjRun3cc7Doi8MfFAfQhkxplLJKj/A7lD/ANRi0s7SfyjdHnjH0Hb
pZdemtXxtd6D91jeXEkWreMXps7VeurOcprnEKRPnz6ussq9m+/jpeN9T9KN
Az7vvPNc5a+44grfcnGOf2jOj3K5+PG+Pr85LlLozwn+qJeB7MycOTOpPWzd
urXRrVs3o0OHDq55ctq0LlTYOjdflIvReU6qh4GwaC9QqgoV//j6669ddbDm
zafjzBGrTfPJET3qQyAzJ598sn3dbNq0KerTKXnEPxC1uLSTxD9Klzf+oTFG
Qetojx49OuPjz54923UM9e/os/WjvEfeuICf7t27u8qNGzcu8PmVQ8tZ9oQT
Tsj78dJRX5fzGN61w73ee+89V3nlzfIT5/iHxjMH0ffKWVZzj/wU+nOCP+pl
IHvenJBB2+mnn54yF2Ah6L7NmadRa4Bt2bIl0nNCcaG9QKkqVPzDez+rnLOp
LF++3FVe9fb69evzdn4Ij/oQyMzhhx9uj6MM6j9C7hD/QNTi0k4S/yhd3viH
xs3rs1Peql133dX1WPXq1Y01a9ZkdHzl7Qg7Zl+fuXIVWWV3331333Jaf9V5
zJ9//jnwmOqvd5bVa8r38dLxrnmu+SCp/PHHH0l9Y35resc5/vHss88Glp01
a5arbNu2bX3LFfpzgj/q5eLz22+/mddkIXIXaXxWp06dzPpI9w1INnLkSKNO
nTpJ9br6qTQfRHMh4/A7b/78+a7z0+9QIBO0FyhVhYp/eO+nv/nmm5TltU6f
s7zm8CEeqA+BzFjzojUfGvlH/ANRi0s7SfyjdPnFPyxvvPFGUv+M+mYy4Y1/
pFtHRDEWq6zynnvpe+g9p7POOss455xzfLeTTjopqbyzTy7Xx0tH14H6uJz7
//TTT2n3q1u3rmufOXPmJJWJc/zj9ddfDyyrdRydZS+88MKkMoX+nBCMerl4
6D62TZs2xg477GDHAfN9Hbz66qv2d0Tr8PTr18/MX45kv//+u/Hxxx8bU6ZM
Mdcy2rx5c9Sn5KK4tbMO1dxFIBO0FyhVhYp/eOdI//jjj4Fl9Xvcm0cxaH1B
FB71IZCZnXfe2bxmDjjggKhPpSwQ/0DU4tJOEv8oXaniH9K5c+ekfuRUY/m9
Mo1/7LXXXinjH6tWrUo6n0w3zafI1/HS0Ths7/5h8lkedthhrn38cpEVa/xj
yZIlaeMfhf6cEIx6Ob8GDRpkHHnkkfYWtG5OKmqv+/fvb84Xtz4vxV2vueaa
vMc/VEccccQRrmtPc95S5atDPHnX0P3www+jPiUUGdoLlKqo1v945513Ass+
9dRTrrIHHXSQsW3btrydGzJDfQiE988//9jXTNOmTaM+nbJA/ANRi0s7Sfyj
dKWLf/z5559JY4mqVq1qLF26NNTxM41/aM2PVPEPb72s3OQabxx2Ux5dZ16R
XB8vHY3x9fbL61pKp1mzZq59XnjhhaQyxRr/UB6rdPGPQn9OCEa9nF/HHHOM
67uuXISZUF+Ht74488wzzXlWhaJ2fcSIEa54ttaWeuKJJwp2DqgY1Ze1a9d2
1bnMoUOmaC9QqgoV/9i6dasrH/FNN93kW+6LL75w5RDWvM8vv/wyb+eFzFEf
AuE5839nmn8E2SH+gajFpZ0k/lG60sU/ZOLEiUl99s2bNzc/03RyHf/49ddf
XcfTvb6+Q9nK9fHSUb4T73upc0jHWv8rVZ9oIeIf8+bNC7VfruMfhf6cEIx6
OX+UJ8o5Z0P5bjMZu6l209knU61atUjH7Ov1dO/e3XXtDhw4MLLzQXjqS3N+
bqnW7gKC0F6gVBUq/iGPP/64/Vyay6k1pCz6Lfbkk0+av5mcsY9hw4bl9ZyQ
OepDIDzl+rOumQ4dOkR9OmWB+AeiFpd2kvhH6QoT/xBvP7i2+++/P+3xcx3/
0PelUqVKrmP+8ssv4V6sj1wfLwwrl6W1aW57OrVq1XLto74pr0LEP2bMmBFq
v1zHP6L4nOCPejl/dH05v+O33357Rvv36tXLtf+YMWPydKbh6drV/BPrnDQP
RDF1xNtll13m+szUlgOZor1AqRowYIBx/PHHm9trr72W1+fSb+ozzjjD1b7v
t99+xnHHHeeKe2jTulvZ5M1E/lEfAuE5x+Gw/lxhzJ0719WeKA8zUEhxaSeJ
f5SusPEPrVGhHO7OsuqPnj9/fsrj5zr+IQ0bNnQd85NPPgn1WoPk+njpeNfy
GDt2bMryGkPtXDNdfVGaR+JViPjHBx98EGq/XMc/pNCfE/xRL+fP4MGDXdf5
smXLQu+rfFPO60N1e1ysW7fO2Hvvve1z23PPPY21a9dGfVoIoHyBzu/Stdde
G/UpoUjRXgC5od/Fauedbalz0z3yY489Zvz1119RnyoCUB8C4Wn+unXN9OvX
L+rTKQvKL+JsV+rXrx/1KaHMxKWdJP5Rury5SXr37h1YdsqUKUn3240bN06Z
E3z27NkZxT9Uz1plle/Wz+mnn+46ZtgxAUHnmevjpXPuuee6nk9rzKby5ptv
usprrJkfrYnoLJeL+fg33nij65j67RXGQw895NrPOVffa/ny5aHiH4X+nOCP
ejl/2rRpY7+/Z511Vuj99B2vWbOmva/WCQyzrlAhKRbuzO2V6dwW5Jfi0Hfc
cYeZY9k5165BgwbGxo0boz49FCnaCxQT/SbdsGFDXrdcUIxjzpw5xoQJE4xv
vvnGXKsR8Ud9CITnHIvzyCOPRH06ZcGbR0C5FFetWhX1aaGMxKWdJP5Rujp3
7uyq54LW1bNoHKg3BnLLLbcElvfGTDSfIJXq1avbZdUH4+ell15KOgc9TxDl
z+/SpYu5luuSJUvyfrx0lJPG+VzKh7Vly5bA8sq77iwfdA+g+ffOcrfddlvG
5+bljWMo33EYygvg3O/FF18MLPvdd9+5yqoP2E+hPyf4o17OD7V5zvpv/Pjx
ofdVfNF5XWj+chx17drVPke91kzWNkF+vfDCC0n1a9u2belXQ4XQXqCYjBs3
LqkezPWm/OooT9SHQHjPPPNMqH4EVMw///xjtkt9+/Y14x3eNktr0GqM7Zo1
a8zfqkA+xaWdJP5Rus477zxXHXfFFVekLK88WHXq1EmqG4NyOI0ePdpVLmhs
v+g748zzpM2vf0zlGjVq5CpXr149Y8GCBUllf/jhB6NJkyZ2OeU0z/fx0tF3
+5hjjnE9X9C8GP0Wc74nGou7detW37JDhw51HbNTp04Zn5uX9/PbaaedXGuP
aAza/7N35/E31P3/x29RyVYiUolky6XUpZTKJYQrfVNdJUuRikraaCdtdCFE
21WX0CJaZGkRSSilRdplqdBqV7L+Ob/bc85v5pqZc+acOcucM+dzHvfbbW7l
c2be533mnPN+z3m/5v1+KSam/ZwUR3MeN3bsWN/nWLhwoWvfVq1aJdwv3+8T
EqNdDoc+s9a51bre6huD0nfGOrZ+/foh1jI77777ruv7+8wzzxS6Svj/NM9Q
seeuXbsaI0aMMNtlIFv0Fygm+i0Tdvzjs88+K/TLRIHQHgLBDR8+3P7OaI1v
5JbWSa5UqVJa/ZfGpJRjipyACEtU+kniH2WT1l/35uJWbGPr1q1Jjxs2bFhc
e6hypk+fHrev5gs496tSpYoZP05Ex3vL1dzHRLzj8tq0Xv5ZZ51ljseff/75
5ti483E9pvhNPspLZcGCBXHPd9NNN9n32u7bt8/8HebslxST9xuT0vdL9XGW
pzX2U72XqWjdE71nznJVJ72vl1xyiZ2XXX2hNV6rfCUNGzZ0HdO6dWuzTUjE
uwab1shZvXp1wn3z/T4hHu1yOHRvk3VuNf4clNa+cH7ek61hWGhqp6w2Q9vJ
J59c6CoBCBH9BYqJ1pvXNWiY27ffflvol4kCoT0EgtM6FtZ3hntyck9rZGQa
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
c6j16gYPHmzs3r270NUqc0q1vygGun/X2f5nM68vCP1WVIw9zE2/HYGooj3M
LfIYJVYW4h9du3a1nyvXMSwA0RWVfpL4BwBASrVd/u233+LmQZx44olmXpDD
DjvM/pviJLfeeqv974oVK5r9YVjUVzZu3Nh+voYNGwY+Vnkgna9HeSUvvPBC
47jjjrP/ppzqmtvhfO116tQxevfubY53699HHHGEsWrVqpTP573fePTo0dm8
dKRJOeuV4+U///mPce+99xoPPvigMWHCBN9cNn50PagYmHPtNcXK+vbtWzTx
D82TOuGEE1yfR32uX3vttUJXrUwp1f6iGDj7KW3Z5HUKYtasWaGPyS1fvjzU
1wBkg/Yw98hjFO/77783148KstWrV88+Z8r1F/S4sNe/UizLqpfm6wIoDVHp
J4l/AACklNvl/v37+467aPxXY8nSqlUr++9nnHFG6PXS/IxM7suaM2dO0rGk
YcOG2fsqT3mifRo1amT+1gpiwIABrljLtm3bMnq9SI/ugezQoYPv+1y/fv3A
ZWnO02mnneY6vmPHjsbXX38d4isIh64/J02aZMbvrNeiOVyJ1rZDZkq5v4gy
5/r4zk05hsNSDOvmA2GiPcw98hhlJ6r5zxWLUZ10n43fvL6w+xM2tjA2JBeV
80T8AwAgpdwuqx+76aabXPe9a2vTpo3x8ccfm/vonijn43feeWfo9frzzz/N
uf7Wc7Zr1y7wulJat+vAAw90vR6tH7B48WLXfsr3rrks1j66Z2zgwIF2HspU
tAaYYh7W8X369EnzVSITQ4cONcf0rfOuNc86derk+oxeeumlgcrSdZnzt3Ll
ypULkr9l5cqV5lyiXM010bpX1113nes7oLyqyF4p9xdRpTkSVlt++OGHuz73
L7/8cmjPq7Uaa9SoEeqmtgGIKtrD3COPUXaiGv/Q+riqk9Y381PocWw2tkw2
JBeV80T8AwAgpdYuP/HEE+b6Uh999JH9tz179hhLly413n//fWPLli2u/XU/
ufM6Z+7cuXmp5+233+56Xq1vFJTmlit+s3DhQmPjxo2++23atMmMg3z77bdp
1W3nzp3mPBGrbspN+d1336VVBtKnHC7WOVcMRPN9LPfff7/9mD7jQXg/Yy++
+GJYVU9InztrbW9tWndOYx+J3HzzzfZ+WucrFV2Lah6L3/lCZkqtv4i6X3/9
1TjqqKPM90Tznr755hvXd1pxQADhoD3MPfIYZSeq8Y9DDz3UrFODBg0KXRUA
eRSVfpL4BwBASqld1twN6/UefPDBge4pc46h6vp93759eaipYfbJLVu2tJ9b
63Ep10MU9OjRw66XcmUzrhw+3ePtzNmiPC5OittprFPbjz/+mLI8b1xPa5nl
k+KI1j3rzvksPXv2TLi/c42uoDFInRNrbFib7icPcz2gUlBK/UXUaZ5gs2bN
7P7h3XffNf/u/Mzrnlunu+66y3jjjTcKUV2gzKE9zD3yGGUnivEPjRmqj1Kd
dM8LgNIRlX6S+AcAQEqlXVY+b+fvkVGjRqU8ZvXq1eb4vnWM7kHPp3Xr1hm1
atWyn19rm6xYsSKvdXBSPz5y5EjXeQw61wDZccactO5YNvkjdf2nuRZWefo9
qmvAfFGeGMU+qlatarz++uvmPBCrLppXlKi+1ppu+g2dzmvXvC7n2mAaW0Hm
SqW/iCL97tIcj0MOOcSYOnWq0bx584TzAy+++GJXG/3pp5+af7dinoo3qm9B
OL744gvjzTffdG1qh1D20B7mFnmMshfF+Idi9VaddE8ZgNIRlX6S+AeAbC1Z
ssR4++23zWvHF154wcwV/eSTTxq//PJLoauGNJRKu6zc39Zr1fiP1nBK5cIL
L3T9hinEGk8//PCDvW6uNo3lXn/99XnPNa7vu5W/0NoGDRqU1zqUKv32d879
0O/bbEyZMiXh+Gg+aUzwk08+Mf9/zZo1dl00z8NLa9VZj5944olpP9c111xj
H685XMr5jsyUSn8RRV9//XXCsbVzzz3XNZfxueeecz3epEkTo1evXnYc8I47
7ijgqyj7/va3v8W9R3oPUPbQHuYOeYxyI4rxD8XbrTp169at0NUBkEdR6SeJ
f0Sf3o+ffvrJd9u6dWuhqxgpmzdv5nz5SHVurE3rSOu+2qB55vzucwnzOhW5
Vyrtcr9+/Vyf0127diXd33sf2pVXXpmnmsZTDg/luHbWp1q1asa4ceNCX1dY
8cyuXbu6nlv5Ph5//PG8rmlcyvQb1nn+//vf/2ZVXqtWreyy6tevn6NaZs75
Xbv66qvjHtfn3Hpcsb90aV0g5/l75plnclHtklQq/UUU6Xvvvd7S3K3du3e7
9lPfVrlyZd9YiX7PIRy6lg77XnK+f9HB+5Eb5DHKnSjGPzQnzqpT//79C10d
AHkUlX6S+Ef06b7IZNe+J510UqGrGCnO+6M5X26pzo130zojugf3pptuMnMo
+9FaCu3btyf+UeRKpV2ePHmy63M6YsSIhPupr3r++edda+a0aNEib3k/ktFc
K+f3WXEI9cVh0twu6/m0Fph+W/3888+hPifcvG245ktk6vPPP3eVFYV7wRXT
sOrz7LPPxj2u+wWz6V/0HalZs6ZdhuYxITOl0l9EkTeG/69//cv33p6XXnrJ
1Ydp/phy/ORznbtSpDnQ1jk//vjjiX+Ucbwf2SOPUW5FMf6xcOFCu06DBw8u
dHUiZcOGDcZDDz0UaE1mhEP3/mqO7IwZM8zxceRWVPpJ4h/Rp/bwuOOO8x3L
19q/+J+nn36a8+Uj2bkJsl1wwQXmHJJE9L1u2rQp8Y8iVirtsj7D3nHkDh06
mPkrFFdQGzF8+HD7d5i16d+6pzMq9J1bvHix0bdvX+PGG28M/fk0vqb5AmPG
jDH7JeSXN0+5xjSV33zt2rX2ls5aaFdddZWrvFzk5Vy/fr25ntVTTz1l/o7T
+loa0wjqhBNOsOuTKC/B0UcfbT/+22+/ZVTHa6+91vW6rbW3kJ5S6S+iaMuW
LcaCBQvMsaQg64xu377d3F/9hY5F+M477zzz+6E1NjVvE2Ub7WH6yGMUrijG
PzSubNVp9OjRha5OJGhOjOZjWjkmlQ+PsffCcK4ZqrUVFKPzzqtF5qLSTxL/
KA5an96Zo1RbnTp1aB99cL78JTo3moO6adMm448//jDHd7W+//jx41333Fhb
u3btfO8zVznEP4pXKbXLmmPftm1b83dTqrif8o5rPDfs+RWAl8Y3FafQPLwg
MWqNEwSh6zDnujjeeyrToWs9jUM419JybppH2KVLl5TjtBqjtb6PdevWjXtc
eYOtMo855piM6+tdA2vgwIEZl1XKSqm/ANKhOaKVKlUyvx/MMSsNtIfpI49R
uKIY/5g4caJdJ/1/MdD4yIcffmjG6JTfdO7cuebc62x/E2pMasiQIa75mZr3
pHvaGK8qjM8++8x1H5Y1fvjaa68VumplQlT6SeIfxcPZj2nr3bt3oasUaZwv
f95zc+eddybcT7/hevbsGXdtes899yTcX/frFDL+oWsU/ea0thUrVuT1+Ytd
KbbLGpN97LHHjNtuu83o06eP+btLuc71b13navw5SH50IAyXXXZZoLiHtd1/
//2BylVb6TxOYwmZ+O677+LiHopNdO7c2R7/szbFG5PRGhbJ+uvu3bvnpD9X
v+as1/nnn59xWaWsFPsLIIi3337b/n4472NH2UV7mD7yGIVLbc+pp55qblrL
Nwo058N67zQXJBMaR/z999/NezW1Tqo+R/r/dOYaB6Hff5rHp5hEos9egwYN
zPMaNFeq0969e+Pua+rYsaMZE0Tu6Dwrzvbiiy8GPsa6p0tz06z3Rvdm6b5g
ZCcq/STxj+KhnLvOdvKGG24odJUijfPlz3tu/OIf8tdff5n34npj4YkMGzas
oPEP3Z/hfH7F8REc7TIQLYrhKi6gTeMCzvbt4Ycfth+ztqBrQi1btsxVluJ9
6dJ6WZofbpWhHDTO37NaR7dGjRqu51F/4kfzzK39vOsizJkzx1WO1tbPxsEH
H2yXVco5wbJBfwEkppx51vfDWqsHZRvtYfrIY1R6NN/Beg8VXwhKY49aW1X3
b3rvrXFuWiP19ttvN8cvM6XxS80pcpartalatmxp3tvjvO5Ndk+oH42DOu9D
VWzvrbfeyri+SGz27Nnm/Vg6x7Vr1077eMVhr7vuOtd7/cADD4RQ09IRlX6S
+EfxUD8fdMwanK9k0j03Wu/fe42htbK8HnzwwYLGP7z3EhH/SA/tMhBdWkfF
+o5qHGDPnj0Zl+Vcg1mb2vh0fP/998ahhx5qH681FRPNt/POH0yWY0TzMKz9
nPdqrVy50lyDzlmO7vUTzT/RPK10NWrUyC6revXqaR8P+gvAT8OGDc3vxuGH
H27+5kXZR3uYPvIYpU9ja8rzFuYWJud4svJepKLrXN2fo/Fr7ziE7rnx3mNj
bWeeeaY5RyQTPXr0cJV1xRVXmPfzWDR/+u9//7v9uOaHpJNHTvEZZ/npzE1A
avp9cs4557jOcaZr/Or7pnk5VjmaB6L7sZCZqPSTxD+KB+P56eF8+Uv33Oi+
BO+1xfvvvx+3X6HjH//3f/9H/CMLtMtANOk3oPPexxNPPDGr8saNG+dqK5Wn
PB1du3Z1He+3joE3x3qyMYtLLrnE3k/3hereq1dffdWMs+g3rrN9V5+k+X4a
X9TvkXTXOmzdurWrXuQ3TB/9BRBPYy/Wd0NraqI00B4iH5SHINF4fy63IHGJ
TDljC+vXr0+5v/ZJFNtw/r5XXEzzSjQnyLmf1q5IN4/GE0884SpD8ZpEMex3
3nnHtZ/GP4LQukrO4zQeg9zQdbzmkSvnoPcz87e//S3jcvW7xZkPV79HMo2t
lbqo9JPEP4pHPsbz9VnQfZXK8aT7QZVzTOtkaO3NTOi4zz//3Jg+fboxduxY
8z7NefPmmWMVa9euTbjlav1Gzpe/dM+N8/ecc/zJK5v4R7bn8qOPPoq79tF5
THTOMn1/yjraZSCadL+js2275pprsipv0KBBrvLmz58f+Fj97rTylGvzyx2i
3yJaiyDo7w+tb5Hot7jmfqgv8OZA1aaYkP6eLm/8ZtWqVWmXUeroL4B4jzzy
iOsaFKWB9hD5MHPmzNDjH2HeO/jPf/7Tfh7nnAo/3viH5l0op0MiyuXofS3p
XB+uW7fOqFChgn2s8mD7zd/z5tDr1q1byvI1zqG50tYxWtOW9dtyQ32t8/eG
d9N7mY2lS5e67kG79dZbc1Tz0hKVfpL4R/EIczx/8+bNxo033miuA5Go3dBY
R9OmTc0xmCA0Jj906FBzbmK6/a7yveYC58tfuudGa4x4nzfRXOVM4h/Znktd
G2ntTe96nMm2dNfqLBW0y0A0/fvf/3a1YZMnT86qvIsvvthVnuLHQXnngv/4
449x++j3qXftK8VcklFcWr8hK1asaB+j9cCtewR1j9/xxx9vP9asWTNzDkgm
lD/dWbd04j+Iob8A4nXq1Mn8Xuh+nCDjeygbaA+RD7r3UOOwYW7ffvttaPVX
LnZ9T/Q8QdYG9MY/kq0zpfFI7xi4cjEFpTyxzmM1/9jPDz/84NpX99SkonnW
zmPIDZU9rY979tlnu86rfic4c5dry3bOvOi+M6s8zUv3i8PBX1T6SeIfxSOs
8Xz1Jcpn7Sxb+YI0DtG+fXvXfZ76/4EDBxr79u3zLU/j4t61urXWhNqN008/
3cwhlWxs+tJLL83J6+J8+Uv33CivrnN/zf1LJN34Ry7OpWIZQeMe1qZYE+LR
LgPR5F3bL9vfpxdccIGrPM2vCMI7D6Vdu3auxzVPXLnJmzRp4tpPsYqg8+52
7txpfPzxx77rUH/55ZfG6tWrA5Xlx5t3ldyT6aO/ANw05826f/iss84qdHWQ
R7SHQGqNGzc2vydB867pHskGDRqY+Rs0zp3Kueee67q26969e6Dn2bp1qyuv
erK5H+Jdh0w5PVJp1aqVvX/9+vUD1QvJOfPIn3HGGeYaKuLNcah5Q9l69913
XWU+88wzWZdZaqLSTxL/KB5hjOdrrp9zzoHG2r1j1opPe8fn/e7j1GdD7Y9z
zNrbPqj98I7pK2/1Bx98YN6Dmehe0kxwvvyle240x8S5f4cOHRLul078I1fn
UveGvPnmm+b2j3/8w7XvyJEj7cecW5A1R0sR7TIQPbpmcs6Pq1q1qnl9lQ3v
fW5Bx/+Vh9J5nOqi+SBa2+qQQw5JGG9WjD5X61rmijf+88033xS6SkWH/gJw
c94rNHr06EJXB3lEewikVrNmTfN7ophGGJzj4doeeOCBQMdpXMV5nNYxTOb8
88937Z9srohoXN65/x133BH4NcHf119/bY4Tab14Z7xKOWxyHf/QeLf1+dV2
8sknZ11mqYlKP0n8o3jkejxf70+bNm1cZT777LMJ99W6d8578ZVbKNEY8gsv
vOAq78ILL0xY3rBhw1z7BYnpp4vz5S+dc/Of//zHFX/R61IMIZGg8Y8wzqVc
eeWVrjLJf54e2mUgejTXwdmutW3bNusyH3rooUDtr5f33rpEW7ly5cxY9Pjx
442ff/4567qGQXMrnXWOWnymGNBfAG79+/e3vxdaNxalg/YQSE7jf1YOBeW+
CIM1v8TaFixYEOg4bzxjzZo1vvvOnTvXNS6i59RYaDJXXXWVq/zly5en9boS
0ZqwuhdWY//jxo0zYzCaH23RXGrFcZSrvdSEEf+Qa6+91lVusvXYEC8q/STx
j+KR6/F87zoWdevWTXpP6XnnnefaP1HeCa1P5NxH8wMT8eaTqFy5cqB1INPB
+fIX5NyoHdB8Tu/Ylu7/9RM0/hHGuRTiH9mhXQaiR3MCc9mXiTfX+KhRowId
V69ePfsYrX+ruowZM8aMn+jeZ+UR0RpYUae1FKzXoTksSB/9BeCma1l9J1jb
pPTQHgLJaQ1U63uiecO59vbbb7uua7XGhGIAqWi8Q+Mq1nHJ2u+FCxcaBx10
kL2v7s9U7u1kNF7jLF/Xn9nQfUW9evVy3Rvq3JTrYsSIEfZ1rt+a5WVZWPEP
7xpYGsdDcFHpJ4l/FI9cj+c771PSlion9KxZs+L6FS+td+vcx1qHz0ufK+UG
dO6bKJ92Njhf/rznRnP49HoU2+jSpYvRqFGjhHlHlNdR338/QeMfYZxLIf6R
HdplIHq8uSpmzpyZdZmaV+cs85Zbbkl5jH67On9vae3GYuVce1G5SZA++gvg
f5STyfpOXH/99b77ac1a3aOrWLHG0jSfWvc+/f7770nL1zX/K6+8Yq6rNWnS
pMD5lJAftIdAcmrDrO+J8nzmumxnPlHNQ54zZ06gY99//33X9bDGSBLRXAtn
HEPjMtOmTUtZ/qZNm1zlK3aRKa3T5Yy/aKxGYziXX3553Loa1qZ526UmrPiH
ctA6y9W8IQQXlX6S+EfxyPV4vjfvtO7JT8bbfmvz3ufpzXnqN56f6Pl/+ukn
1+P6/CxatMj8fZBsU86qRErtfKXDe25SbepTg8yfDBr/CONcCvGP7NAuA9Gj
3BrOdu23337Lusxff/3VVabfnDqnFStWuI7xW68x6vbs2eN6HZ07dy50lYoS
/QXwP841BbU+SiJ79+5NeG+RNo1rJaLf6Hfffbe9bkwufgMg92gPgeSUq8H6
nmgdoVxRDPnoo492tY+PPfZY4OM1/9l5rO65tGgcVLlIe/fu7boP9YgjjjDn
AgSxbNkyV/nJ1tFI5umnn3bdg6R1t7zjRt710rVpbKbUhBX/kIMPPtgu96ST
TspZuaUgKv0k8Y/ikcvxfL1nio07y9Ma46nUrl3bdYx33bvu3bu7Hvf7DSDO
+LXWn/Cu56Rr+yBj836/GUrtfKXDe26OOeYYo0+fPuYYWM+ePc1717SmieZ0
6nolqCDxj7DOpRD/yA7tMhAtf/zxh+v3zlFHHZWTctUOO8fT1Aeksm3bNlf7
es4556Q8Zv78+caTTz6ZiyrnjOrkfB25/B1eSugvUJbpPk/FSoOy5nNXqlTJ
PDYRlad8vC1atIj7LeNct92yY8cOM5eSd19dDyNaaA+B5JzzLAYPHpxxOWpf
tS64clu0atXK1TaqbdX85nR4c39s2LDB/LvGQZRz1PlY8+bNjeeff94cKw1q
xowZrjJUbrpef/1119iJ7otKNAdQ9wR7+wvdK1xqwox/aI0Uq9zq1avnrNxS
EJV+kvhH8cjleL7adm/7qOvsVLz3oXrn/Sne7nz8uuuuS1iO5nU491P/5RWl
+EcxnK905HpujCVI/COscynEP7JDuwxEi2LizjbtX//6V87KvuCCC9JuL6tV
q2bvnypvk3KCWPfLKYdJVFx99dWu1/3WW28VukpFif4CZZHGjxSjqFmzptlW
BKFrWCuerHx1qej+HWcbpDVVvPlz//rrL+PUU09N+Lsnl/0AcoP2EEhO6/xZ
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
KgTOlz/vuencuXNOytX5cJb7yCOPJNwvjHMp06ZNc5Wp+yCceUIUo9d9fdoP
8WiXgWhQG2mti6hN8xXC7BvWrVvnej79rlNe4GKn8zhy5EhXv/DEE08Uulpl
Av0FyjLdP+NsNxLNO9aaVdb1qWKsQXjn9Tnjss5/P/PMM7l+SQgR7SGQ3Bln
nGF+R7TOVFjrozrXI7Q2za9LxLtmd6o2d+LEia79mzdvHqhOS5cudR0XdG1D
jVk4j9NcQT8ac/WuLe53r2gpCDP+4czLGMa6xGVZVPpJ4h/F4ffff4/LGa24
rmLXzm3evHnGc889F7c2nTatT+Hlzauk7aabbjJz8Mm+ffvM3AzO9cF1je6X
t+qf//xnwut6zfXW3ArnpvGV0047zYw7JKob5yuc85Xo3Bx44IG+1wdBKSah
OfvOcpXH0W8t+VyfS9E9Hs5+SZuO1+/YSy65xM6hrhxpQda4LzW0y0A0KG7r
bMc0By5sP/zwg+u+Jv1G1drDxZojXGvRnHzyya7zqP4TuUF/gbLs008/jbtG
9a5v5bznRvcdB+FcA0abcq7rWvedd96J+82C4kF7CCSndb71HalevXpoz5Fo
fp3fXJNzzz3XtV+qNVGd+Uu06V7SILTWufM4rdEVxKpVq1zH+a39LcoL4n3d
H374YaDnKYvCin9orRhnubm6f7hURKWfJP4RfT/99FPCPKPpboo/J6J1II44
4gjXvrqfqUmTJnHj5MpVobW+/Tz11FMZ109x+FwYNmwY5yuDc6M5fJdffnlG
Y12TJ0826tWrl7BcnRe/eE0uz6Vl8ODBSc/bcccdR64qH7TLQDQ412vab7/9
fPujXFM+D+Uvd7aZihePGzcucvnM/WiN5q5du7peg+LiymFcLK+hGNBfoKxr
27atqx3p0qWL63FrrXldt27dujVQmbqH13m9a+VM0m9xZ14Q/X+h5s8jfbSH
QHLW7/1k8xi8dM+j7mHU9vzzz6fcX7FkZ5vtF2vRtaAes/bTfaaprg+d68Rq
0zVlEBon1f1E1nHJcpI4/fjjj67n85tvopwgzr5Dm+5r1X2kpcp7/0LQuTqp
zJ8/31VurtaPLxVR6SeJf0RfonuQMtmSjflqzPuqq64y79/XWIv32Dp16hhD
hw415w4ko/fWm4M6nS0X61JofJvzlfm50T3A6erWrVvSMu+77z7fY3N1Li06
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
Y926dStgbQEUUlT6SeIfAAChXQYyQ/wDpYb+AgBiaA9RqpRH3DsHpGvXrvbj
a9assf9+7bXXFrCmAAopKv0k8Q8AgNAuA5kpxviH1m7evHmzve3evbvQVUIR
ob8AgBjaQ5SyNm3axMVAPv30U/OxTz75xP7bXXfdVeCaAiiUqPSTxD8AAEK7
DGSmGOMft99+u+u3apcuXTIua8OGDcZDDz1kjBo1Koc1TG7Hjh1Gr169jBkz
ZpjXscgv+gsAiKE9RClzxjisrW3btuZj8+bNs/+m60QApSkq/STxDwCA0C4D
mSnG+MeZZ57p+q3ao0ePtMv44osvjHPPPdcoX768WUbVqlXzFot47rnn7LpX
q1bNGDx4MHNY8oj+AgBiaA9R6rTmlTcG8tZbbxkvvfSS/e+JEycWupoACiQq
/STxDwCA0C7Da8mSJcbbb79tzJw503jhhReMCRMmGE8++aTxyy+/FLpqkVJs
8Q9d51WoUMH1O3Xu3LmBj9d145AhQ8w8l9bx5cqVM/r27Zu3+Mdnn31mnHDC
Ca7XUKdOHeO1117Ly/OXOvoLAIihPUSpU87zAw44wHVN1rx5c+OJJ56w/635
ugBKU1T6SeIfAAChXYaX914ua3v55ZcLXbVIeeWVV+xzc9FFFxW6Oil99NFH
rvfz2GOPNa/NglDekNNOO811fMeOHY2vv/465FrH03XmpEmTjCOOOMKuy377
7WeMHz8+73UpNfQXABBDewgYxoABA+J+LzRu3Nj+/4ULFxa6igAKJCr9JPEP
AIDQLsNLY8vt27dPK/7x3nvvGS1btrS3O+64I481Loyrr77aFUuIej6KsWPH
ut7PMWPGBDpO12+K71jHVa5c2VzfoNC07tV1113nek0PPPBAoatVptFfAEAM
7SFgGJs3bzaqVKnie++U1kwFUJqi0k8S/wAACO0yElGf3bRp08DxD+dav9o6
d+6cx9rmx6effmoMGjTIuPzyy835/d7fePXq1TMuvfRSY+DAgeaaYVHjjGEc
dNBBxrZt2wId582Z/uKLL4Zc0+B0zal5KM55IHPmzCl0tcos+gsAiKE9BGLu
v/9+3/jH+vXrC109AAUSlX6S+AcAQGiX4ad///7EPxyefvpp39933q1du3aF
rm6c2rVr2/Xr06dPoGM0F8j5urTOQdRs2bLFOOqoo+w61qhRw/j9998LXa0y
if4CAGJoD4GYXbt2GYcffnjC6+EdO3YUunoACiQq/STxDwCA0C7Dz7333kv8
o4xYt26d6/1ZtmxZymN0nXjYYYfZx5xyyinmtWIULV261JWX/dZbby10lcok
+gsAiKE9BP7nySefjIt96LosaJ45AGVPVPpJ4h8AAKFdhp9hw4YFjn9ofH30
6NH29sYbb+Sxpkhl6tSprjhGEFOmTHG9/1r/K8quueYau66HHnqombMduUV/
AQAxtIfA/2is0Jn3XFv16tULXS0ABRSVfpL4BwBAaJfh58EHHwwc/0C0ad0q
63185plnAh3TqlUr+5j69euHXMPsvfvuu67Pa9DXieDoLwAghvYQcJsxY4br
OqxBgwaFrhKAAopKP0n8AwAgtMvwQ/yj7DjxxBPte/GCzIv4/PPPXe/9HXfc
kYdaZkfXpTVr1rTrfPLJJxe6SmUO/QUAxNAeAvGc984EnW8MoGyKSj9J/AMA
ILTL8BMk/rFp0ybjm2++MT755BNj0aJFxpw5c4zXXnvNWLVqVeB9f/jhB9d+
P/74o7n20vjx441XXnnFWL16tW8dleda5TzyyCPmfWd63rK41rCuudasWWPM
mjXLGDNmjJmXXPMd/vjjD3ufefPmGZMnTzbPs5PyUpYvXz6tvBhXXXWV671f
vnx52nX+7LPPzDkYDz/8sPl+p6LrUL3X1rZ169a0n/Paa6911VufNeQO/QUA
xNAeAvGWLFlifzc6duxY6OoAKKCo9JPEPwAAQrsMP0HiH3379o3Ld6hN49BB
99XaTPLLL78Y559/vrHffvu5Hte/L7jgAmPnzp12WZs3bzbLK1euXFx5nTp1
iosBFCtdO73wwgtG3bp1E567SpUqmefviiuusP+mGIjTnj17jHvuucc4/fTT
zdhSkOesXLmyXd6xxx6bVp1XrlxpnH322XF11ecpmblz57r212tKl3cNrIED
B6ZdBvzRXwBADO0hkJjyB+oaXTnRAZSuqPSTxD8AAEK7HB6N1+s+qDA39ddh
CRL/mD9/vtGlS5dA8Q+/fQcPHmyOWx988MEJx/i995F98cUXRq1atZLue8IJ
JxT9PBDFeE499VTX6zriiCPMWFDPnj3NHN+JXvu3336b1fMqduQsr1evXoGP
XbBgge/7eMwxxyQ99t5773Xt/9hjj6Vd93379rnKUDwNuUN/AQAxtIcAAPiL
Sj9J/AMAILTL4Zk5c2bSMfpcbFpjKCzp5P+45pprUsY//PY97bTTjAMPPND8
f60b/MADD5j3jiWa8zBy5Eh7fL158+bmvAb9rWnTpnH7zp49O4zTkhfbtm0z
YzjWa9H6VYoP6NrLsnHjxrgYiM6NrsOysWzZMleZt912W6Dj3nrrLaNChQrm
MY0bNzZGjBhhNGrUyFXWihUrfI/XvB3nvspBkgln/OWkk07KqAwkRn8BADG0
hwAA+ItKP0n8AwAgtMvhKaX4h2INQeMf3n21aR0r5bVwztnQPARnPmvnNmjQ
INfcF63xZOX4trZu3brl5kTkma63lDPS+VpeeumlhPteeeWVrv06dOiQ9fMr
j4qzTL0vQVjrm5155pnGX3/9Zf5N6085y/Kbm6L3/ZBDDrH3q1KliivWkw5n
zEX53pE79BcAEEN7CACAv6j0k8Q/AABCuxyeDz74wJyjEObmzR2eS+nEPxYv
Xhw4/uHdV9t9992XcN+hQ4fG7au1nxKZNm2aa79ivfdf6z45X0f//v19973h
hhtc++p8ZWvcuHGuMpWLPghdO44aNcqOfYgzL4nmsOjaMxHlDHE+p/KHZKp1
69ausnbv3p1xWXCjvwCAGNpDAAD8RaWfJP4BABDaZfhJJ/7x4YcfBo5/ePc9
8sgjfddseuONN1z7Khf6n3/+mXBfxYKc+6abtzsK/vjjD6NGjRr2a6hWrZqx
a9cu3/2VC8T5mrUGVbY0t8ZZpvK2ZKpZs2Z2OQ0bNvTdTznbnc+ptb4y1bVr
V1dZq1atyrgsuNFfAEAM7SEAAP6i0k8S/wAACO0y/KQT/1i6dGng+Id3X41X
+1G+COe+TZo08d1X1yXeuEqxGT58uOs1pMq94V3za/v27VnX4eKLL3aV+dFH
H2VUjuJUWtfMKue8887z3ffqq6/OWcyld+/eOSsLbvQXABBDewgAgL+o9JPE
PwAAQrsMP/mKfyTbd926da5927Ztm7TOVh51bUcccUTqF5mC87kz2dL197//
3XW8Xr8fXZdVrVrV3lc5x3PBO6dE+dAz4Z27o5z2fpy53hUzca6hla5+/frl
fE4MYugvACCG9hAAAH9R6SeJfwAAhHYZfqIQ/9i4cWNa8Y+DDz64aOMfP//8
s+vYZOtFycKFC1379+nTJ4tX+j/enCKZxg9uueUWVznKh5PIli1bXPNENKcl
G974zTfffJNVefgf+gsAiKE9BADAX1T6SeIfAAChXQ6P+tK1a9eGuqlvDUsU
4h/btm1LK/7hzJ2Ri/hHPk2aNMn1WjWPIRlvnOKpp57KST0eeughV7nPPvts
RuWcfPLJdhmVKlUyvw+JPPnkk67nGzBgQBa1N4zTTz/dVZ5fvhikj/4CAGJo
DwEA8BeVfpL4BwBAaJfDM2vWrKznD6Tali9fHlr9iX/kl3J+B41n6FqrTp06
oXwWXnrpJVe5o0aNSruMHTt2GOXLl7fL6NChg+++bdq0cT3ftGnTsqm+mffe
KkvrgyF36C8AIIb2EAAAf1HpJ4l/AACEdjk8M2fODD3+8dlnn4VWf+If+eXN
Aa7Pjx/FRpz7Ku+J3/yKdHnfH61jla65c+e6ynjggQcS7vftt98a++23n2vf
n376Kav6V6lSxS6rWbNmWZUFN/oLAIihPQQAwF9U+kniHwAAoV0OzzvvvGOO
x4e5rVy5MrT6E//Iry5durhe63vvvZdwv02bNhnVqlVz7XvKKafkrB6//vqr
q+zLLrss7TLuu+8+VxkLFiyI20fXlc41srQdeeSRWdV9z549rvI6d+6cVXlw
o78AgBjaQwAA/EWlnyT+AQAQ2mX4GT58eOD4x4cffhg4ppHOvlu3bk0r/lG9
evWijX9cdNFFrtc6b968hPv16NEjbh5QsnOYLl3f7b///nbZxxxzTNplnH/+
+a76bdiwIW4f7+dLm47Lxvz580M7L6C/AAAL7SEAAP6i0k8S/wAACO0y/Nx9
992useQpU6b47vv222+79r3yyit99/WOUV9xxRW++65fv961b+vWrZPWuUKF
Cva+NWvWTP0iI+Tmm292vdbx48fH7TN27Ni4mIG2p59+Oqd1ueCCC1zlp7vO
muajOI9fu3at6/Hnn3/eKFeunHHAAQe49hsyZIi9z5o1a4yrrrrK2LVrV+Dn
9a4h9tZbb6VVbyRHfwEAMbSHAAD4i0o/SfwDACC0y/Cje+edY8mPPPKI777K
We3cV+Pnfrz5tZPd86+c3s59mzZt6ruvxsmd+yonhq5VisW4ceNc9W/evLmx
d+9e8zFdg40YMcLMlaG4Qb9+/Vz7fvnllzmti9Zuc5Z/1113pXV8ixYtXMdP
nTrVfmzixInma7BiPM4YiBX/WL16tXH00UenjI856b1WzMsqS3nQdU2K3KG/
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
uV26dPFdz0r7HXHEEeZ+3bt3d+03ZcoUc+6FYiK//fabMX78eLuuik+8+eab
xqpVq4wZM2YYRx99tPn3unXrmmVmSufMqrfmxagOQFlHfwEAMbSHAAD4i0o/
SfwDACC0y6Vp165dxtixY+11p3r27Gl/FjTXw6tTp07247Nnz85pXX788Uej
WrVqZtma06G5KV5PPPGE+fiRRx5p7Nu3L+7xkSNH2o9rLoj+/29/+5vx119/
ufZTzpCKFSuajyvfeCaUh1xzYKzYx3PPPZdROUCxob8AgBjaQwAA/EWlnyT+
AQAQ2mVIo0aN7M/C77//7npM/bcVn9C2detW1+Pq95U/fcmSJRlvd911l11+
u3btjN27d7ue46qrrjIfGzp0aML6qw7t27e3y9B8kK+++irhvv379zf36dev
X9rnSddKqp+1btjkyZPTLgMoVvQXABBDewgAgL+o9JPEPwAAQruMLVu22J+D
evXqxT2+cuVK+3HlE/fatGmTb66NTLchQ4a4nkM5z/X3ZOtMjRgxwj5+wIAB
vvs99dRT5j7/+Mc/gp+k/+/qq6+2n0NzUry0LpZiQTt27Ei7bCDq6C8AIIb2
EAAAf1HpJ4l/AACEdhnKK259Di6//PK4xzXHwXo80ZyJ7du3m7k5ateunfF2
2GGHueIfkyZNcj2HYhX6+7PPPpvwNfz5559GzZo17eNXr17t+3r/+9//mvt0
7NgxrfM0depU3/iMRXEXPT59+vS0ygaKAf0FAMTQHgIA4C8q/STxDwCA0C7j
5ptvtj8HzzzzTNzjihNYj4eV6+K2226zn2P06NFxjyvuosf69u2b8PiBAwe6
4ifXXXed73Ndf/315j433XRT4Pppjsyhhx5ql6/nu+WWW+xN51C55LUmlh5f
sGBB4LKBYkF/AQAxtIcAAPiLSj9J/AMAILTLaNGihf05WLt2resxrX1ljekn
ejwXXn31Vbt8v5zkWvdKjyu3+dKlS12PTZgwwc55ftJJJxktW7Y066z5Gl6/
/fabUalSJXPfuXPnBq6jN76Salu+fHl6JwEoAvQXABBDewgAgL+o9JPEPwAA
Qrtc2vbs2WPHDipXrux6TP18q1at7M9IrVq1cv78iq9UqVLFjFcojuFH1xbN
mzc366Hc5lqn65577jE6dOjgqt8vv/xibN682TjmmGPM16W5Gd999505f+Ot
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
MWHCBGPevHnGihUrjLVr1ybc/vzzz5y9Hs4Xooh2GSh+J5xwgv1dXrduXdzj
WhfYelz5NIFM0F8AQAztIcL2yCOP2J+ziRMnFro6KHLvvvuuayyqfPnyxu+/
/17oaqEMi0o/SfwDuRDWeP7mzZuNG2+80ahevbqrfGvbb7/9jKZNmxqLFy8O
VJ7G5IcOHWpUqVIlYXnJtssuuywnr0k4X4gi2mWguG3fvt1s5/U9Vg5Er6VL
l9rf82OOOaYANURZQX8BADG0hwjbfffdZ3/OZsyYUejqoIhpjPYf//iHa9zm
tttuK3S1UMZFpZ8k/oFcCGM8X7lc69Sp4ypX4zVau6N9+/b2GI81rj9w4EBj
3759vuX98ssvRq1atVzltW7d2rjmmmvMfE+Keycbz7/00kuzfk0WzheiiHYZ
ubBnzx7jtddes+eK/frrr0n3//rrr825ao8//rgxf/78PNUyutavX2/mM3/q
qafMuehTpkwJPJ/ujTfesL/HvXv3jnu8e/fuSR8HgqK/AIAY2kOE7aabbrI/
ZwsXLix0dVDEnHOJtDVu3NjYu3dvoauFMi4q/STxD+RCrsfztWaHc86Bxtq9
65R/+umncePzgwYNSliePrNnnHGGa/z/mWeece2jeYDeMf3//ve/xgcffGCO
yf34449ZvSYnzheiiHYZ2VqwYIFx5JFHutqFSpUqGZ999lncvrrW1hi8c996
9erlv9IRoOulSZMmGa1atUoYTz7wwAONLl26mHHpZJQT0zrGuz70nDlzXGU+
+eSTYb4klHH0FwAQQ3uIsDmvl7/44otCVwdFauXKlUbFihXtz9LBBx9s/g0I
W1T6SeIfyIVcjufrc9OmTRtXeYlyuIrW8nDOa9AYke6d9XrhhRdc5V144YUJ
yxs2bJhrv7PPPjvj15EM5wtRRLuMbOh+tIMOOijh+L3moDnpuuGCCy6I20/z
1bKxc+dOM/dRmJuui3Lpu+++i4t7aO5e586dzdiR8+9t27ZNWtb5559v7/vi
iy/af9dvG2/8W6/Fen7N0wHSQX8BADG0hwib7oGxPmeJfrsDqfzxxx9Gw4YN
XffLzp07t9DVQomISj9J/AO5kMvxfOWmcJalNcz1WfJz3nnnufZPlHdCaz05
99HaLIloHMi5X+XKlc3Pa65xvhBFtMvIlHLm1axZ0/z8tGzZ8v+1d+/xW4z5
H8cfuw45pHQgQqkWraif5EzrVPkV6xDFj/YntQrrtOEnZCutKLLKo5DWMacO
TrUhiViSIsqpIsqpFCH5c36P99yPmb1m7tPMfc/cM/d9v56Px/V40HfuuWfu
e+7rmrk+13V97LWbmjRp4qkfvv32W3f7Sy65JGecZNy4cWUdx4wZM3LuN8qS
ay5LqRYvXmztvPPO7r41j89c13nTpk1Ws2bNPO//448/5t3fWWed5W43cOBA
a/Pmzda0adPs70L76dWrl/v32bNnW6+//rrVokULOy6+fPnyyM4LtY/2AgAy
qA8RN61B7VxnujcEwlD/rsZQBRkvC8QhLe0k8Q9EIcr+/MGDB3v2NWzYsILb
z5w507O9+o/8/vCHP3i2WbJkSc596XrfZpttPNsWW2+kFHxeSCPqZZRKeSp0
7bRt29btnx8xYoSnbnjiiSfsf586daonXqvcRb1797YOOuigvHVNUNUU/1ix
YoUnRtS8efOcMYhzzjnH8/6KmeTz2GOP5Txmzf1YtGiR9cADD2T9beutt7b/
HQiD9gIAMqgPEbcOHTq492yMNUQYul7OPvtsz72/cjQClZSWdpL4B6IQZX++
P4e35jcUojHF/v6c9evXe7bZb7/9AvXn53r/zz//3PN3Xdcvv/yyvdZLofLd
d9/lfY96+rxQPaiXUQ7lMDfXJF66dKmnbrjqqquslStXurmKdtttt8jn8Cv/
UMeOHWMtOoconHnmmZ7Px5z3YbrgggsK1temn3/+2V5DzFzb9/TTT3c/540b
N1oHHHCA+zc9T2sOCBAW7QUAZFAfIm5Obr2mTZsmfSioMtdcc43nOeKGG25I
+pBQh9LSThL/QBSi6s/XtfTb3/7Ws6+PP/646OvUj2a+RuOJTX379vX8vdBa
h+b69TvttFPWGAv17wcZI6xc4PnU0+eF6kG9jCipLtBzmnNdKT9Qly5d7P9W
Xoty53pUM80hMXMxnXfeeTm30/pVe+21l7vd/vvvH2j/yoPy5ptvWhs2bMj5
93fffTdQWwHkQ3sBABnUh4ibM66lXbt2SR8KqsjkyZM9fTpaGxdIQlraSeIf
iEJU/flff/11VhwhyBqX6hMyX6P1VUzjx4/3/P2iiy7KuR/N6zC3U05avzTF
P6rh80L1oF5G1Mx83GZ58sknkz60RHXr1s39LBQHWbVqVdY2W7ZsyVr76sor
r0zgaIFstBcAkEF9iDj98ssv7jWmcURAEC+99JK9Xppz7Zx00kl2Py6QhLS0
k8Q/EIWo+vOXLVuW1U+m67GYww47zPOae++91/N3/zosmrPw0UcfebbR+xx/
/PGe7RQz90tT/KMaPi9UD+plRM3JC2KW66+/PunDSpTWKDQ/j+OOO87zd61v
NXHixKx1CLVWlda3AtKA9gIAMqgPESdz7eru3bsnfTioAl988YUnx6ByLPIM
gSSlpZ0k/oEolNqfP2vWLOupp55yc0Z88803WX1la9euLbofJyeYU7RPv9tv
v92zTePGja0JEybYa4Ro3fVjjz3W83eNW85F1+8bb7xhr5leqHz//fd8Xqgq
1MuImn+O2NFHH23fG9Qz5UExPxOtG6j5IJqXp3o2Vzz9f/7nf6wffvgh6UMH
XLQXAJBBfYg4aQyic41pjWqgEPXVHnXUUe41o1ytWjOkkA8++MD68MMPK3SE
qEdpaSeJfyAKpfTna4yrs/11113n/ruZt1Vl8eLFRfe1yy67eF6j+EQuWvOw
2LwNzRO85JJLYu1r4vNCGlEvI2rKt13JOKnuWT799NNYS7k5jnr27Fm0XlVe
p2OOOca644477DFcQNrQXgBABvUh4qTndOcaGzx4cNKHg5S76aab3OtFa+xq
LFohGtvqbO+MsQWilpZ2kvgHolBKf/6MGTPc7f/+97+7/+7PTaHtClF+WDMH
uOp5zYvwW7RokbXrrrva2+g9TjnlFDuHmGIBmhPYu3dv+7hXrFgR/gMIic8L
aUS9jKgNGTLEUz+1bNky1vebOXNm0dhCuSVIjLmQ1q1bu/vS3HTVo2PHjrXu
v/9+69lnn7WfcxXvBtKM9gIAMqgPEafZs2e719jQoUOTPhykmNZKa9iwoXu9
aM55IerX1Zpqzvbr1q2r0JGi3qSlnST+gSgoP3bY/vwBAwa42yvftqNXr16e
fSn/ayGPP/64Z/tDDz00axutCdW8eXP777///e8Tn6vA54U0ol5GlKZOnZoz
fvDVV1/F9p5mnDiu8vbbb5d8fFp7VzFnZ19HHnlkhGcPVA7tBQBkUB8iTo88
8oh7jY0ZMybpw0GKaU0O85nlggsusPud/OXCCy+0zjrrLHttLHN79QsDcUhL
O0n8A1Ho169fqP78X375xWrUqJG7vca9Oh599FHPvrS+008//ZR3X5qHYG6f
677AzME7bNiwks8zKnxeSCPqZURFcySctflatGjhqXMUg43Liy++aDVr1izW
Us76uMuXL/d8FqeddlqEZw9UDu0FAGRQHyJOd911l3uNTZ48OenDQUqtXLnS
2mabbUoe39WgQYOkTwE1LC3tJPEPROHkk08O1Z9/5ZVXerafNm2a+zddH507
d/b8fdCgQTn38/TTT3vWctp7773t8bV+Xbt2dbfR2k1Lly5NNL7N54U0ol5G
FDR/bI899rCvpd133916//33PfWTxh3Vqw0bNng+i5NOOqnoa1544QVr4sSJ
FTg6IDjaCwDIoD5EnMx8DtOnT0/6cJBSmutRauxDReueA3FJSztJ/APl0lom
/hzcp59+ujVv3jxPmTNnjvXAAw9Yp556alZ9+/zzz3v2OXfu3KxtLrvsMuv7
77+3//7rr7/a65zssMMO7t+32mor+31y6dGjR856fscdd7TnVZhFY5UPO+ww
O+bgPy4+r8p/Xqgc6mWUS2vldejQwb6OFGt96aWX7H934iEqbdu29bzm2muv
tfNe1Iudd97Z/SxatWpl3yvlo7l+zliuf/7znxU8SqAw2gsAyKA+RJz++te/
utdYvmd3QHPKy4l/7LPPPkmfAmpYWtpJ4h8ox8iRI7PWNiml/Pvf/87a96xZ
s+yxw+Z26k/bb7/9suIHylXh9LPlMmnSpJKPbdSoUXxeCX1eqCzqZYSl9l/1
TuPGje31iTt27OheRzfeeKO7nX/dvbfeesv+9/vuu8/+f+XE+Oyzz5I6jYo6
9thjPZ/FhAkTsrZZsWKF1adPH3cbxZpz1ftAUmgvACCD+hBx6t+/v3uNvfPO
O0kfDgCElpZ2kvgHytG+ffuy+/JVtD5KLlorRHP52rRp48kZ6xTlbLrhhhuK
5tPVNfeXv/yl5OPTupt8XpX/vFBZ1MsI67333stZB/Ts2dMzr0Fz2cy/Ky57
3nnnWVtvvbX9/9dcc02CZ1FZCxYsyPq8unfvbg0ePNjq27ev1bJlS8/fmjZt
WlbOdSAOtBeoVcOHD7eOPPJIuzz88MNJHw6qAPUh4mSO61+9enXShwMAoaWl
nST+gWqhHODKqfvKK69YCxcutL788suC64aYNNdBaxo6192ll15q5w/Tmuqa
6zB+/HjrzjvvtK677jp7LSozR4aK1oOqNnxeCIt6GWHdfffdWX35Xbp0sTZv
3uzZTnmGtH5evliJ7ivqyYUXXhgolnzCCSdYX3zxRdKHC2ShvUCtOuOMM9zr
+29/+1vSh4MqQH2IOJnzhjdt2pT04QBAaGlpJ4l/oNZpXXmzf37s2LFFX/Pa
a695XqP12nXd1gM+r/pFvYywBg4c6OmvVzz0u+++y7ntY4895s73UFFei4sv
vti+56hHDz30UM71EFWXaj7IE088QT2K1KK9QK0i/oGwqA+rX5rnfXXq1Mm+
vnQPzX0hgGqUlnaS+Adq3UEHHeReb7vsskvg+4Zu3bq5r9NaUvot1AM+r/pF
vYyw1q9fb82dO9fOx7hmzZqi22/cuNHefv78+fZrYVnffPONPefu+eeft5Yt
W2b9+OOPSR8SUBTtBWoV8Q+ERX1Y/dL8u2/VqpW7HioAVKO0tJPEP1DrNMa4
lHWZDjzwQPd1rVu3ju8AU4bPq35RLwMAgqC9QK1Kcz8o0on6sPql+Xe/0047
2cfVrl27pA8FAEqSlnaS+Adq3T777ONeb23btg00n2HFihWe9UgGDRpUgSNN
Bz6v+kW9DAAIgvYCtSrN/aBIJ+rD6pfW37365cz8egBQjdLSThL/QK1T7m6z
b37w4MH2NZvPq6++as9fcLbXmIsg67rUCj6v+kW9DAAIgvYCtSqt/aBIL+rD
6pfW371y6jnHpbWmAaAapaWdJP6BWvfJJ59Ybdq08fTp77rrrtYll1xiTZgw
wXr88cetyZMnW1dddZXVs2dPTx7vRo0aWW+88UbSp1BRfF71i3oZABAE7UW6
/PLLL9bTTz9t3XbbbdY999xjrV27tuD27733nvXII4/Y93UvvPBChY6yOqS1
H1TP1T///LP17bffWqtXr7Y+/fTTnEXP6ags6sPql9bf/cqVK93j6tu3b9KH
AwAlSUs7SfwD9WDDhg1W7969re22287Tr5+vbLXVVtb5559f9PmxVvF51Sfq
ZQBAELQX6TF37lyrZcuWnvuyHXbYwXr77beztt2yZYvVr18/z7bkbPNKSz+o
YhkjR460c/FpXJI53qhQmTdvXmLHXK+oD6tfWn73fosWLfKsyQAA1Sgt7STx
D9QTjY+bPXu2dcMNN1gDBw60Tj31VKt79+72PAY9Dw4ZMsSaNm2a9cMPPyR9
qKnA51VfqJcBAEHQXqSD+rrzjVU5/vjjPdvqeU33cf7t+vTpU9Yx/PTTT9aC
BQtiLXoerZQk+0H1jPzggw9aRxxxRKBYR66iMUyorKTqQ+Z9RSet8Q99T85x
DR06NOnDAYCSpOW5gfgHAEColwEAQdBeJO+rr76ydtllF/t7OOSQQ6xJkyZZ
TZo08fSFa60kh9YxzdVfPm7cuLKOY8aMGSX31QctueayxCWpflA9X//pT38K
PO+6RYsWWUVxE1ReEvUh876ildb4h9addo5rzJgxSR8OAJQkLc8NxD8AAEK9
DAAIgvYiebfeeqv9HbRt29b68ccf7X8bMWKEp4/ziSeesP996tSp7r+1atXK
Wrhwob3O6UEHHWQtWbKkrOOohviH1tC/7rrrApW9997bfV/FlYK+buPGjSUf
n8bx9+rVK+u8FdMYPXq09dprr1mvv/66++/t27ev6JwYFFbp+pB5X9FLa/xD
cW3nuJR/EwCqUVqeG4h/AACEehkAEATtRTpoLZt33nnH/f+lS5d6+jivuuoq
u++/YcOG9v/vtttudu7sKKlvvmPHjrEWnUM5KhGj0WdfCj1XH3XUUZ59KdfH
qFGj7HH7pk6dOrnbKP6FdKhkfci8r3ikNf6h+KdzXNOnT0/6cACgJGl5biD+
AQAQ6mUAQBC0F+mkZ6ymTZu6388JJ5xgdenSxf5vrY1T7lyPapXm+Mfdd9/t
2c+2227rztvxGzRokLtdo0aN7O8byatkfci8r+DSPu8riGuuucY9Ls37AYBq
lJbnBuIfAAChXgYABEF7kV5//OMfc/YlPvnkk0kfWmJWrFhh9yMGKcqL4Hxm
Bx98cODXldIPunnzZntOjvk9TZkyJe/2w4cP92z72WeflfOxICKVrg+Z9xVM
muOeQf35z39238v8zgGgmqTluYH4BwBAqJcBAEHQXqSXMz7cLNdff33Sh1U1
KrkOzk033eT5no477riC2/u/21mzZsV6fAgm6fqQeV+51UL848wzz3TfK+oY
FgBUStLtpIP4BwBAqJcBAEHQXqTXyy+/7OmfO/roo+1nMgRTyfiH1iQyv6v3
3nuv4PZXX321Z3vlfkDy0lAfMu8rW1rnfYWhWJZzXJs2bYr1vQAgLmloJ4X4
BwBAqJcBAEHQXqSX+uPM/k/1i8ZJz4qffvpprKWSeS4qFf/Q2le/+c1v3Pc6
4IADir7mnHPO8Xy35ENOhzTUh8z7Kk9a858rFqNj2nrrrfPWg3HPcaFQKPVT
4hL3/oMi/gEAEOplAEAQtBfpNWTIEM+zbMuWLWN9v5kzZ8b+PL548eJYz8FU
qX5QnZN5jsphXcxee+3lec1bb70V2/EhuDTUh8z7Kk9a4x/Kc69j0vpm+STd
X0qhUGqnxCXu/QdF/AMAINTLAIAgaC/SaerUqTmfZ7/66qvY3rMSa+y//fbb
sR2/X6X6QZXD2jzH5557ruD2q1at8mz/29/+1vruu+9iOz4El4b6kHlf5Ulr
/KNJkyb2MbVr1y7pQwGAkqWhnRTiHwAAoV5GXL7++mt7bYZbbrkl9vfS+sjn
nXeevS6I7m8ARI/2In00n2D77be3v5cWLVp4+kIff/zx2N73xRdftJo1axZr
+fDDD2M7fr9K9YP61ysqlqN69OjRnu2PP/742I4N4aShPmTeV3nSGP9QH5vi
nDom5bMHgGqVhnZSiH8AAIR6GVF75513rJ49e1pbbbWVfW3ttNNOscckHnjg
Afda3nnnna2hQ4fa66wDiA7tRbqsXbvW2mOPPezvZPfdd7fef/99Tz/iRRdd
lPQhVo1K9YP65+p89NFHebfV87j6s83t77///tiODeEkXR8y76t8aYx//PDD
D+4xdevWLenDAYCSJd1OOoh/AACEehmyYcMGq2PHjm45/fTTQ+9D9xXXXXed
na/RXKtjwIABscc/9Lx84IEHep6h99xzT+vpp5+O9X2BekJ7kR7qI+vQoYNb
z7700kv2vzvxEBWtIW+69tprrWeffTaJw029pPJ/TJs2Le+248eP92y77777
Wlu2bInt2BBOkvUh876ikcb4x2effeYeU58+fZI+HAAoWVqeG4h/RG/dunXW
559/XrB8+eWX9hod+uwApJOeLSdPnmw9+uijSR9KRdRyvYzg1CdmPj936tQp
1Ov1uznssMM8+9C4tffeey+mI86m+4/77rvPHgftHMNvfvMb64477qjYMSCc
eqtvqx3tRXL07KC6rXHjxnYOCcWpne/jxhtvdLfr3bu3px52cmWrbnTqRPWv
watS/aA///yzPSfSea9LL70053ZvvPGGte2227rbaT7lm2++GdtxIbyk6kPm
fUUnjfEPzaF2jmnw4MFJHw4AlCwtzw3EP6LXqlWrUHM7lc+qb9++1m233Wat
XLky6cMv2yuvvGIdcsghbrnmmmuSPqSKqJfzrpfzfOqpp6y9997b/o3utttu
SR9ORdRyvYzgNC7YbKPC5OxQ+24+Q+64447W7NmzYzzawrTulZ7/zfMZMWJE
YseD3Oqxvq12tBfJUSw51/OE1hrUs5fDXAtQZb/99rNzIznz8mr1/q1clewH
HTdunGeO5EMPPeT+Tc/Xd955p9WoUSNP7GPixImxHhPCS6I+ZN5XtNIY/5g3
b557TFrLtRpVMv8fcksiLyLfe/LSlg8zLc8NxD+id/fdd1vt27cPFQNxSoMG
Dazrr7++quc0P/bYY55z+u///u+kD6ki6uW8a/08V6xYYZ100kmec/Q/P9Sq
Wq6XEVzXrl09bdJ3330X+LVXX32157eThrH8uhfR/BNzHsisWbOSPixY9V3f
Vjvai+ToOcP//KDcuP48R5pfoBh0vliJnueQTXNoDj30ULs8+OCDsb6XvoMT
TzzR8920bt3aHl9kxj1UlM/qhRdeiPV4UJpK1IfM+4pXGuMf6rd0jmnMmDFJ
H04oSeT/Q26VzIvI954eacuHmZbnBuIf8dAzxy677OK5/7j44ovttbE0XmPV
qlX2OHqt59q5c+es5xLd+2o8ZDWq9f7xfOrlvGv1PNUeqF0w1xhwyv7775/0
4VVErdfLKE5tvrOOtEq/fv0Cv9Z5tjbbvLRYv369Z0yk1pWOMy8oCqO+rX60
F8kZOHCg5zejHE354tS6ZzPzMG2zzTZ23axnPaSDnovVfpptlD8mfPvtt9vP
j0inStSHzPuKVxrjH1oT1Dkm/XeUvv32W+v111+3Y2n33HOP9a9//cv65JNP
yl6bPcn8f8itEnkR+d7TJ235MNPy3ED8Iz5mO6ryf//3f3m3Vfuj69F/TzNq
1KgKHnE0aqF/XPcEO+ywg1uWL19e9DW1cN5B1OJ5Pvnkk9Zee+2V87lCRW1H
PaiHehmFLVq0yHPtB11jXPcRzZs3d1+nschp61/797//7bkvHzJkSNKHVJeo
b2sD7UVyFM+dO3euvTbKmjVrim6/ceNGe/v58+fbr61HeibdsGFDrCUKinEs
XLjQeu6556wlS5ZY33//fST7RbwqUR8y7ytelZz3FZTmfDjfneaCREHtxskn
n2z3Tee6RrQuu87fjKkFlYb8f7VIfacas7VgwQLr/vvvt+sC/XeYmHiceRGj
/N7JBRitNOXDTMtzA/GP+PTv3z9w/EO++eYb6+CDD/a8Rm2T4vHVRHNq1V47
pRrXGVU8yvweFD8tphbOO4haOs8PP/zQOuGEEzzf9QEHHOBpI1TC5n+uVvVQ
L6Owf/zjH+51oLmJQWnNcvM346y3kDYXXnihe4xNmjSp6rUmqw31bW2hvUA1
0XjHfDHXqIrW/UB9qkR9yLyv+qPx9M53qLhFOdQvp7k/5jWkNYq01p7GMmp9
HPNvw4YNC7X/tOX/q3bqb1UcXJ+pxuLma3c0nkhrD6vPNoio8yJG+b2TCzA+
aciHmZbnBuIf8dF9Rpj4h2gt7O22287zut/97nclxeBROv8YmyDxD1Qfs70+
8sgj7bF2Yq63qnLQQQclfKSVUQ/1Mgo766yz3OtA40WCOvzww93XtWnTJsYj
LI/yg5q/7X/+859JH1LdoL6tLbQXqCYzZsyIPf7Bs0L9qkR9yLyv8Kpl3lc+
Zn9lufHVs88+21NfnX/++XZ+ZIfWvtD9l/N3jcHVXLSg0pj/rxr98ssv1lVX
XWX3//vbmIYNG9rr9+Zqf4466qjA6/pGmRcxiu+dXICVkXQ+zLQ8NxD/iE8p
8Q8ZOXJkVp2m9SJQOb169eKZpg5oXuauu+5qr3uqesmhe8x67I+rh3oZhTnr
j2tuhO7Bg1A/tvl7SfPa0rpfMXNzac4lKoP6trbQXqCaaDyqxsPHWZYtW5b0
aSIh1IfpVO3zvsyYxerVq0vez1133eU5ZsVVzPswx4svvujZLug67GnO/1dt
9D3nim2YfVGKbWpukOZ1mdu1atUqcK6NKPIilvu9kwuw8pLMh5mWdpL4R3xK
jX9orVdzzqrKaaedFvh9te6n1gTU2o1jx461x1auXLkyZzvn0PzZDz74wK5b
lZddzwm6Z9DrTF9++aU1Z84ce824cePGWVOmTHH7yDRu4P3337fHCrz88st2
PFH7+Oijj9zXa42vTz/9NG/58ccfPe+na7HQ9vnWLtH5aHyM1mTRZ6DjffXV
VwO1CW+88UZWe6L4U67312cd5Lwree6lfP9BBD3PfH799Vdr6dKl9riAW2+9
1Ro/fry9hqWuNbX15R5flOq1P64e6uVaprZYuQtnzpxp//Z1X6r5Dub64aq/
VW/r9+z3xRdfuNfAlVdeGfh9L7jgAs/vZfHixaGOW+2O5mEov6vqlmJUN378
8cduybf+Qz6DBg3yHG+Y8W2IXr3Wt9WO9gIAMqgP06na53316NHDfR9zrkYY
Wre6QYMG7n6UYy3fM7eeDcxz69OnT9H9V0P+v2rij3/onjhfn4/6UvzX4wMP
PBD4vcrJi1ju904uwOQklQ8zLe0k8Y/4lBr/kK5du3peq/GqxajN+utf/2o1
btw4Zz2y0047Wddee639ffkNGDAg52s0PkDWrl1r9e3bN+c2+luhfaivyaG1
vArdQ1x22WWe43riiScKbj9hwgR3W81BHT16tL0OS76cXlpbbNKkSTk/P7U3
WuvSv/5loaLtg5x33Ode7vcfRNDz9NNYErVh+b4Tp2i9yLTkR6vX/rh6qJdr
kdrUhx9+2B73k+u3pXVj1R5prrvzb4qB+Gm9aP1N82E1Fznoe5t5NsPMV86V
D0Kl2Hgz5cQyt9d5heFfA+uKK64I9XpEq17r22pHewEAGdSH6VTt876Ui13X
ld6n1HGCf/nLXzz3WNOmTcu7rcZLmtueeeaZRfdfLfn/qoU//lFojJb6dPwx
BH9/UjGl5kUs9XsnF2A6JJEPMy3tJPGP+JQT/9D4eH+f0KpVq/Jur3H5Zv2n
eWRaX1v5rLbffnvPfo499tisdUBfeOEF65RTTsl6T/WXK0aovvN8/dZO/CPf
Psz+cY1HzhfrVXzFX8d//vnn1rnnnptzXtypp55qzz1QO6G23cwNpb529cPp
9+x/nf6Wa21CxTIK9c/nKjfccEOg847r3KP6/oMIep4O1Qv+ceGaV3PcccfZ
40n22WefrH2l5Z6pXvvj6qFerjXr1q1zn4+contI1RHnnHNOzjpQJdfz2uWX
X27/rXv37oHf3z9W7Lzzzgv0Oq1J3ahRo5zHptx3hdx4442e7TX+KQzNRTNf
/8c//jHU6/P56aef7Ll3cZag+Q2rSb3Wt9WO9gIAMqgPEYd9993Xvq6aNm1a
0us1P9rsHyk090P864Upt0Mx1ZL/r1roua5du3Z2P5biBMX07Nkzq08pjFLz
Ipb6vZMLMB2SyIeZlnaS+Ed8yol/5Fqv8vXXX8+5rfrJzX6kli1betai1HpI
6gcz96V+6VzMWKBK79693X23bt3aOuSQQ7LG8Tvxj3z78PePq9/enIeporq7
EM3LMrdXjl6HP5+X1nNXbFl0rSk2oLiyuY3iOf5+JMVRnnvuObscc8wxnu01
r8T5m1nMtTiLnXcc5y5Rfv9BBDlP8a8JqVxe5hpfqjeuv/564h8pUg/1ci3R
nDc9yzjf21ZbbWXHBsw5Xlp3zx8DUX2h9tlP99yaFxJmPahFixZl/c6L0Xg8
px7Us93NN9+cFQ9dvnx53tcrPmNu69w7h2HWmf/1X/8V+vW5VPs6C0mp1/q2
2tFeAEAG9SHi4OSrU394Ke6++27P/dU//vGPgttrPJC5faG5IlJN+f9qlRlP
UBkxYkSo15eSF7Gc751cgOmQRD7MtLSTxD/iU078Q3Mu/P0e6m/P5aSTTnK3
0bolucb1ql/LXNdJ8wP8cQt56qmncva5aG6Ew7/2iH8//n3k6h/v37+/ZxvV
3YWY7bfWsDLz9JjxD53j119/nfV6fSZ6nfme+ozz8R9fkD6nIOcd9blLlN9/
EEHPU+tAOttofch8403MOZDEP5JVD/VyrVA7bP7GVLR+VS7+OufEE0+M7Dj8
43WUd6QYZy095fNzYqJag8rcT771BFSPmGv8NWzYsKQ1/cx4S6nj6vyIf5Sm
Xuvbakd7AQAZ1IeImu53nTX6db9fCn88QzkC81H/jsZROdtqfFKx++ty8//l
otzer732mt0/rlyzisG8++677t8111pxHK2vjf/MEXKK5teHFTYvYhzfO88C
ucX5e6h0Psy0tJPEP+JTTvxD7ZO/30Pru/spV6y5jeZr5KP3N7fNFaudP39+
1vsqp4TfmDFjrIEDB9pzATS/oNA+cvWP++M76h/PNR7ZoTkPzraXXnqp5286
Bq0/r1Jo7LHWsDTfU3mX8ikl/hHkvCXKc4/6+w8i6Hmaa6Zp/Hm++Ifm5/z5
z3+2iz+2k5R6bYProV6uFf6cd4MHD867rX/tX63bFxXdi5n71nqwxei+4pZb
bvHMBzNzk+j5S/cluWhun/l+QeaG53L00Ud79rN58+aS9mPS/WnHjh1jLVqb
udbUa31b7WgvACCD+hBRU/+Kc11169Yt9OvVn2fm5yu0RtG8efM840Q1nrJQ
P4mUk/8vly+++MJeQ1fvnWv8j/JBaL643kf/36xZs7LerxY8//zzns9IY8LU
Hx5WmLyIUX/vDp4FvCrxe6h0Psy0tJPEP+JTTvxD17z/Op85c2bWdspPbm6j
dbPyeeSRRzzbHnHEEVnbaI0tcxvNi/LHN4rx7yNf/7g/H7j61XP54Ycf3BwW
Ggehz6YUN910k+f9FEfNp5T4R9DzlqjOPervP4ig5+nPY1WJdQWjUq9tcD3U
y7Xg+++/t+9znO9Lc7sK1dPKBWJez1p/KipXXnmlZ9/KE1SKDh06uPtQ/ZiP
1ucy30/rfZXCHw838ynVMuW307z1OEvY+Tj1Wt9WO9oLAMigPkTU1qxZ415X
ypsZ1quvvuq5t1K/VC4au2P2ZytX59SpU4vuv9T8f7lorQsz/qJxUFqP509/
+pPVtWvXnP2/xdYPr3W6Pvbcc0/389D69LNmzSppX2HyIkb5vZt4FviPSv0e
4sqHmU9a2kniH/EpJ/6hMfH+69qc6+TYY489PNt8+umnefepPnxzW43P9/PP
TVD+7LD8+8jXPz58+PBA25nji5XHolR33XWX5/0mTJiQd9tS4h9Bz1uiOveo
v/8ggp5nv379PNspfq111KIYZ+1QHaM5MBq3Uqgo/1sY9doG10O9XAv8sdxi
OTc0RsTcXnNpo6I5Z+a+33jjjdD7UJzXzCt18skn591W88SiiLf466dS91Nt
0rhGV73Wt9WO9gIAMqgPETXlSQjSp5CP5lmb91bmOFr172nNad0LK97hbKOx
ixoTHkQp+f9yuffeez1j3LWekz+v38iRI7PuNUeNGlXS+9UCrYm/1157eT4P
rQtQjqB5EaP63v14Fsio9O8hjnyY+aSlnST+EZ9y4h/+mL3Kpk2bPNvoe/Nv
06NHDztmkatorXX/9v41Rvx921pbKqyg/eOrVq3ybKfxzLq2TLpWzLkSpeS5
dWj+gfl+ScY/ojj3OL7/IIKep/oTzXVEnaL1vjRmWzlJyqXc70H64xRHD6Ne
2+B6qJdrga5H8/r87LPP8m6resVci073UVHyzy3RfXFYzz77rGcfuq/Lx8z3
rpiJuYZWGFq/0XzPKOfEpBnxD0SF9gIAMqgPETWzL2jo0KGhX+/P/eHkR1We
PuUBNf+m9VUffPBBuw8wqFLy//k988wznvFP+++/f8757BrH6L/X1PjGeqFx
+h988IGd5+Hwww/3fA6dO3cumNM2qKB5EaP43nPhWSCZ30Mc+TDzSUs7Sfwj
PuXEP/x1i/In+AXt+y1UNIfNFKYPP58w+zjyyCM9286ZM8fzdzPX+vHHHx/o
/bXuoT6/v//973Z+Js0T0zyJBg0aeN4ryfhHFOcex/cfRJjzVD5mJ3ebv2he
35AhQ8oai078I1r1UC9XO//aiIXWihLdD5nb/+///m+kx+PPLVJKHEE5psx9
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
5j1VsTE+Wr/I3D5of2o5+f+23357T39HmPc5/fTTA79PPXj44YeznveUYzas
oHkRy837mE89xz+S/D3EkQ8zn7S0k8Q/4uMf15ov/qHPT/PXtLaFub3i9cXW
N9d34Y8Zal0Q5Vjw++CDD+x4irOdxgf7+X9TPXv2DH3eyklr7iPIPEr/nAKn
XHnllQVfN3r0aM/2PXr0yFovSnmZtIaYf9+F4lH+c1Cc1czvpLiE1ssz8++W
ct7lnLtE/f0HEeQ81c/q/F3zbvKtSeZfZ6yU9joOV199tee4NI6mnFwD1aIe
6uVq51/zU2PlFdcU1QfKjac8GYoZ+Nf0fPfdd2M5Jq37ZL7PtddeG/i1nTt3
9rzWXMN08uTJ7hp5ivOYMRAn/qG8gOov17+df/75Rd9P7a3Wx3X2o/u+fPUT
KqNe69tqR3sBABnUh4jakUceaV9TmmMdNCe5jBo1ynNPlSuHrEn32v7niiBK
zf+nPhTzdVo3KB/dn++///6e7TV2Ev+xZMmSrD6kUtbKDZoXsdy8j/nUa/wj
6d9DHPkw80lLO0n8Ix7ffPNNVp97nz597LXa1d+tfBL33HOPdcUVV1i77757
Vr2luWxOn1Yx/v5oFfV//eEPf7D7vxSHUZ+4+Xf9LddYAuXbMbfbcccdC87B
ysW/Pot+V19++WXB1+iaaNOmjed1au+/+OKLgq9Tvgj/uWudeOXQHTp0qHXY
YYe5c0CPOeYYz3aqP/J9xuqHN+sDFa1NpXM766yz3P4zra/v9J2Vct7lnLsj
yu8/iCDnacY/VBTn+O6779y/qw5RbmYz/4fiJEnS2qhqe9V361+DzmkTpk2b
Zp9rmPvQalLr9XIt0PXnnwuhuKbygjRv3tz9N8VJhgwZ4v6/xpbodxcH/R72
3Xdf9700jzEotYvmuSjWfNppp1nt27f33Ftrbod53nvuuafVr18/e6yK/l/t
6EcffVT0/V5++WWeo1KA+rb60V4AQAb1IaL2+9//3r6mlBM0DI1dNe+nNP6x
EDPPiMrJJ58c6H1Kzf+ne3XzdYceemjebf39CSrqR8N/aGyb/zMK28cTJi9i
uXkf86nX+EeSv4e48mHmk5Z2kvhH9G644QZ7fSH/9Rmk6HV33XVX6PfU3LdG
jRoFeg+tJ+nP/6AxtOoTz7W9+vqVV6LYGFm1r/n2obktY8eOLfj6YcOGeV6j
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
AAAAAAAAAECtIf4BAAAAAAAAAABqzf8D88C8eA==
    "], {{0, 401.}, {800., 0}}, {0, 
    255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{800., 401.},
  PlotRange->{{0, 800.}, {0, 401.}}]], "Input",ExpressionUUID->"5490e667-0570-\
494f-a47d-2b385bb02658"],

Cell[CellGroupData[{

Cell["Examination of Derivative of Log-Log of Coupled Gaussian", \
"Subsubsection",
 CellChangeTimes->{{3.9000908318597717`*^9, 
  3.9000908494516983`*^9}},ExpressionUUID->"769843b4-94f7-4512-81a0-\
856e427bbfa7"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"CoupledNormalDistribution", "[", 
             RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
            "x"}], "]"}], ",", 
          RowBox[{
           RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
           RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
           RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], ")"}], "/", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"CoupledNormalDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900090904814007*^9, 3.9000909256635733`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"d22f3db4-81de-41de-a4e5-361c0ca936d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
     SuperscriptBox["\[Sigma]", "2"]}]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.900091196692093*^9, 
  3.900091196709641*^9}},ExpressionUUID->"29cb402c-f0d1-4d18-b3c7-\
06aefaf30f03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], ",", 
   RowBox[{"x", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9000912029736547`*^9, 3.900091215760991*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e015e916-8715-49e6-b9ba-8ce6c5321709"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "-", "\[Kappa]"}], "\[Kappa]"]], "Output",
 CellChangeTimes->{3.900091217125355*^9, 3.900171793443536*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"50661378-8dd8-4215-846a-eeafc04e4178"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "-", "\[Kappa]"}], 
       RowBox[{"2", "\[Kappa]"}]], "==", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]}], ",", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], "<", "u", "<", "\[Infinity]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.9000916701267023`*^9, {3.900091700234613*^9, 3.900091703491547*^9}, {
   3.900608220399951*^9, 3.9006082292426157`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"9225f0c1-d0d9-42e2-ad08-0f36bc076777"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["\[Sigma]", 
       SqrtBox["\[Kappa]"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Sigma]", 
      SqrtBox["\[Kappa]"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.900091675725288*^9, 3.9000917043510933`*^9}, 
   3.9001718064956903`*^9, 3.900608232329668*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"7437d584-d0db-4682-bfa9-dd362ec7791a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], "/.", 
   RowBox[{"x", "->", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"\[Sigma]", "/", 
       SqrtBox["\[Kappa]"]}], ",", 
      RowBox[{"\[Sigma]", "/", 
       SqrtBox[
        RowBox[{"1", "+", "\[Kappa]"}]]}], ",", 
      RowBox[{"\[Sigma]", "/", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
      RowBox[{"\[Sigma]", "/", "\[Kappa]"}]}], "}"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900091232721039*^9, 3.900091338893015*^9}, {
  3.900091441672433*^9, 3.9000914444842463`*^9}, {3.900091486252551*^9, 
  3.9000914930424023`*^9}, {3.900612544266749*^9, 3.900612551922776*^9}, {
  3.9006126307619753`*^9, 
  3.9006126319965887`*^9}},ExpressionUUID->"46f4802e-8818-4a41-827b-\
7ac009d46714"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[Kappa]"}]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "\[Kappa]"}]}]]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "\[Kappa]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000913000574017`*^9, 3.900091309554027*^9}, 
   3.900091339842345*^9, 3.900091445728692*^9, 3.9000914944441013`*^9, 
   3.900171811793377*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"727ce72c-c04a-42b3-b0b3-6c5127070346"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Kappa]"}], "\[Kappa]"], "/.", 
  RowBox[{"\[Kappa]", "->", "0.1"}]}]], "Input",
 CellChangeTimes->{
  3.900607973732259*^9, {3.900608945706497*^9, 3.9006089816492167`*^9}, {
   3.900609506469487*^9, 3.900609509887285*^9}, 3.900610106588345*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"451f4961-24ee-4069-9f4b-680dd8a743a1"],

Cell[BoxData[
 RowBox[{"-", "11.`"}]], "Output",
 CellChangeTimes->{3.9006089824500103`*^9, 3.9006095114189997`*^9, 
  3.900610107329196*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"74f35a92-a6bf-45ba-8005-7d3a24ee0229"]
}, Open  ]],

Cell["Translation to q-statistics", "Text",
 CellChangeTimes->{{3.91743082098028*^9, 
  3.917430825834594*^9}},ExpressionUUID->"32002940-9ebe-4ecb-abf5-\
cd09c161bb32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"betaQToScale", "[", 
    RowBox[{"\[Beta]", ",", "q"}], "]"}], 
   SqrtBox[
    RowBox[{"qToCoupling", "[", "q", "]"}]]], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.917448875916563*^9, 3.917448928240273*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"2b1a3779-9d86-4625-a4d4-44deb607d684"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["1", 
    RowBox[{
     RowBox[{"3", " ", "\[Beta]"}], "-", 
     RowBox[{"q", " ", "\[Beta]"}]}]]], 
  SqrtBox[
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "q"}]]}]]]], "Output",
 CellChangeTimes->{{3.917448922365781*^9, 3.917448929195862*^9}, 
   3.917452239384015*^9, 3.9174522794136*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"2bbc6948-c045-42ba-9353-502279fb53c7"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["1", 
    RowBox[{
     RowBox[{"3", " ", "\[Beta]"}], "-", 
     RowBox[{"q", " ", "\[Beta]"}]}]]], 
  SqrtBox[
   FractionBox[
    RowBox[{"q", "-", "1"}], 
    RowBox[{"3", "-", "q"}]]]]], "Input",
 CellChangeTimes->{{3.917448948126727*^9, 
  3.917448973361915*^9}},ExpressionUUID->"2dcc3e42-73c2-4d24-b068-\
a66543f15251"],

Cell[BoxData[
 SqrtBox[
  FractionBox["1", 
   RowBox[{"3", " ", "\[Beta]", 
    RowBox[{"(", 
     RowBox[{"q", "-", "1"}], ")"}]}]]]], "Input",
 CellChangeTimes->{{3.917449123550625*^9, 
  3.917449135894465*^9}},ExpressionUUID->"dac92908-e8cd-49cf-902b-\
bfbcab6011e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"1", "+", " ", 
      RowBox[{"qToCoupling", "[", "q", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], "\[Beta]"}]], ")"}], 
   FractionBox["1", "2"]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9174494443497972`*^9, 3.917449510903954*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"356dbe62-2965-4190-ac3a-e16e6fbf0d62"],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SqrtBox[
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"4", " ", "q"}], "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", "\[Beta]"}]]}]]}]], "Output",
 CellChangeTimes->{{3.9174494644961243`*^9, 3.917449512379136*^9}},
 CellLabel->
  "Out[176]=",ExpressionUUID->"3db5479e-665f-4694-8909-5062af285203"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  SqrtBox[
   FractionBox["2", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"q", "-", "3"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]"}]]]}]], "Input",
 CellChangeTimes->{{3.9174495764623947`*^9, 
  3.917449644715931*^9}},ExpressionUUID->"dc3888b6-078b-404d-8702-\
4cb0320de5a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"domain", "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.01", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], ",", "10"}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "0.1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"scale", "=", 
     RowBox[{"betaQToScale", "[", 
      RowBox[{"\[Beta]", ",", "q", ",", "2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PDFValues", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledNormalDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "#"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"\[Sigma]", "/", 
         SqrtBox["\[Kappa]"]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"DerValues", "=", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], "/.", 
      RowBox[{"x", "->", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"\[Sigma]", "/", 
          SqrtBox["\[Kappa]"]}]}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledNormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "PDFRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"\[Sigma]", ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "/", 
                   SqrtBox["\[Kappa]"]}], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*FractionBox[\(\[Sigma]\), \
SqrtBox[\(\[Kappa]\)]]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Sigma]", "/", 
                    SqrtBox["\[Kappa]"]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "-", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "2.5"}], "}"}]}]}]}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
             RowBox[{
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "Black", ",", "Dashed"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "DerRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x = \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(u\)]\)\>\"", 
            ",", "\"\<g'(u)=\!\(\*FractionBox[\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(u\)] f' \((\*SuperscriptBox[\(\[ExponentialE]\), \(u\)])\
\)\), \(f \((\*SuperscriptBox[\(\[ExponentialE]\), \(u\)])\)\)]\)\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]", ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.4", ",", "0.2"}], "}"}]}]}], "]"}]}], "}"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["\[Sigma]", 
                  SqrtBox["\[Kappa]"]], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*FractionBox[\(\[Sigma]\), \
SqrtBox[\(\[Kappa]\)]]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["\[Sigma]", 
                    SqrtBox["\[Kappa]"]], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0.4", ",", "0.8"}], "}"}]}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "1"}], "}"}], ",", "0.1", ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]", ",", "0.5"}], "}"}], ",", "0.1", ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881100128501431*^9, 3.88110013280828*^9}, {
   3.8811001746212187`*^9, 3.8811003125183163`*^9}, {3.881100359125701*^9, 
   3.881100391216311*^9}, {3.881100440401959*^9, 3.881100511440146*^9}, {
   3.8811006142330523`*^9, 3.8811007584344597`*^9}, {3.881100813299799*^9, 
   3.8811008329318867`*^9}, {3.8811009761527863`*^9, 3.881100986240885*^9}, {
   3.881101171717436*^9, 3.8811011958446503`*^9}, {3.88110126967766*^9, 
   3.881101378766934*^9}, {3.8811014197138042`*^9, 3.881101470137429*^9}, {
   3.881101513783824*^9, 3.8811015266973333`*^9}, {3.8811016213820057`*^9, 
   3.881101645063546*^9}, {3.8811017726496162`*^9, 3.881101775165063*^9}, {
   3.881101838728846*^9, 3.8811018415913*^9}, {3.881102058697577*^9, 
   3.8811020658974247`*^9}, {3.8811020961477413`*^9, 3.881102097283677*^9}, {
   3.8811024496395206`*^9, 3.881102512978949*^9}, {3.881102604344492*^9, 
   3.8811026151008177`*^9}, {3.8811026588487864`*^9, 3.881102660459358*^9}, {
   3.881102765909773*^9, 3.88110277293682*^9}, {3.881103017541745*^9, 
   3.881103042165785*^9}, {3.881103368509575*^9, 3.881103368568424*^9}, {
   3.881103537419341*^9, 3.881103567430234*^9}, {3.881103606514262*^9, 
   3.88110361089336*^9}, {3.881103841724616*^9, 3.881104035730578*^9}, {
   3.881104089052025*^9, 3.881104091061489*^9}, {3.881104155309367*^9, 
   3.881104159915003*^9}, {3.881104232307646*^9, 3.881104234851286*^9}, {
   3.885145668710247*^9, 3.885145674570279*^9}, {3.885145835851491*^9, 
   3.885145861442034*^9}, 3.8851458975761423`*^9, {3.8851462376937113`*^9, 
   3.885146247005601*^9}, {3.885146278844803*^9, 3.885146281050338*^9}, {
   3.885146356382719*^9, 3.885146399555936*^9}, {3.8851464482518587`*^9, 
   3.885146479728002*^9}, {3.8851468717533407`*^9, 3.885146984975891*^9}, {
   3.8851470415443153`*^9, 3.885147131706245*^9}, {3.885147191833992*^9, 
   3.8851471927224293`*^9}, {3.88514722286096*^9, 3.885147313371127*^9}, {
   3.8851474437450123`*^9, 3.885147445031027*^9}, {3.885147502497591*^9, 
   3.885147531494525*^9}, {3.885147572855035*^9, 3.885147573166093*^9}, {
   3.885147648183681*^9, 3.885147671087173*^9}, {3.885147763992936*^9, 
   3.8851477903907824`*^9}, {3.8851481072181597`*^9, 3.885148187908036*^9}, {
   3.8851482451490107`*^9, 3.885148248081468*^9}, {3.88514836258892*^9, 
   3.885148403417306*^9}, 3.885148439104628*^9, {3.885148524444862*^9, 
   3.8851485252570047`*^9}, {3.885148575615932*^9, 3.885148651142852*^9}, {
   3.885148698929248*^9, 3.885148711277014*^9}, 3.885149052638982*^9, 
   3.8851491699686537`*^9, {3.885149236558316*^9, 3.885149238181747*^9}, {
   3.8851492850859413`*^9, 3.885149304358575*^9}, {3.8851493530730333`*^9, 
   3.8851494565522757`*^9}, {3.885149900708228*^9, 3.885149927415313*^9}, {
   3.885150023053043*^9, 3.8851500698419247`*^9}, {3.885150151242325*^9, 
   3.885150155280498*^9}, {3.8851503340909*^9, 3.885150376628426*^9}, {
   3.885150480951005*^9, 3.885150488508451*^9}, {3.8851509663648043`*^9, 
   3.885151043753997*^9}, {3.8851511605739307`*^9, 3.8851512736444893`*^9}, {
   3.885185201698551*^9, 3.885185208735071*^9}, {3.885185567282577*^9, 
   3.885185567901623*^9}, {3.885185669571903*^9, 3.885185689294176*^9}, {
   3.885185810549407*^9, 3.885185816113462*^9}, {3.8851858833371277`*^9, 
   3.885185934991125*^9}, {3.885185972153462*^9, 3.885186017588564*^9}, {
   3.885186070072124*^9, 3.8851862042221003`*^9}, {3.885186245748827*^9, 
   3.885186364771111*^9}, {3.8851864019326963`*^9, 3.885186430637042*^9}, {
   3.885186518831053*^9, 3.885186551021462*^9}, 3.8851869402980957`*^9, {
   3.885187177166107*^9, 3.8851872212851152`*^9}, {3.885187318396853*^9, 
   3.885187345546852*^9}, {3.885187383630319*^9, 3.885187435423347*^9}, {
   3.885187515831841*^9, 3.885187560537628*^9}, {3.885187600673565*^9, 
   3.885187630487739*^9}, {3.885187748423316*^9, 3.885187780154642*^9}, {
   3.885187851418582*^9, 3.8851879472611923`*^9}, {3.885187998499823*^9, 
   3.8851880600558*^9}, {3.8851880932798243`*^9, 3.885188107265744*^9}, {
   3.8851881541606703`*^9, 3.885188199977947*^9}, {3.885188286349166*^9, 
   3.885188289137907*^9}, {3.885188329662655*^9, 3.8851883448553047`*^9}, {
   3.88553399578439*^9, 3.8855340421155148`*^9}, {3.885534638832657*^9, 
   3.88553465058669*^9}, {3.8855347233052187`*^9, 3.88553481008349*^9}, 
   3.885534850758347*^9, {3.885535091324885*^9, 3.885535119487836*^9}, {
   3.885535479360141*^9, 3.885535531442617*^9}, {3.8855355792209873`*^9, 
   3.885535597672271*^9}, 3.885535633785018*^9, {3.8855357224375477`*^9, 
   3.885535805228004*^9}, {3.885536310497335*^9, 3.8855363259402447`*^9}, {
   3.8855363746187277`*^9, 3.885536392047887*^9}, {3.8855364998425903`*^9, 
   3.88553654071001*^9}, {3.885536600395667*^9, 3.885536602857518*^9}, {
   3.885536751980774*^9, 3.8855367971852427`*^9}, {3.885536831890212*^9, 
   3.8855368724254103`*^9}, {3.8855369377775497`*^9, 3.8855370719995003`*^9}, 
   3.885537177075563*^9, {3.885537262061028*^9, 3.8855372758419228`*^9}, {
   3.8855373097031612`*^9, 3.885537420271719*^9}, {3.885537510016234*^9, 
   3.885537511624548*^9}, {3.885537546759593*^9, 3.8855375699910183`*^9}, 
   3.885537775603609*^9, {3.885537816554007*^9, 3.8855378166281853`*^9}, {
   3.8855378474497232`*^9, 3.885537885999897*^9}, {3.885537971912609*^9, 
   3.8855379975441313`*^9}, {3.885550129171794*^9, 3.885550170271324*^9}, {
   3.885550205744316*^9, 3.885550268302496*^9}, {3.885550305589573*^9, 
   3.8855503155715647`*^9}, {3.885550766060876*^9, 3.8855508274775343`*^9}, 
   3.8855531405405807`*^9, 3.885553175978547*^9, {3.885555348023698*^9, 
   3.8855553487078133`*^9}, 3.900607983598949*^9, {3.900608264198485*^9, 
   3.900608286761442*^9}, {3.9006083588412237`*^9, 3.900608415129314*^9}, 
   3.900608501967209*^9, {3.900608561888793*^9, 3.900608561913403*^9}, 
   3.900608616554187*^9, {3.900608660502371*^9, 3.9006086717437353`*^9}, {
   3.9006087783269987`*^9, 3.900608863665845*^9}, {3.9006089969621696`*^9, 
   3.90060903243467*^9}, 3.900609083393085*^9, {3.9006091531687403`*^9, 
   3.900609153722259*^9}, {3.900609188812006*^9, 3.90060933996495*^9}, {
   3.90060941819809*^9, 3.900609418717705*^9}, {3.9006094567441072`*^9, 
   3.900609466601918*^9}, {3.900609526057611*^9, 3.900609538463647*^9}, {
   3.900609636040422*^9, 3.900609693249432*^9}, {3.90060979283416*^9, 
   3.900609798931672*^9}, {3.900609929171541*^9, 3.900609961012792*^9}, {
   3.900610156507842*^9, 3.900610175902775*^9}, {3.90061020688671*^9, 
   3.90061022172283*^9}, {3.900613302975903*^9, 3.900613307185904*^9}, {
   3.900613354372714*^9, 3.900613361568473*^9}, {3.900613467796741*^9, 
   3.900613533850881*^9}, {3.900613615291092*^9, 3.9006136186665916`*^9}, {
   3.9006138655968523`*^9, 3.900613904735708*^9}, {3.900687874047933*^9, 
   3.9006878801869087`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"6dccbd69-ca5a-4d6d-82b9-48d95933335c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Kappa]$$ = 4.04, $CellContext`\[Sigma]$$ =
     3.335, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]$$], 1}, 0.1, 5}, {{
       Hold[$CellContext`\[Kappa]$$], 0.5}, 0.1, 5}}, Typeset`size$$ = {
    750., {130., 137.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Kappa]$$ = 0.5, $CellContext`\[Sigma]$$ = 
        1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`domain = {
         0.01, 10}; $CellContext`PDFRange = {{0.01, 10}, {
          10^(-3), 10}}; $CellContext`DerRange = {-5, 
          0.1}; $CellContext`scale = $CellContext`betaQToScale[$CellContext`\
\[Beta], $CellContext`q, 2]; $CellContext`PDFValues = Map[PDF[
           $CellContext`CoupledNormalDistribution[
           0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], #]& , \
{$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/
           Sqrt[$CellContext`\[Kappa]$$]}]; $CellContext`DerValues = 
        ReplaceAll[-($CellContext`x^2 (
            1 + $CellContext`\[Kappa]$$)/($CellContext`x^2 $CellContext`\
\[Kappa]$$ + $CellContext`\[Sigma]$$^2)), $CellContext`x -> {$CellContext`\
\[Sigma]$$, $CellContext`\[Sigma]$$/Sqrt[$CellContext`\[Kappa]$$]}]; 
       GraphicsRow[{
          LogLogPlot[
           PDF[
            $CellContext`CoupledNormalDistribution[
            0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`PDFRange,
            AxesLabel -> {"x", "f(x)"}, Epilog -> {{Black, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$, 
                 Part[$CellContext`PDFValues, 1]}]], 
              Text["\[Sigma]", Log[{$CellContext`\[Sigma]$$, 
                  Part[$CellContext`PDFValues, 1]}] + Log[{1.5, 1.5}]]}, {Red, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$/Sqrt[$CellContext`\[Kappa]$$], 
                 Part[$CellContext`PDFValues, 2]}]], 
              Text[
              "\!\(\*FractionBox[\(\[Sigma]\), SqrtBox[\(\[Kappa]\)]]\)", 
               Log[{$CellContext`\[Sigma]$$/Sqrt[$CellContext`\[Kappa]$$], 
                  Part[$CellContext`PDFValues, 2]}] - Log[{1.5, 2.5}]]}}], 
          
          Plot[{-($CellContext`x^2 (
              1 + $CellContext`\[Kappa]$$)/($CellContext`x^2 $CellContext`\
\[Kappa]$$ + $CellContext`\[Sigma]$$^2)), 
            Style[-1, Black, Dashed]}, {$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`DerRange,
            AxesLabel -> {
            "x = \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(u\)]\)", 
             "g'(u)=\!\(\*FractionBox[\(\*SuperscriptBox[\(\[ExponentialE]\), \
\(u\)] f' \((\*SuperscriptBox[\(\[ExponentialE]\), \(u\)])\)\), \(f \
\((\*SuperscriptBox[\(\[ExponentialE]\), \(u\)])\)\)]\)"}, 
           Epilog -> {{Black, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$, 
                Part[$CellContext`DerValues, 1]}], 
              Text["\[Sigma]", {$CellContext`\[Sigma]$$, 
                 Part[$CellContext`DerValues, 1]} + {0.4, 0.2}]}, {Red, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$/Sqrt[$CellContext`\[Kappa]$$], 
                Part[$CellContext`DerValues, 2]}], 
              Text[
              "\!\(\*FractionBox[\(\[Sigma]\), SqrtBox[\(\[Kappa]\)]]\)", \
{$CellContext`\[Sigma]$$/Sqrt[$CellContext`\[Kappa]$$], 
                 Part[$CellContext`DerValues, 2]} - {0.4, 0.8}]}}]}]), 
      "Specifications" :> {{{$CellContext`\[Sigma]$$, 1}, 0.1, 5, Appearance -> 
         "Labeled"}, {{$CellContext`\[Kappa]$$, 0.5}, 0.1, 5, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{804., {217., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.900687835197405*^9, 3.900687844796852*^9}, {
  3.9006878821397533`*^9, 3.900687893316553*^9}, {3.9175003225836*^9, 
  3.91750034302361*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"ccac4643-183f-4370-86a5-ab5ef1a3b726"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\[AliasDelimiter]"}]], "Input",
 CellChangeTimes->{{3.9006178400594263`*^9, 
  3.9006178402863617`*^9}},ExpressionUUID->"f569a3dc-3c8a-432c-be23-\
12685c7ffe73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of PDF and Derivatives of PDF", "Subsubsection",
 CellChangeTimes->{{3.900171687082443*^9, 
  3.900171698375278*^9}},ExpressionUUID->"9980e58b-0d70-4e1d-9d08-\
faa83790730d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"domain", "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFRange", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]], ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"DerRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1"}], ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"scale", "=", 
     RowBox[{"betaQToScale", "[", 
      RowBox[{"\[Beta]", ",", "q", ",", "2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PDFValues", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledNormalDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "#"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", 
         SqrtBox[
          RowBox[{"scaleShapeToBeta", "[", 
           RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", "\[Sigma]", 
        ",", 
        RowBox[{"\[Sigma]", "/", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
        RowBox[{
         SqrtBox["3"], 
         RowBox[{"\[Sigma]", "/", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", "\[Kappa]"}]}]]}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerValues", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"CoupledNormalDistribution", "[", 
              RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
             "x"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
            RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
            RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}], "/.", 
      RowBox[{"x", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          SqrtBox[
           RowBox[{"scaleShapeToBeta", "[", 
            RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", "\[Sigma]", 
         ",", 
         RowBox[{"\[Sigma]", "/", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
         RowBox[{
          SqrtBox["3"], 
          RowBox[{"\[Sigma]", "/", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", "\[Kappa]"}]}]]}]}]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledNormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "PDFRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"Log", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                   RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                 RowBox[{
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "+", 
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
             ","}], " ", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"\[Sigma]", ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "/", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   SqrtBox["3"], 
                   RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}]}], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<derIP\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    SqrtBox["3"], 
                    RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.8", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"CoupledNormalDistribution", "[", 
               RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
              "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "DerRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", 
            "\"\<\!\(\*SuperscriptBox[\(d\), \
\(2\)]\)f(x)/\!\(\*SuperscriptBox[\(dx\), \(2\)]\)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                  RowBox[{"DerValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                    RowBox[{"DerValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"0.25", ",", 
                    RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}], ","}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]", ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.3"}], ",", "0.015"}], "}"}]}]}], "]"}]}], 
             "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Sigma]", "/", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.3", ",", 
                   RowBox[{"-", "0.02"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SqrtBox["3"], 
                  RowBox[{"\[Sigma]", "/", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}]}], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<derIP\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    SqrtBox["3"], 
                    RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}]}], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.4", ",", "0.015"}], "}"}]}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "2"}], "}"}], ",", "0.5", ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]", ",", "1"}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881100128501431*^9, 3.88110013280828*^9}, {
   3.8811001746212187`*^9, 3.8811003125183163`*^9}, {3.881100359125701*^9, 
   3.881100391216311*^9}, {3.881100440401959*^9, 3.881100511440146*^9}, {
   3.8811006142330523`*^9, 3.8811007584344597`*^9}, {3.881100813299799*^9, 
   3.8811008329318867`*^9}, {3.8811009761527863`*^9, 3.881100986240885*^9}, {
   3.881101171717436*^9, 3.8811011958446503`*^9}, {3.88110126967766*^9, 
   3.881101378766934*^9}, {3.8811014197138042`*^9, 3.881101470137429*^9}, {
   3.881101513783824*^9, 3.8811015266973333`*^9}, {3.8811016213820057`*^9, 
   3.881101645063546*^9}, {3.8811017726496162`*^9, 3.881101775165063*^9}, {
   3.881101838728846*^9, 3.8811018415913*^9}, {3.881102058697577*^9, 
   3.8811020658974247`*^9}, {3.8811020961477413`*^9, 3.881102097283677*^9}, {
   3.8811024496395206`*^9, 3.881102512978949*^9}, {3.881102604344492*^9, 
   3.8811026151008177`*^9}, {3.8811026588487864`*^9, 3.881102660459358*^9}, {
   3.881102765909773*^9, 3.88110277293682*^9}, {3.881103017541745*^9, 
   3.881103042165785*^9}, {3.881103368509575*^9, 3.881103368568424*^9}, {
   3.881103537419341*^9, 3.881103567430234*^9}, {3.881103606514262*^9, 
   3.88110361089336*^9}, {3.881103841724616*^9, 3.881104035730578*^9}, {
   3.881104089052025*^9, 3.881104091061489*^9}, {3.881104155309367*^9, 
   3.881104159915003*^9}, {3.881104232307646*^9, 3.881104234851286*^9}, {
   3.885145668710247*^9, 3.885145674570279*^9}, {3.885145835851491*^9, 
   3.885145861442034*^9}, 3.8851458975761423`*^9, {3.8851462376937113`*^9, 
   3.885146247005601*^9}, {3.885146278844803*^9, 3.885146281050338*^9}, {
   3.885146356382719*^9, 3.885146399555936*^9}, {3.8851464482518587`*^9, 
   3.885146479728002*^9}, {3.8851468717533407`*^9, 3.885146984975891*^9}, {
   3.8851470415443153`*^9, 3.885147131706245*^9}, {3.885147191833992*^9, 
   3.8851471927224293`*^9}, {3.88514722286096*^9, 3.885147313371127*^9}, {
   3.8851474437450123`*^9, 3.885147445031027*^9}, {3.885147502497591*^9, 
   3.885147531494525*^9}, {3.885147572855035*^9, 3.885147573166093*^9}, {
   3.885147648183681*^9, 3.885147671087173*^9}, {3.885147763992936*^9, 
   3.8851477903907824`*^9}, {3.8851481072181597`*^9, 3.885148187908036*^9}, {
   3.8851482451490107`*^9, 3.885148248081468*^9}, {3.88514836258892*^9, 
   3.885148403417306*^9}, 3.885148439104628*^9, {3.885148524444862*^9, 
   3.8851485252570047`*^9}, {3.885148575615932*^9, 3.885148651142852*^9}, {
   3.885148698929248*^9, 3.885148711277014*^9}, 3.885149052638982*^9, 
   3.8851491699686537`*^9, {3.885149236558316*^9, 3.885149238181747*^9}, {
   3.8851492850859413`*^9, 3.885149304358575*^9}, {3.8851493530730333`*^9, 
   3.8851494565522757`*^9}, {3.885149900708228*^9, 3.885149927415313*^9}, {
   3.885150023053043*^9, 3.8851500698419247`*^9}, {3.885150151242325*^9, 
   3.885150155280498*^9}, {3.8851503340909*^9, 3.885150376628426*^9}, {
   3.885150480951005*^9, 3.885150488508451*^9}, {3.8851509663648043`*^9, 
   3.885151043753997*^9}, {3.8851511605739307`*^9, 3.8851512736444893`*^9}, {
   3.885185201698551*^9, 3.885185208735071*^9}, {3.885185567282577*^9, 
   3.885185567901623*^9}, {3.885185669571903*^9, 3.885185689294176*^9}, {
   3.885185810549407*^9, 3.885185816113462*^9}, {3.8851858833371277`*^9, 
   3.885185934991125*^9}, {3.885185972153462*^9, 3.885186017588564*^9}, {
   3.885186070072124*^9, 3.8851862042221003`*^9}, {3.885186245748827*^9, 
   3.885186364771111*^9}, {3.8851864019326963`*^9, 3.885186430637042*^9}, {
   3.885186518831053*^9, 3.885186551021462*^9}, 3.8851869402980957`*^9, {
   3.885187177166107*^9, 3.8851872212851152`*^9}, {3.885187318396853*^9, 
   3.885187345546852*^9}, {3.885187383630319*^9, 3.885187435423347*^9}, {
   3.885187515831841*^9, 3.885187560537628*^9}, {3.885187600673565*^9, 
   3.885187630487739*^9}, {3.885187748423316*^9, 3.885187780154642*^9}, {
   3.885187851418582*^9, 3.8851879472611923`*^9}, {3.885187998499823*^9, 
   3.8851880600558*^9}, {3.8851880932798243`*^9, 3.885188107265744*^9}, {
   3.8851881541606703`*^9, 3.885188199977947*^9}, {3.885188286349166*^9, 
   3.885188289137907*^9}, {3.885188329662655*^9, 3.8851883448553047`*^9}, {
   3.88553399578439*^9, 3.8855340421155148`*^9}, {3.885534638832657*^9, 
   3.88553465058669*^9}, {3.8855347233052187`*^9, 3.88553481008349*^9}, 
   3.885534850758347*^9, {3.885535091324885*^9, 3.885535119487836*^9}, {
   3.885535479360141*^9, 3.885535531442617*^9}, {3.8855355792209873`*^9, 
   3.885535597672271*^9}, 3.885535633785018*^9, {3.8855357224375477`*^9, 
   3.885535805228004*^9}, {3.885536310497335*^9, 3.8855363259402447`*^9}, {
   3.8855363746187277`*^9, 3.885536392047887*^9}, {3.8855364998425903`*^9, 
   3.88553654071001*^9}, {3.885536600395667*^9, 3.885536602857518*^9}, {
   3.885536751980774*^9, 3.8855367971852427`*^9}, {3.885536831890212*^9, 
   3.8855368724254103`*^9}, {3.8855369377775497`*^9, 3.8855370719995003`*^9}, 
   3.885537177075563*^9, {3.885537262061028*^9, 3.8855372758419228`*^9}, {
   3.8855373097031612`*^9, 3.885537420271719*^9}, {3.885537510016234*^9, 
   3.885537511624548*^9}, {3.885537546759593*^9, 3.8855375699910183`*^9}, 
   3.885537775603609*^9, {3.885537816554007*^9, 3.8855378166281853`*^9}, {
   3.8855378474497232`*^9, 3.885537885999897*^9}, {3.885537971912609*^9, 
   3.8855379975441313`*^9}, {3.885550129171794*^9, 3.885550170271324*^9}, {
   3.885550205744316*^9, 3.885550268302496*^9}, {3.885550305589573*^9, 
   3.8855503155715647`*^9}, {3.885550766060876*^9, 3.8855508274775343`*^9}, 
   3.8855531405405807`*^9, 3.885553175978547*^9, {3.885555348023698*^9, 
   3.8855553487078133`*^9}, {3.9006081097086277`*^9, 3.900608110381669*^9}, {
   3.9006085619211817`*^9, 3.900608561947953*^9}, {3.917500843218656*^9, 
   3.917500851743389*^9}, {3.9175008849851522`*^9, 3.917500932566586*^9}, {
   3.917501001445898*^9, 3.9175010663842382`*^9}, {3.91750113536474*^9, 
   3.9175012135797243`*^9}, {3.917502066897777*^9, 3.917502097662424*^9}, {
   3.9175022014784203`*^9, 3.9175022193245687`*^9}, {3.917502294377092*^9, 
   3.917502301056438*^9}, {3.917502334287569*^9, 3.917502489124604*^9}, {
   3.917502575131082*^9, 3.917502615992502*^9}, 3.917502730984152*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"3604adca-5eaa-491e-84ac-1b58c51bac9a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Kappa]$$ = 1, $CellContext`\[Sigma]$$ = 
    0.5, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]$$], 2}, 0.5, 5}, {{
       Hold[$CellContext`\[Kappa]$$], 1}, 
      Rational[1, 1000000], 5}}, Typeset`size$$ = {750., {126., 132.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Kappa]$$ = 1, $CellContext`\[Sigma]$$ = 
        2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`domain = {0.01, 10}; $CellContext`PDFRange = {
         10^(-3), 10}; $CellContext`DerRange = {-0.1, 
          1}; $CellContext`scale = $CellContext`betaQToScale[$CellContext`\
\[Beta], $CellContext`q, 2]; $CellContext`PDFValues = Map[PDF[
           $CellContext`CoupledNormalDistribution[
           0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], #]& , {1/Sqrt[
            $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], $CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/
           Sqrt[1 + 2 $CellContext`\[Kappa]$$], 
           Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
            1 + 2 $CellContext`\[Kappa]$$])}]; $CellContext`DerValues = 
        ReplaceAll[
          FullSimplify[
           D[
            FullSimplify[
             PDF[
              $CellContext`CoupledNormalDistribution[
              0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], 
             And[
             0 < $CellContext`\[Kappa]$$ < Infinity, 
              0 < $CellContext`\[Sigma]$$ < Infinity, 
              Element[$CellContext`x, Reals]]], {$CellContext`x, 
             2}]], $CellContext`x -> {1/Sqrt[
             $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], $CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/
            Sqrt[1 + 2 $CellContext`\[Kappa]$$], 
            Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
             1 + 2 $CellContext`\[Kappa]$$])}]; GraphicsRow[{
          LogLogPlot[
           PDF[
            $CellContext`CoupledNormalDistribution[
            0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 
            Part[$CellContext`PDFRange, 1], 
            Part[$CellContext`PDFRange, 2]}, 
           PlotRange -> $CellContext`PDFRange, AxesLabel -> {"x", "f(x)"}, 
           Epilog -> {{Black, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$, 
                 Part[$CellContext`PDFValues, 2]}]], 
              Text["\[Sigma]", Log[{$CellContext`\[Sigma]$$, 
                  Part[$CellContext`PDFValues, 2]}] + Log[{1.5, 1.5}]]}, {
             Orange, 
              PointSize[Large], 
              Point[
               
               Log[{$CellContext`\[Sigma]$$/Sqrt[
                 1 + 2 $CellContext`\[Kappa]$$], 
                 Part[$CellContext`PDFValues, 3]}]], 
              Text[
              "IP", Log[{$CellContext`\[Sigma]$$/Sqrt[
                  1 + 2 $CellContext`\[Kappa]$$], 
                  Part[$CellContext`PDFValues, 3]}] + Log[{1.5, 1.5}]]}, {Red, 
              PointSize[Large], 
              Point[
               
               Log[{Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
                  1 + 2 $CellContext`\[Kappa]$$]), 
                 Part[$CellContext`PDFValues, 4]}]], 
              Text[
              "derIP", 
               Log[{Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
                   1 + 2 $CellContext`\[Kappa]$$]), 
                  Part[$CellContext`PDFValues, 4]}] + Log[{1.8, 1.5}]]}}], 
          Plot[
           Evaluate[
            D[
             PDF[
              $CellContext`CoupledNormalDistribution[
              
              0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 2}]], {$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`DerRange,
            AxesLabel -> {
            "x", "\!\(\*SuperscriptBox[\(d\), \
\(2\)]\)f(x)/\!\(\*SuperscriptBox[\(dx\), \(2\)]\)"}, Epilog -> {{Black, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$, 
                Part[$CellContext`DerValues, 2]}], 
              Text["\[Sigma]", {$CellContext`\[Sigma]$$, 
                 Part[$CellContext`DerValues, 2]} + {-0.3, 0.015}]}, {
             Orange, 
              PointSize[Large], 
              
              Point[{$CellContext`\[Sigma]$$/Sqrt[
                1 + 2 $CellContext`\[Kappa]$$], 
                Part[$CellContext`DerValues, 3]}], 
              Text[
              "IP", {$CellContext`\[Sigma]$$/Sqrt[
                 1 + 2 $CellContext`\[Kappa]$$], 
                 Part[$CellContext`DerValues, 3]} + {0.3, -0.02}]}, {Red, 
              PointSize[Large], 
              
              Point[{Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
                 1 + 2 $CellContext`\[Kappa]$$]), 
                Part[$CellContext`DerValues, 4]}], 
              Text[
              "derIP", {
                Sqrt[3] ($CellContext`\[Sigma]$$/Sqrt[
                  1 + 2 $CellContext`\[Kappa]$$]), 
                 Part[$CellContext`DerValues, 4]} + {0.4, 0.015}]}}]}]), 
      "Specifications" :> {{{$CellContext`\[Sigma]$$, 2}, 0.5, 5, Appearance -> 
         "Labeled"}, {{$CellContext`\[Kappa]$$, 1}, 
         Rational[1, 1000000], 5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {212., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.885537184030592*^9, 3.885537278312509*^9, 3.88553731192572*^9, 
   3.885537344976389*^9, {3.885537401616068*^9, 3.8855374213894167`*^9}, {
   3.8855374581530457`*^9, 3.885537466527299*^9}, {3.885537513043522*^9, 
   3.885537571196232*^9}, {3.8855377775842667`*^9, 3.885537780305664*^9}, {
   3.885537817922112*^9, 3.885537852472273*^9}, 3.885537887199789*^9, {
   3.885537981459982*^9, 3.885537999629346*^9}, 3.885550273060852*^9, {
   3.8855503069950666`*^9, 3.885550316414608*^9}, 3.885550878456814*^9, 
   3.8855511812191687`*^9, 3.8855531435689163`*^9, 3.885553177733646*^9, 
   3.885567955099799*^9, 3.885657242588417*^9, 3.8873971428862743`*^9, 
   3.8879655304001493`*^9, 3.90017170756647*^9, 3.9001717809405737`*^9, {
   3.9006080314334793`*^9, 3.9006080358027887`*^9}, 3.917416894683194*^9, 
   3.917500564811509*^9, 3.917500936207246*^9, 3.917501219720619*^9, 
   3.917502103585712*^9, 3.9175022210454073`*^9, 3.917502303940374*^9, {
   3.917502356432687*^9, 3.917502400785425*^9}, 3.917502492248349*^9, 
   3.91750261777987*^9, {3.9175027092061977`*^9, 3.917502738986279*^9}},
 CellLabel->
  "Out[210]=",ExpressionUUID->"5599e840-d457-48f2-9137-1a3ec503910d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"domain", "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFRange", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]], ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"DerRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1"}], ",", "0.5"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"scale", "=", 
     RowBox[{"betaQToScale", "[", 
      RowBox[{"\[Beta]", ",", "q", ",", "2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"invBetaSqrt", "=", 
     RowBox[{"1", "/", 
      SqrtBox["\[Beta]"]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFValues", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"qNormalDistribution", "[", 
          RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", 
         SqrtBox["\[Beta]"]}], ",", 
        RowBox[{"betaQToScale", "[", 
         RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
        FractionBox[
         RowBox[{"betaQToScale", "[", 
          RowBox[{"\[Beta]", ",", "q"}], "]"}], 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", 
            RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], 
          RowBox[{"betaQToScale", "[", 
           RowBox[{"\[Beta]", ",", "q"}], "]"}]}], 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", 
            RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerValues", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"qNormalDistribution", "[", 
              RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "<", "q", "<", "3"}], "&&", 
            RowBox[{"0", "<", "\[Beta]", "<", "\[Infinity]"}], "&&", 
            RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}], "/.", 
      RowBox[{"x", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          SqrtBox["\[Beta]"]}], ",", 
         RowBox[{"betaQToScale", "[", 
          RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
         FractionBox[
          RowBox[{"betaQToScale", "[", 
           RowBox[{"\[Beta]", ",", "q"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", 
             RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], 
           RowBox[{"betaQToScale", "[", 
            RowBox[{"\[Beta]", ",", "q"}], "]"}]}], 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", 
             RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]]}], "}"}]}]}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"qNormalDistribution", "[", 
            RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "PDFRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Log", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox["\[Beta]"]}], ",", 
                   RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                 RowBox[{
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    SqrtBox["\[Beta]"]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "+", 
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Log", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
                   RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<\[Sigma]\>\"", ",", 
                 RowBox[{
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "+", 
                  RowBox[{"Log", "@", 
                   RowBox[{"{", 
                    RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
             ","}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SqrtBox["3"], 
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}]}], 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<derIP\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"qNormalDistribution", "[", 
               RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "DerRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", 
            "\"\<\!\(\*SuperscriptBox[\(d\), \
\(2\)]\)f(x)/\!\(\*SuperscriptBox[\(dx\), \(2\)]\)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   SqrtBox["\[Beta]"]}], ",", 
                  RowBox[{"DerValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "/", 
                    SqrtBox["\[Beta]"]}], ",", 
                    RowBox[{"DerValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"0.5", ",", 
                    RowBox[{"-", "0.01"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"betaQToScale", "[", 
                   RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
                  RowBox[{"DerValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"\"\<\[Sigma]\>\"", ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], ",", 
                    RowBox[{"DerValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"0.3", ",", 
                    RowBox[{"-", "0.01"}]}], "}"}]}]}], "]"}]}], "}"}], ","}],
             " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"betaQToScale", "[", 
                   RowBox[{"\[Beta]", ",", "q"}], "]"}], 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}], 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.3", ",", 
                   RowBox[{"-", "0.01"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SqrtBox["3"], 
                   RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}]}], 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<derIP\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SqrtBox["3"], 
                    RowBox[{"betaQToScale", "[", 
                    RowBox[{"\[Beta]", ",", "q"}], "]"}]}], 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", 
                    RowBox[{"qToCoupling", "[", "q", "]"}]}]}]]], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.3", ",", 
                   RowBox[{"-", "0.01"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0.5"}], "}"}], ",", "0.1", ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", "2"}], "}"}], ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "/", "3"}]}], ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881100128501431*^9, 3.88110013280828*^9}, {
   3.8811001746212187`*^9, 3.8811003125183163`*^9}, {3.881100359125701*^9, 
   3.881100391216311*^9}, {3.881100440401959*^9, 3.881100511440146*^9}, {
   3.8811006142330523`*^9, 3.8811007584344597`*^9}, {3.881100813299799*^9, 
   3.8811008329318867`*^9}, {3.8811009761527863`*^9, 3.881100986240885*^9}, {
   3.881101171717436*^9, 3.8811011958446503`*^9}, {3.88110126967766*^9, 
   3.881101378766934*^9}, {3.8811014197138042`*^9, 3.881101470137429*^9}, {
   3.881101513783824*^9, 3.8811015266973333`*^9}, {3.8811016213820057`*^9, 
   3.881101645063546*^9}, {3.8811017726496162`*^9, 3.881101775165063*^9}, {
   3.881101838728846*^9, 3.8811018415913*^9}, {3.881102058697577*^9, 
   3.8811020658974247`*^9}, {3.8811020961477413`*^9, 3.881102097283677*^9}, {
   3.8811024496395206`*^9, 3.881102512978949*^9}, {3.881102604344492*^9, 
   3.8811026151008177`*^9}, {3.8811026588487864`*^9, 3.881102660459358*^9}, {
   3.881102765909773*^9, 3.88110277293682*^9}, {3.881103017541745*^9, 
   3.881103042165785*^9}, {3.881103368509575*^9, 3.881103368568424*^9}, {
   3.881103537419341*^9, 3.881103567430234*^9}, {3.881103606514262*^9, 
   3.88110361089336*^9}, {3.881103841724616*^9, 3.881104035730578*^9}, {
   3.881104089052025*^9, 3.881104091061489*^9}, {3.881104155309367*^9, 
   3.881104159915003*^9}, {3.881104232307646*^9, 3.881104234851286*^9}, {
   3.885145668710247*^9, 3.885145674570279*^9}, {3.885145835851491*^9, 
   3.885145861442034*^9}, 3.8851458975761423`*^9, {3.8851462376937113`*^9, 
   3.885146247005601*^9}, {3.885146278844803*^9, 3.885146281050338*^9}, {
   3.885146356382719*^9, 3.885146399555936*^9}, {3.8851464482518587`*^9, 
   3.885146479728002*^9}, {3.8851468717533407`*^9, 3.885146984975891*^9}, {
   3.8851470415443153`*^9, 3.885147131706245*^9}, {3.885147191833992*^9, 
   3.8851471927224293`*^9}, {3.88514722286096*^9, 3.885147313371127*^9}, {
   3.8851474437450123`*^9, 3.885147445031027*^9}, {3.885147502497591*^9, 
   3.885147531494525*^9}, {3.885147572855035*^9, 3.885147573166093*^9}, {
   3.885147648183681*^9, 3.885147671087173*^9}, {3.885147763992936*^9, 
   3.8851477903907824`*^9}, {3.8851481072181597`*^9, 3.885148187908036*^9}, {
   3.8851482451490107`*^9, 3.885148248081468*^9}, {3.88514836258892*^9, 
   3.885148403417306*^9}, 3.885148439104628*^9, {3.885148524444862*^9, 
   3.8851485252570047`*^9}, {3.885148575615932*^9, 3.885148651142852*^9}, {
   3.885148698929248*^9, 3.885148711277014*^9}, 3.885149052638982*^9, 
   3.8851491699686537`*^9, {3.885149236558316*^9, 3.885149238181747*^9}, {
   3.8851492850859413`*^9, 3.885149304358575*^9}, {3.8851493530730333`*^9, 
   3.8851494565522757`*^9}, {3.885149900708228*^9, 3.885149927415313*^9}, {
   3.885150023053043*^9, 3.8851500698419247`*^9}, {3.885150151242325*^9, 
   3.885150155280498*^9}, {3.8851503340909*^9, 3.885150376628426*^9}, {
   3.885150480951005*^9, 3.885150488508451*^9}, {3.8851509663648043`*^9, 
   3.885151043753997*^9}, {3.8851511605739307`*^9, 3.8851512736444893`*^9}, {
   3.885185201698551*^9, 3.885185208735071*^9}, {3.885185567282577*^9, 
   3.885185567901623*^9}, {3.885185669571903*^9, 3.885185689294176*^9}, {
   3.885185810549407*^9, 3.885185816113462*^9}, {3.8851858833371277`*^9, 
   3.885185934991125*^9}, {3.885185972153462*^9, 3.885186017588564*^9}, {
   3.885186070072124*^9, 3.8851862042221003`*^9}, {3.885186245748827*^9, 
   3.885186364771111*^9}, {3.8851864019326963`*^9, 3.885186430637042*^9}, {
   3.885186518831053*^9, 3.885186551021462*^9}, 3.8851869402980957`*^9, {
   3.885187177166107*^9, 3.8851872212851152`*^9}, {3.8851884290318213`*^9, 
   3.8851884731566267`*^9}, {3.885533894893681*^9, 3.885533920926445*^9}, {
   3.885534058560514*^9, 3.885534117355604*^9}, {3.885534374056068*^9, 
   3.885534427124386*^9}, 3.8855344680381804`*^9, {3.885534525507105*^9, 
   3.885534527100959*^9}, {3.88553457289669*^9, 3.88553457769379*^9}, {
   3.885534627081171*^9, 3.885534656575095*^9}, 3.8855348704224977`*^9, {
   3.885534914548621*^9, 3.885534917872055*^9}, {3.885534976728445*^9, 
   3.885534987096784*^9}, {3.885535031339993*^9, 3.885535046592754*^9}, {
   3.8855352975544558`*^9, 3.885535305839963*^9}, {3.8855354439615383`*^9, 
   3.8855354475923567`*^9}, {3.885535845718047*^9, 3.8855358642631207`*^9}, {
   3.885536023852964*^9, 3.8855360248743153`*^9}, {3.88553743505993*^9, 
   3.88553743738244*^9}, 3.8855377003036947`*^9, {3.885550371972032*^9, 
   3.885550430698407*^9}, {3.8855504799939737`*^9, 3.8855504940662413`*^9}, {
   3.885550525140674*^9, 3.885550609004661*^9}, {3.885550959830883*^9, 
   3.8855510092789516`*^9}, {3.8855510507872143`*^9, 3.88555115391435*^9}, {
   3.885551249866797*^9, 3.885551251033411*^9}, 3.8855513349218187`*^9, {
   3.8855515393873043`*^9, 3.885551559797112*^9}, {3.885551600783882*^9, 
   3.885551618825177*^9}, {3.885551686508651*^9, 3.88555169583743*^9}, {
   3.885551780288269*^9, 3.8855517870859833`*^9}, {3.885555348713632*^9, 
   3.885555348718609*^9}, {3.885568119285131*^9, 3.885568134904949*^9}, {
   3.885568226364983*^9, 3.885568248927258*^9}, {3.887965673312853*^9, 
   3.887965676427589*^9}, {3.900608561954267*^9, 3.900608561988051*^9}, {
   3.917501297334249*^9, 3.917501327925412*^9}, {3.917501459557575*^9, 
   3.9175015825188103`*^9}, {3.9175016620142593`*^9, 3.917501662399538*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"cf08c984-3c8f-4fe4-844d-b24ad9746a8b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 2, $CellContext`\[Beta]$$ = 0.5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Beta]$$], 0.5}, 0.1, 5}, {{
       Hold[$CellContext`q$$], 2}, 
      Rational[1000001, 1000000], 
      Rational[8, 3]}}, Typeset`size$$ = {750., {126., 132.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 2, $CellContext`\[Beta]$$ = 0.5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`domain = {0.01, 10}; $CellContext`PDFRange = {
         10^(-3), 10}; $CellContext`DerRange = {-0.1, 
         0.5}; $CellContext`scale = $CellContext`betaQToScale[$CellContext`\
\[Beta]$$, $CellContext`q$$, 2]; $CellContext`invBetaSqrt = 
        1/Sqrt[$CellContext`\[Beta]$$]; $CellContext`PDFValues = Map[PDF[
           $CellContext`qNormalDistribution[
           0, $CellContext`\[Beta]$$, $CellContext`q$$], #]& , {
          1/Sqrt[$CellContext`\[Beta]$$], 
           $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$], $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
           Sqrt[3] $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[
           1 + 2 $CellContext`qToCoupling[$CellContext`q$$]]}]; \
$CellContext`DerValues = ReplaceAll[
          FullSimplify[
           D[
            FullSimplify[
             PDF[
              $CellContext`qNormalDistribution[
              0, $CellContext`\[Beta]$$, $CellContext`q$$], $CellContext`x], 
             And[
             1 < $CellContext`q$$ < 3, 0 < $CellContext`\[Beta]$$ < Infinity, 
              
              Element[$CellContext`x, Reals]]], {$CellContext`x, 
             2}]], $CellContext`x -> {1/Sqrt[$CellContext`\[Beta]$$], 
            $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$], $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
            Sqrt[3] $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]]}]; 
       GraphicsRow[{
          LogLogPlot[
           PDF[
            $CellContext`qNormalDistribution[
            0, $CellContext`\[Beta]$$, $CellContext`q$$], $CellContext`x], \
{$CellContext`x, 
            Part[$CellContext`PDFRange, 1], 
            Part[$CellContext`PDFRange, 2]}, 
           PlotRange -> $CellContext`PDFRange, AxesLabel -> {"x", "f(x)"}, 
           Epilog -> {{Orange, 
              PointSize[Large], 
              Point[
               
               Log[{$CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                 Part[$CellContext`PDFValues, 3]}]], 
              Text[
              "IP", Log[{$CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                  Part[$CellContext`PDFValues, 3]}] + Log[{1.5, 1.5}]]}, {Red, 
              PointSize[Large], 
              Point[
               
               Log[{Sqrt[
                  3] $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                 Part[$CellContext`PDFValues, 4]}]], 
              Text[
              "derIP", 
               Log[{$CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                  Part[$CellContext`PDFValues, 4]}] + Log[{1.5, 1.5}]]}}], 
          Plot[
           Evaluate[
            D[
             PDF[
              $CellContext`qNormalDistribution[
              0, $CellContext`\[Beta]$$, $CellContext`q$$], $CellContext`x], \
{$CellContext`x, 2}]], {$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`DerRange,
            AxesLabel -> {
            "x", "\!\(\*SuperscriptBox[\(d\), \
\(2\)]\)f(x)/\!\(\*SuperscriptBox[\(dx\), \(2\)]\)"}, Epilog -> {{Orange, 
              PointSize[Large], 
              
              Point[{$CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                Part[$CellContext`DerValues, 3]}], 
              Text[
              "IP", {$CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                 Part[$CellContext`DerValues, 3]} + {0.3, -0.01}]}, {Red, 
              PointSize[Large], 
              
              Point[{Sqrt[
                 3] $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                Part[$CellContext`DerValues, 4]}], 
              Text[
              "derIP", {
                Sqrt[3] $CellContext`betaQToScale[$CellContext`\[Beta]$$, \
$CellContext`q$$]/Sqrt[1 + 2 $CellContext`qToCoupling[$CellContext`q$$]], 
                 Part[$CellContext`DerValues, 4]} + {0.3, -0.01}]}}]}]), 
      "Specifications" :> {{{$CellContext`\[Beta]$$, 0.5}, 0.1, 5, Appearance -> 
         "Labeled"}, {{$CellContext`q$$, 2}, 
         Rational[1000001, 1000000], 
         Rational[8, 3], Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {199., 206.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.885550433585513*^9, 3.885550614823234*^9, 3.885551082640973*^9, 
   3.885551156446209*^9, 3.885551255285972*^9, 3.8855513562173223`*^9, 
   3.885551621252904*^9, 3.885551698104639*^9, 3.885568018140011*^9, 
   3.885568137073287*^9, {3.885568228889398*^9, 3.8855682509640293`*^9}, 
   3.8856572487932863`*^9, 3.887965589402998*^9, {3.887965677427256*^9, 
   3.8879656844212427`*^9}, 3.900171828094512*^9, 3.9175005825209846`*^9, {
   3.91750156694422*^9, 3.9175015848850183`*^9}, 3.917501663949301*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"420b7a15-626e-4818-add0-b8f4bdff92d1"]
}, Open  ]],

Cell["Derivatives and Second Derivative", "Text",
 CellChangeTimes->{{3.8855553149965754`*^9, 
  3.885555326002235*^9}},ExpressionUUID->"7c9382ba-ffbf-4082-9348-\
e1d61fe6d993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CoupledNormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"7bbb939c-c1b8-49fc-8df0-17f357b11ac4"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", "\[Kappa]", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
          SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.88555543594382*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"8e7c61fd-8de7-4fe5-afbd-3a4bf5a4e3ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"x", "->", 
    RowBox[{"\[Sigma]", "/", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"2", "\[Kappa]"}]}]]}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8855554647282743`*^9, 3.8855554916138973`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"0d523bae-2a65-4d7a-9b02-63d88c81f1ce"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "\[Kappa]", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[Kappa]"}]}]], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["\[Kappa]", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Kappa]"}]}]]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.8855554929449053`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"47a00552-d09a-483e-b46d-27892c09d81b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "x", " ", "\[Kappa]", " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
        RowBox[{"1", "+", 
         FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], "/.", 
  RowBox[{"x", "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.900299893816077*^9, 3.9002999044539003`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"d01244af-a802-4d8d-a717-c31cb5b08062"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9002999062833548`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"ef4f8563-8049-48a8-95bc-66c108e877be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CoupledNormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.885555532176868*^9, 3.88555553228265*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"65664d9f-2580-4036-9249-949d09f5f4eb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Kappa]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
     SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
         SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
      RowBox[{"1", "+", 
       FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]], "Output",
 CellChangeTimes->{3.885555534546946*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"1fd9a70d-36cd-48ac-a6e6-c115a787a55e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"x", "->", 
    RowBox[{"\[Sigma]", "/", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"2", "\[Kappa]"}]}]]}]}]}], "//", "FullSimplify"}]], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"9f44568d-f35c-4eee-9693-ecd2ea295a88"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.885555546159895*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"93a7e740-7550-4e88-848a-e9c77c927f81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Kappa]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
        RowBox[{"1", "+", 
         FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
     
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], "/.", 
   RowBox[{"x", "->", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9002999262240677`*^9, 3.9002999533132668`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"5a6d4d7a-6157-4f85-85b9-0989e5bf8a0f"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Kappa]"], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["\[Sigma]", "3"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.90029993211189*^9, 3.900299954291027*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"ce3eee0a-96b8-48a7-b3ae-23b485749128"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "\[Kappa]"], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SuperscriptBox["\[Sigma]", "3"], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], ",", 
   RowBox[{"\[Kappa]", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9003000080318327`*^9, 3.900300022394348*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"18d5c856-791c-498a-9e63-26b3d14b31ef"],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Limit]", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]], 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", "\[Kappa]"], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     SuperscriptBox["\[Sigma]", "3"], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]}]], "Output",
 CellChangeTimes->{3.900300059254394*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"4e0a796f-9888-4223-9f43-8ff767b289f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
            SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], ",", 
    RowBox[{"\[Kappa]", "->", "0"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.9003009257834167`*^9, 3.9003009443483877`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5425a507-9c77-41d7-b75f-1576c9810d2d"],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Limit]", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]], 
  FractionBox[
   RowBox[{"2", " ", "\[Kappa]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
          SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.9003026884418993`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"e0516494-b812-4383-ad74-d79a07038baa"]
}, Open  ]],

Cell["Check 2nd derivative of the Gaussian ", "Text",
 CellChangeTimes->{{3.900300413101136*^9, 3.9003004228497143`*^9}, {
  3.900311994199153*^9, 
  3.900312028744977*^9}},ExpressionUUID->"e62e67f3-06ba-4410-bc21-\
a15579a04655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.9003004505203667`*^9, 3.9003005054969788`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b2490b6d-de0f-4f9a-aad9-77b20523ba57"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", "\[Sigma]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x", "+", "\[Sigma]"}], ")"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SuperscriptBox["\[Sigma]", "5"]}]]], "Output",
 CellChangeTimes->{3.900300506566511*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"b617fcb2-911a-4986-8681-036cf70e5b86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Sigma]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "\[Sigma]"}], ")"}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SuperscriptBox["\[Sigma]", "5"]}]], "/.", 
   RowBox[{"x", "->", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900300539554504*^9, 3.900300559137953*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"3f836993-c40c-49cf-b6b4-2699d26c3c0b"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    SuperscriptBox["\[Sigma]", "3"]}]]}]], "Output",
 CellChangeTimes->{3.900300560016321*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"0a07262b-ff8e-43f4-bbc5-3330f5a83668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
            SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], "==", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885657356959886*^9, 3.885657366921821*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"ff690cd4-f999-4e6d-a31c-6d06f514b9b1"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 71, 21, 31684940622056771425,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8856573682800903`*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"14b46e2a-f8bc-4896-b32b-a9f023cd6163"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["\[Sigma]", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Sigma]", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.885657368293239*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"cd129d06-16c1-4ab2-9ea6-9190fb6b1f48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CoupledNormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.885555564498433*^9, 3.8855555645939407`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"77d936d7-63e1-44ee-9033-0bf801073816"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "x", " ", 
    SuperscriptBox["\[Kappa]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
          SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}], "3"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.885555566948361*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"c6eda9bf-1e33-497f-8012-25d2499a8a36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"x", "->", 
    RowBox[{"1", "/", 
     SqrtBox[
      RowBox[{"scaleShapeToBeta", "[", 
       RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.885555662498337*^9, 3.8855557125140963`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"cc6e2b1a-c8b6-4400-8408-94be3a6aeeb1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SuperscriptBox["\[Kappa]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      SuperscriptBox["\[Sigma]", "2"]]], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
   RowBox[{
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Sigma]", "+", 
       RowBox[{"3", " ", "\[Kappa]", " ", "\[Sigma]"}]}], ")"}], "3"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.885555693462964*^9, 3.8855557142572327`*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"5ed4a159-ca3b-4cf1-ad03-1cefe82ed60b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      SqrtBox[
       FractionBox["2", "\[Pi]"]], " ", 
      SuperscriptBox["\[Kappa]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[Kappa]", "2"]}], ")"}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        SuperscriptBox["\[Sigma]", "2"]]], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Sigma]", "+", 
         RowBox[{"3", " ", "\[Kappa]", " ", "\[Sigma]"}]}], ")"}], "3"], " ", 
      
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8855561187570343`*^9, 3.8855561220632267`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[151]:=",ExpressionUUID->"51943ee0-bff2-4dae-9bff-10dc26e31a9a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
HsqpPOJ4YXyIGPMFiDE+5PNvmZyePNixYrHtq8UPQaN0TuIJI9T/KgTrIT/z
5TOdzhf6h/zn6zLyrsrIm4iOB/6O44F6mK+vuPe7yNc4XohZfkJ5xvHk2xc2
frZg7JEFE19YMPJpz8Sb9gryyLcP1dR+or+K44Dzx49HmzHybMT4fxzG+WXz
AXz9Ysa0b8bIvzUT71oz9NjScsR8+1tE+QntJ84rYuwv2k8W8/nZSAHz5dGQ
Ylm/LKj8yupz+OUYmf/5sLzPp/I+YmofZf2W0H4jHbL7Cqg9k2ElKg+yeeMw
8hufXzUo/6P/zfrj2D9Zfc4fR/+KxXi/jD70HzC/wmFZuQnzPFPmfhNmvLj4
Gf05Pr+Z0fr898ror1hTLPP3bClGfwD7lzZGpk+6NekV1BcoJ0LGDpQz7yNr
Kb8glpXnKMRjyK+oryc9zm77OLuO8oOsP/Vy+nWZ8dNl5k+Plsvky5hi2fM5
jPwl00vse5Ey6o9h/3H8EeN4IsbxRIz+Mr8/3PzL6nH94b/HrmbeW1cz762r
mffU1cx76mr6fBwf/J0vn9mMfa9l8ktcPiRd7m+g/kX/DPUL+l+IMf/Dj6+4
+AnzO6w+RjvBfy/PrfPE+pjf4b9nd2TiwWpq79G/YO0T0sN/n8HlbxHz7UWN
vD0Hwj4H+Rrth5f8OWh/kB7UX3hl9RqOO+u/psv9FP68FALf7okofYhd5fYZ
5Rb9L74+1GLyc/qMvmnG6LNmjH0zYtYbGNH6st8NGf/ahGnPhLEXZkz8bMY8
z4LJT1sw+tCK4v9rHPnyzvmbmB9BvYgY40ScX1mcFUPLM5ruf0cx2h0+P+RT
PwPtGtox1JPYDxl9uVQfjrTcNsNyG+ZXcD2RWAFjezL6siiWtfuHsacCJq4U
MHpRQOlm9Qeff/4yfmMGoP7BcUT7IetHOsWyK5fPlD0P11NUMPkcLj7kP1+H
1keMz8f3F3g/xo98egwZ/uXybbLfTRX8GT4/WjH1VRQwts+3LxXy8VJl6FWl
/efnZyuovCKW9V+L3i+jV5Pej/1A+efrCYzf1Gh9Wbmawv3IH7J2qihfyfoh
YfiJtZ/ajD+lRTHyAfIlPg/lgJ9nKqfytEiu9zA+Rr3HX9emQuNr2f2qhJ/v
UiX8dW34HZQNLefnw1QJPg8x3z6qMnEP9/6Q/Z2fvytn4qsKJl9UqyCvOJ9o
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
/PyfwJ+YV8CSJ1/2tytvRiw3Tf51wUo6H0obzm0y0CetlGu9VB1wfqrBdRcM
Oz8H9zk2JIOqj01V+1oB0S1/XQo7YUgsnz/rOv5uBYBvUMDiD4ZE6a63f6+3
yB8mZHbZ7lbxEZUwq9MJpwn5xuT267sJHUOk8bDcHsiecwbuyO0RYvOFdkdW
vtAgX11efDFcLgSRWpeT54drkIk59pda+ArBwmhE75uDNMiOoUAMRkntu9Wn
lroqApjbJ67PlZ+z4Uv7GI1GbGBq471IirsZDTdrjGOP11345yRtf9vaN7mN
+RP7jMx6Zyk+2e5ezq/NH6GVx7MlFscqIGS9a36N9ReY5jCk+rEntz7qzqqp
31csr5DGA9ppx9a/hsipuz6kTKiEqpLoKd37JsPqRbuirs4qh8MxG9/MWx4G
nnvKrsyeKKFxNJ9fs8FmRMr2HQPKaX4H7TbG434fEpcX65cz96vQ76cOXiRj
LH1qab7tcLeVefN6c/tDbku53lwrqwbUO7xq29mQO+cc8yGm72/NPRFRS/Mh
Dlu7Gv3XitsP0mzZlC11kdw502nTijRsL3LnMmIeEJ830P5u4qPhXPv3dxd8
nv+CO3fbvCZ849jWqgTp5a9PFDDrEwXM+kQBpRMx/9wmAaUb2+evTxQA/5wm
7lzJiC0PdR+Kq8FbeCSh9VepPN6xFTvbqJB5QwSTnKR+mZq8/jB53iTxe1S3
nUXKpJ+NlevG29UQ4F3T/FuaAbk+dFbLaS414HnfMuzGS3Nin+/vft+6BsaI
w4zc2tuQN/EFsfuCq2Gw6qn1JVF2ZNg4fRtV/RpQlbc/VB4nvZt4WeCnbUqy
B61s49VdmTQz/ukfd9qceAR5F8R+VSYq8vqYZ0N8UJ5nQ3xHnkdDHCiPk3B8
GuRxOeIDcj8KsaPcD0QcJ/erEA+W568Rp8rz10oWO6cEnS0AvKa3E4S+mlQE
6aSw04WQAniQ1XbVne0iSPr4fkJzsyIIsO56Zp+SCNZMua+21KWYyonz4zL7
ujWF8Mhs9pEFg7hz8kYHuZe83qtEDCLWpKVL47dfOwJvutlrk2y/gNBzH0Ww
tnzzo+GttcnIq/YfRV9E0Hx/fdnYsmbEQ23YjVVzRHDWd4PkdsdmZEjIsOj7
OWIoJN2u1WkZkXaxB9s8HSKGmekzErrPNyFpDVd9F0vvLz0fKvoSbEL8b4V6
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
iI+3s6+Gg5t3i5XqbIhguyhwr9RP2trrVf0EVVviv67/QFHHKjj7oe/pEFd7
Ul/sY9RCyh9qm+bfuLPYnlip3biX9rKK5gFUinLahFlz+7+SwfdOxGeUg8q5
DDe9T+/A50H2lI8TJGA6rWvm2j3/oOelV2ovHIqhaPvWgNsF+WD0xSKsbl0J
ZOXPXz65kjvPFvPAwaNu6LsGcOs0PmXlFY96VQIjrmdOdSzk9oM1LHueN2uT
Elk84FmCn2cZvI/pb116VYkcnx3a5df4Mpgf5P3K5m8mHCg2fpL4uxzWburo
lzJfg5BD2+tIbSWA6fRfGR00iEntjuS5+dz5tv45fXc9ksr5YvPxJ+yn65OE
PzbGFW4S+n507RkVj+/mYoqn2xiUGH3jzueZ/aCNul+UCK6OG9Nq43YD8u5E
/levUO78uCrNPsmCLVWgfmRcL/PXJmRmyYZOhQMlENx644jZ7U3JliIXg7pA
CWQcdu01PtGEvO8WPr2rCXdey9P0lwer1MSgp7HONtrDnHS3FCzeol8FJzot
MUkabk5s/DYO/GnEnXerpPW858o+VTA8Ou98aITi+bcBu56EmuRXQZGfU2vJ
e2vSenAf44cFEkhpMznd7J81eXzS6W5ZmQT6BWToTomwJq7XbCu/DawG97UH
wk0N7cjpkkUuO1dw5+F+7ftj3qKTVaAvvNCv3dMUGGcVmnHDRETXBQy82/rW
fLMKmLS7WE/piQppLjywPb1LOeyf+qX56BIV0jJ5U13h4HKYuOjovSntNMmi
uTNu7enJ7VdzvH3ckZynYnj1wTX8nJch6b+xeVD6bW6/msCev71jS8UUV42+
cn37WRFougXbBXWvhP6z49o2L+bsZfUKYcr0lpUwYe4Q9a723Hm5I0Z12/BE
qhePZPu98lleDreKu+pP1VMnX+447zrySTr+J1wqDndRJytLlK+IpPFQis2G
ktxlGmRXybz4LeMlsOHIeYvHD3WI57PgVfpR3H5oiZEBkgG69WByeNuBH5bc
ekEjc/P9tb+5uNDw8Pm9jhcV9589aTbuc+WGbHDrFe3Vcf0v2l+ZfGbCjUlX
j48hFZB3a7/dbrc0hfNyD1xXPjjDm9tX8bHr0GY5VipEKejfBdXoHOh+buSu
0qtcvyJjtLt/mFUG/eKulU7KylY4z8R7rod9wK4qcH+UGbo1sxZ0l42Y1meE
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
fPm1otcaEQxVMT/edp0xGeNbECbeLIIp34aZ2rw3Jr5a0e1cokTwp/Pls8/P
GZOHCSH3Qw9webt9jg43F3cRgHht6qWj3mqkm8/vJIu6Guh86nOnyPWqJGx7
512b9tTAG7dVwW8vSvVTQ5jdno9Sf/hUyuPCtdYk/szFPV971MLrl3ZXQ85b
kzDfWTrBg2phbpeNAfvf2JLR7RtmPE7lzvdJNzK+XVXBfb9V9Ez9yOEW0vm7
rNG87Lzi+dmzZycXZq2pgh41r5w3JEv1detNwReWiqG7bmKpWgZ3Xk/Xu+IK
1/F18NZLSzf9khCi4k5cnP6rBmZ4z5pwyok7LzDpxvEY52UVUN9+Zfl8Xwcm
/nQgI/Y6mO8xraZ4+f7OVd7LuXLnyjD7cTvraHz3+VR+3KTyesqvg49cGhml
V0/zxSdemN9YmF0Pv7blH+tjZkm+mq+YetVehZ6nvXfO910/OnPrGw8t8xi/
90AD9V8Xz9jUb8zJMrrf8PB+oW4Vnzgc7d1i88BvnD1Widuy8uYE7v1LTef2
gkjvKopNnxgXBunW0u8xUs1eHOyWVEVxv+wly2/fqIEH5Zs9Tl1wIK+2rs7v
rFUN3qNUgn1eOBAXH5s9wwyqIbXN85j2dgKaN0A/z1Pejzvy94sxw3xVdo1W
ojhsRfqbE+tUSfmro4M/bC2CGWdHxl3qUwAdX3VwahFe+P/0dqbxVHVRAzfP
8zxTKlGRVNK0Ng0iSuYxkjllalAiZSoqpCgNQpM0khKlkCJTmaWMGUJcwx1N
7/V0z7k9z/vh/fZ+8vvb56x7zj7n7LXX2muvBbcy+i6yGv0C1PpYZ8PsBNxJ
Xvu27soweH1qPd1Nt/8tC9pVInlGIHL35IswhbH/xK+P4ozNIzW+Tgk8ejAE
oQV7I3+eYNbnxt4bF/aTnxROMeuyhLt3KKrbM+t3R91as2TzawrONzlyeFmK
J/H+Lqc8HG3SJAFZ0J1F/SoLEnN3XHy9hAhdHxrjttHfg8YHnMuW1mLrITzo
ts+K280PmfnWg5a117uGk8DTx19TVUwIuVPVR30OkkBzdgn7ATFBVNnMcfh5
G7Oed6F1jUGfBgnn/brOs8L+ZPDLeCWXYimK5FfE+9vLk2BOSzfMkG5/7zRn
NXgmSoKq1Vc1ee6KoPs9AguSWynwRvjoIqQoiqTO+rw04qZC0cUjrncWiqOl
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
jf8z/9NemD9/vobd+aF5dn4ltHOe/wfm8/5X
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
BGmM
          "]], PolygonBox[CompressedData["
1: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
gt+8yl3lcFWwj+Vr2TgK/D+zl64a
          "]], PolygonBox[CompressedData["
1:eJwlkb0vQ2EUxk9bdW/d66KIREJVYvBHtBGxiK0EQ6VJt5IwGCRiYRSRNBEV
/AsGYWJiEbEYfAVD1ceI+Iip+J2c4cl9z3Oe87znPm8yP5OZDotIB4iClZhI
kkOLK/LniKwHIvN1IpucL8FzRCTwqeEDNE3gq0aki7lGuEk0C6AXUw9dwROZ
ZeYIbg1E8UrFzOeK+gJkmBuvF3nHx8evCPeKppXZYXSdjt2ve0yhLXN+At3o
l9C1oRtBl4DbBsvosvh904/jdw43FJines+BakjkjbofXS2adrhD/r+Peoz5
EvUEWEX3S78Z7T65pDknwBZ+H3wr3OHyjYKNwHjtp8Ae+jhzi5opuopju+s/
VNm5zM4F6l3QQx1GtwN3Rn0KBgPLRjO6AS/00mhKcCH8I+AE32vXctV8cyDP
zvdwo+huqe8cu+vHs2w0owfHdsr59sb61sLMAVwDGSS451PPrr2zvrdmqFnG
qB/pDaDL43fMW2cdy0yz+wfZYEyz
          "]]}]}, 
      {RGBColor[0.14804238096078357`, 0.3300235449782131, 0.5400396901061306],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

          "]], PolygonBox[CompressedData["
1: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
rQoK
          "]], PolygonBox[CompressedData["
1:eJwtkD9LglEUxh//FL72voGJW1LNNUgRLQmlS0FLURotQmNpthVWa4YErYXY
2FcIJXJ1sO+QDeEY2QfodzkOP87DOc8997l34bi6dxaWlIIJaMWlEY2yJ1XR
57CEXoQZXxpGpAT1ISa9RKUBujAtFaEzJbVhC10KSa/oeZiDT9/8X9Q7dtah
gJ6ld0hdhTB6zbe73J3bgfRNb4f6y30juIIanHC+R85T6ibzAb6NwGbO80SG
R8iNZz/0MuwWepmaY38espxfh3syNnjbB74u+h2azFfwX+K/8E3XXE76Eejj
faOXCGyH23Xt2ZuK+PbhYIzTR5BmduPZv7r/raD/eMdz3PK4XB30JFna1CQ5
dtG3Mfsz93f/oDMzfg==
          "]]}]}, 
      {RGBColor[0.14806772428322326`, 0.3300376246017907, 0.5400634243287329],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1l3uwllUVxt9zvu+T97Jf5Igjdmi4mBIx4dQwNdFM6QHGNC/JIRAVbNIS
uXggpkRRRLmfo0heSrxllzEUJC+ZWeiMWRBdyRvUATKb0lHjFNMUNdLl95xn
+ceetd6111577bXXevZ6x166uLunPcuyT7VlWQN6Q5FlPc0s21Vn2V3Qp5l8
g7kPpiz7HwqnQl8os2we8n5061aW/Rf5UUY/8pvRPZpjCH4f/CR09qG7td3f
U5A/IpvQzexxD3u8gM0u6BvIP8qYCz8Se1fAj2Duevhrqiw7Hb4d2WJsbmo3
PwWbb0OPMIYwlqJX4NNibK9mtOAXicenc7FzGzbOZRxAdy0+vMU4gI2zkaXK
OjU0K3z2XuTvgf8F/NfQ/Sf0lth7AN0NjC8wZrZss2CcwZqPQx9m3aLK8ZsO
P46xB/kXSw/x1zF/DvLXdJbkPbTXEugnh2bZrboX5gf4nsw+2zhLW2kf+uCv
5Vwr4LvgG8y/Aj+UsbC0XPPL4owfwc48+J3IO9nrIvgROiPyJvyD6JwI/2bh
tYuQ9ecRa/gjue9uKvzcdp9RMb8VW2eyd4uzLGeshL8Wugq9/YpJ5RgpVjPY
42b0p3DHW9jnRmzuIdxz0N2BbH3onJjMn43OZfDHo9PLGee0e+00dO4iPqug
f8+dT/JtGnQt+z2K/FBl/eHY6YTuLs1vxeaLpXPsZ/DvZzyD/ofYpwPZuxte
p/yTzqvMvQTtbdjuTcF/Gn5z03WiO/524fy9gX27Ws7taYzjauv3If8+4zvw
P4TegQ9/UT5Xvm/d+33Q1dhpofMU/CzG/dj+DDr7GT9G/lvoQ4V93cn8c9Bn
G66xxZxhInv2Q7e0+U4Vqwl8H2L+TvSX4s8YdC5BdrjpM8j/38c9XQH9Xul8
ehI6ofS5FdcPs6YN/UnQI6Xjf5j4HxP5swCdkYq/6gBZF37+Afnz8FtK1+qZ
rH2g4XMJL7oq5/m/kY/D9viG8/Ix1nZBv6VcLey/zrGhdJ4Pr7yH9vpX7jMJ
j4RFI5PrV3WsnJZv8vHUwLFLoVcShwHks5mfz9x58CcgH1X4vDq39heGqK67
W8aWIS3HTXWkGI8XVihnhSftxgHVm/Je+X8j8omRY+PhF1Ze+04tyjfZOYm9
D/I9Gd3tpfl1in/YH1m65lR7Z/Dd2bQvf1XsOFMe/NSm81c5/3jlWG9PriXV
1PrKOT488nxNw9j7LsbGyvl9C3QY+jvhD8D/pHYMliEbjf3PtYxHJ/C9C3pQ
OFe4ZvZDZwe2bAjME6/4zmq6frXvRGzcGzVyVcNn07k6wi/l7YbKuHE5+38l
6mUh/O7cfg+tXf/Kw7MC73VnuldhlrBrHjZ+k5znF9XG7axlu/Nq8+fh55DS
+z8I/Vjp+v4ltl8r/N79Dnp1w/YVC9W3ziD/h5X29xn0u5LxWTjdVziu85Pj
Pablexldui5UH4m5V5nrAM9OKo0305A/FDj788LYKow9Brqi9Jt6femcU24o
RwYq40wv9JTS+aa8W1M6J/XurYu8OrZynol/TNhZGT/+gf9fLV1rm6G9fB8i
RP3MryVWnfi/BrqVcRzy85m/u2m8UxxUI9MZifUzm84HYXdnyJWzp5e22Zc7
hl0RE+GfallzkwJnPg+dHHfxK/THFsbiN/Hnydrv7k7o9spvlt6udXwPx8b8
3G+G9l8A/2fmlgvX4Uc1zeutlF/dUdeK0+Bb3uZa746zCI+VA7qzwXOEXBhz
Z9O4Pz1s6Ixzk+vkKfbfC38f/MO1sUz582jhOp0VtfBAYLgwUbnzvqbzRrrC
c+XzwmT5AujuwvH9Bvwnot9Q3/Glwm/yl+EfZyxA57LcdaucXVX73GMbPrt8
VL+nu7w8GXvPQX92MsYKa3fk7rNeIcYHI686mG8Wxm3h9+sN44FycWXh+F4s
nabxQW/6ruiVxB+Nt0NvyMxkX64r3DsOvgnIj286burJ9kT9qo6FmYfjzVLO
6oz7ok+SP8uiH1FPqN7i/uR86M79LiqeG9GdU/jN0Ht4QeEY602YkTtnTtbb
wvyh8Fv381zc0d7K9FjWvYxexV5/LNyr7okz/i1wSX3KpmSM62Fdd3KOzEjG
M8mFOxfUtr+vsg3FTnaezT3fk3znc6Ou+gOXvo58Se3c66mN9cqn76qmS+eD
8mJE4XemA9m2wrWnHlz4rHd3RGC3bO8oHW/FWWvyyGu9L7cn4+CPcteLeOXW
DwK7pmJjVfR1K0t/S/4B5WftfNN/xpLCfbT6ep1NZxQGq0507y8n36HuUmfQ
GzUh6uLKZH5R5P7b0YtWtevykcB+9evaQ72FcuM/hfsD/bOolpcXvjvd4YrC
eah8nJisc0nhvFf+P82Z/hR304n83sAxYeQ1YecJZHtL44X6uG+WPsPSwv23
cEX/HB2VY3lK/NMM9v98383cAPzFquN4FxrJQ/xVyZireh2F7mcjt4V56jXe
it7jicjJq7HzfDJGD2HP0wrX6rDkt1Nv6OrKta4eQj4Jj6UvTB78f0P2OvYu
rJ0LyiP9Myhf9M6rPlQn8l93dFrg4abS59L/za+TcXJlbhwXnuuNFT4Kg+ao
r0teux7aF/+ENyX/T6iu1D+sD151MSZ6bPl5fmE80P+WsK0R+CbfBqJ+35t8
xnHJfmlOPqufUB3OKoxrwjf9E/w0957qDV9K7lVeTO59RgdmCj+UT+KFKcKW
O5L79XdwQn3GjqhlveV607epX443YGNyHij2FxZ+R7WX6kf9l3p+YaLwS3c9
tnQNjQkf/g9mUvHt
          "]], PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[{{3403, 3402, 3401, 386, 2812}, {2829, 845, 2179, 2677, 
          2678}, {2678, 2677, 2689, 731, 2691}, {3193, 3192, 3191, 401, 
          2308}, {2600, 445, 2781, 2783, 2784}, {3000, 942, 2999, 2261, 
          2262}, {2681, 2680, 2395, 750, 2713}, {2712, 749, 2394, 2680, 
          2681}, {3190, 993, 3084, 2457, 2458}, {2855, 2854, 3601, 993, 
          3079}}]}]}, 
      {RGBColor[0.148093067605663, 0.33005170422536834`, 0.5400871585513352], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[{{3009, 943, 2308, 2881, 2882}, {3322, 3321, 2557, 652, 
          3323}, {2603, 2602, 2949, 902, 2950}, {2669, 713, 2334, 2602, 
          2603}, {3076, 3075, 3190, 1074, 3187}}]}]}, 
      {RGBColor[
       0.14811841092810268`, 0.33006578384894597`, 0.5401108927739374], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1l1mMl+UVxr/5L+Zb/h8aW4tbVWDABVN7h4JLGsVopFExynjRasfGBVmq
ifRCErhocWdmUBgWGcsMCETTYoQmNIVhUMeyCGibQEGLKGBrQQXBFhHj85vn
ePHNef/vct7znvOc55wZ0jp1/JRKkiR3NSVJVfJG/ZlXS5KtGn+UJslEza9u
JMlnGs/UeHmRJIv0+zbt+WupuXqSzNC3Tr/35EmyVnt+o/VjGl8jXcu0f4fW
tuubpLWPpedhyTXac0h7FujyH0gu1r5O7V8i+ZzkFu0fJfme5Df6NurMvixJ
fq39OyU/lHw3dHZpfErjN5o8tyPm50vXC9LxIjbrG6o3tej+x3XfZK3v13h4
adsmazxDejbrW621J5osW/R16n3z9P1d++7T/pPoT20TY97zU9nUJ9ms9WHS
36/xQcmRun9hxWvbcuvbobMXafwm/pBsLb2Ojt3av0HjQbL1NP2eo/G3kqtL
23dI40cbtnNKbjkkbP5HzTZO0fiy0r9HSk7QfUOkb4F8sDzie73koNwxJba9
pe/9SWa7sf9lzd2j7//af6/koor9PikwATZ+VfruK+t+2zHdMVXyP6ltwf/Y
szBiQUyaK95/t+bfrzrunLlU9/Zo7XDp9atC51LZNAg/6s4PJJ/XN0zvGRN7
0NdTGG/gDnv3VO3L16Vrr+RXWu/R2h7pGyV9s6TrWu1bxnu1p1d6PpHcWjP2
wOBLgUmwuTOwt1Q6OrS3Xd8G7ZtWs/5m2dOtuSX65uo7Q/MVySNV4xNsgjli
jj+Ix0jpWqq1yZITS+9/SPIPhd93t3y4Q2v/0p7Run967nPEkzfwlvP1jhOa
/5nuOSn5YOm7xzZ893yd1VQyWH82av5syZvws87er3turjtfsG+C9u6uWC+Y
5V6wzbsnxPx7kYtgYJbOPhbvv6Lqt2EfOk9Fzt9UGMNjJcdntg0bZ+trxlfk
Tc1jbHqO/NF4jua/0RtWau1lvbe5Yfz9KHeuLAzbLpFs6O4RFfudeJHnt1SM
ma3hR/zZLRv+JD0PSOcfJXdJ153kZeTyosB2i+TlVc/BF+jrKpyrvPFcye2p
z6KjL/dd4LRN9l+m8T7NHUgdc/imN7NNn2p8gWSuPeO19mxu7P9be7tLz7dl
zhXyh7t7tafQ7/WSvyx9bov231HxPPh/JjeuDmp+RcNv6M+MY3j0F1qboz1P
Sp5InR9wLzk8pGF//jDecWP4bVzFPI/d62uOC/zOOXiNOLB2g8Y/1/i6uudZ
31Iaex+mxtT8wA81A533a/5pzb1WMdd26FxvzXVoTM05g+/ABnkGV2DDutjD
m5mX6QM1iDVsg9uwH36DSwZL3lqx7vVxtr3q+xh3ZI7HWtl1a+q4dzXM+fAn
PHh78Cf5h7231+yb/blxf0DynNw59FHuenUy8mSo9O/Uns8L6wZjzOMPcEJu
fpI6dsQQbrsm+A2uXhGxAHfchU+6433g71zyRbrOkfxz4f2nUnMK3HKIul26
njyQ2hfMjw9fLQ/9syX7a8YJ9bw79K8s7Ee4Gf7oi1i8lRljYO1vhfnnRHAj
e3qiBkwNjK+J2rNaslV7rq0bl+tK42Zlad49Per++bkx8OPcOHkiavELhWO3
K7WdMwOT+BKd+BPfwn3gDbywj7fAc3ATvHRJaS67tLTv8OG8zHejh99jg7vq
mt+bujYMLc01bXXnEnWAMTgEj+0xnqaz06Xrt4VxNzN6JHgUPiUe72jjXM1N
T+3vGfGWrqgv+BBbWuNdrxXOtSbJ31eNWzC8TItXa8/bsnND5hgvKf1e5sHl
8Iq5kviCR+KN/dS9TXWvIeFSxsShNWIE7shJsAd/HwnctgSWHw4/dITNxL8j
6mNn5rvPo28KPv9a8p+l+WtV6Z6D3mOYxlfEmH6Enqs76mkeeQxuZ2htkvQ8
kvmdzPdpvK3qHgmskM/4p13zm1P763fy21eZ8bRduJpVOBeow4Nz5yZ1htwm
dug5Mzee4LPDmX0Gj4KP4eFP3gEfEXfObYuz2Iedb5SOGbGrFMbLiNi/v7Rt
2PiX0jrxGf7nLH5eEP0jXE2/c2X0PGfl5m34uz81Bz+o8QU6tElnL5ScVrF9
A/iMGg/2NtfNy/w+Tt+j3+9Kxw0N372mdP1viTrbHnjD/2/qDav0+y3JT1Nz
VmdhDqNuwZXglpzET69o7SWNX5X8snDPd1zyC327ND5SGHMjwp/0k/S08Mwj
DY+fl0+WR09LbwtOsfniiuc6oz+nF6EnoR/DT+hCz6nIfXKBvpD6NzH6zw+C
bzfEGvPoobeDi3kr/AYXLNXdo9GTuR5Tf3fTO5fuh/okVwSnwW3UcrB7oLQP
4FJ6bs6NiTheVLpOt9EjZ34v7z5aOKarJP9b2PfU//7oT/EVdYA+Fn6j1oFn
8qEjtx70gQU4kxjib7hmbWBpdPTYYJ5azn3kbXP4vze4AVz+L/4f4f8S+qz3
w2+zo/8iN0ZFzLFtVeT4xszxujhijJwWmNxS95i57/+f2aRzX5ZeOxZ8Ozve
+1Tu/0Guls6bG8Yy9Q2uOj3yZUnwxkDtrrnfGBd9Cm+k3l0YZ9FBnp0RZ+dG
D0/d+t5W7FxcNy/3BNd1Be/zLY5asC91Xh0tjUX4i/6NnMSvR6MmjAs/k2PY
fD01NP6/4/+87vh/E/vnBf+h53hwFxw2sLfJPEMs5obNXWFPW+joDD0DXBg9
Dz3MuOBJ/p8Hj4dl+2fBF3ul/ztiJR7+
          "]], PolygonBox[CompressedData["
1:eJwtlllslVUQxw/33uq33O9qZEcolBYL1IRo5EFAUVk0Ei1gVPBFBWSTLS74
AAoaBTRh36RFWmkRiCaCCgZc2kKpLGUVI4IKVAqmLSpCAUGiv3/me/gnM2fm
zJkzZ5aTM2rq8CkJ59xnIAVeC52bmXTusRbO1XjO7Ymc24vCLLAbeglri8HI
jHPPgNq0c8vZOBv9TOBca3Qq4BdjYxm2riC/DIrYUww6Iq9BvgD5IuRvg3eg
n2L/Jd+5L9GdjjwPX8qRHWDPk8juZ20Osj9Z+xH9eaydR78JfhH8cPhG6LtZ
e1W6Wc5VctZGfNwAjkL/AArAUeRT0D+H7Vew+TL4ir1fg3ru0At7OZw/TP4i
O4HuBdY6QW9kf39sryIeTeiWcl7flO05A7/ON18HwP8H3xX9Wvj58F2gO4M9
KfNZvq8Gy6C7cl4x9AVwDH4bZ55gfw76+1Jm4yT+dMGH48i5kuuctpgpdt8g
bxlZzBS7cfCfIm8EDcCBFmAd8vuSFmPFuhn+Z/ipij/0c9i4mrIzdFYP+CPw
k5Bvhb8D/hD8YZAP3YM93YGHzAdv4dib4Ah+fQ8O43Mt8Upjr5L7XGBPfsLW
mqGvo3MNPIqNIeCIcg5ZBTiL/CSy6ejvg78I/yHyUtCTMwrAduTbwFzoeaA9
aJexNclqtYe9Nfify/l74T+AL4N/BL4ePsC3bM5YjH4NGAH9KzgU2B10l2xs
dgajwaiM5bRy+ztk/bIsJoqN7qi76g66SxE6Gfgh2KtA9xRr70MfB7PRbQWK
oAvQeRzZw/Cb4d8Dzb7lrHK3kDOHgkZ0ypCVoP8x8ToEP4K79OG8cvR2+kbf
qzvC12FvZwvzcV1kd8iOY6RYTUtbruUin498OfvzoKu4Txv4DuyvRj4Z1HPW
2NBiJ50FyPvC9wGDsDUYjPMsN8fg42lsVas+0A3xtwJbv3uWa3oTvc3f6i/Q
T6NfB30zm28CJaAUPM/aRPSrwCjoHdh7ImE58Qf8ec96j2KyET8uw69NWg39
FVrOK/eVo8rVM57dRTFpjz+rQqt11WAR9FnPeoPu3AX5Mc96mWo2m/O+QGd9
0urbQTf51hsPwLeHvoH+hqTpbEG+EiyF/gXchfwN1YMzna3IbsdmN/bngg7Q
a0LrBSuRl0Afjyx2uvNP0FWR9baTrH0eWYxK4h6nXncustqRze2R1YhqRW+k
t1rh21k92b8wsp6n3lcFdoCPIqsV9cj1kdW4av0Ue94lHgtD62Xq4erl6gnq
DQfhu8l/+DuTVkO7fIuJYqOZMp29lyKrZfUA9YLzkb1dIahEd7Jntm6AF9TP
Assl9eCywHJEuVIJ30t3Ubz0rpxbD9qgU5wwHwqx1c8337XWFtkiMJK9Oap3
8b7VvmbQGWy3At+mbIZplp0OLFaq2dsCq1HVqmbABuRLfbOlGflS2mpOtaec
V+6rhlRLO0Bb6P3YaJu0O6uWe+P7PaH1FPWWCWB8xnqcep1miHJtMEiGNnM1
e69BXwcPQPcHU1XLYAGYn7GYKDaauZq942PbmhGaFZqpB1lvCKw3DWWtGP/H
ekYPA6vhB4BbUjaDNIuuBlZvmvn7kX0SWi/SmmRZrKXimarZejCwXqYedSAw
m7KtHqdel0+MTiRt5jyrXh1a7udSA6XxHXXXhniW7YLehHwJ9q6wt11ksdWb
6m0TyAcmrcZUa6o51Z5m3EX1h9BqRzPwIvr/ePaX0EzQbFgb2tmSl6kufMtN
zYi1kfW4QXHMFfuZYEY88zT78iLrVS+C37C9KbS/lHzaHNob6i01E6oCm5le
HDPFblr8ljNi27mR5bp6YB32BqFzq+YxmIWsj2+zSjOkNfb2efYXKoefo/7k
Ga2cU+5p5mj2qOeeRrbEt96vnFfuq4ZUS/rj6a+nP5r+avpzdUU3y7fYPwi/
O7SZOzfOOeVeJ+yvSdifSH+jMdj8N2V/iO6RxVyxVU9s8KzGVeva0xFZy8D+
VsoJ5cYE5Iksu/Nw+Nc9O1s5UM35W9IW6+vIR6M7yTNaZ+ps9WjVj2aCZoP+
cPrLyeZEzcvIYqkcH5i2GatZq5rsHfdE9caHZAf8DyQVi04=
          "]], 
         PolygonBox[{{2214, 1193, 3323, 2554, 2555}, {2883, 2882, 3322, 1193, 
          3324}, {2811, 833, 2173, 2572, 2573}, {2573, 2572, 2172, 1173, 
          3276}, {2891, 2890, 2558, 402, 2888}}]}]}, 
      {RGBColor[0.1481437542505424, 0.33007986347252355`, 0.5401346269965398],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmWtwVdUVx4/knpk87mln2i/io7XTOgUBEW14CtLOKCBQxZGABDHRhFfe
NyEBQjIiCARBFAISoCUgWNBpra0PtCoqqFQF237ojP3QVqvtDB3b0eqHth/a
/4/1vxM+rLvX2Xvttddrr7XOud+6t+WO5mFJktTpp0Rjj2C7YJtguKBS85dp
nKRxvKA8ibHS+BX6uUpjfZYkNaVJ8ojwG4WPF7Mq76nV/EHNT9P8g2mSvCi4
Us/Xieb3Wh8n+KvWllySJL8T7c6c5BDNoGh2Ce9NY26xxlcFi0T3sehfFv5I
WZLclQY+T/NbhoWsyDZLvHKMopmhiQrhB/KSR+sLTP96edCXaPF+4Ss092ft
+7A0cObahN+pvYs1/kvn1mn+T+J5j57Xa34y+orfBPQSr3mCOzhDdHeL5j5s
loVu6PiaeK4X7Zk0nv+htTeFvyGeT0iOA7LLMY0z05jnvCN63q/5FyT/oPAB
4Yc0VmrPB1ofr3GJ+Bd01kTx+zIL/p9lYV/s/KbotmnfnUX5tL7QdoAHz2Xo
KfyWNORvGRZ4tfA24QXB5aL5RRryFWlnmAbbNgpqhsX6DNMs0tjuvfDpELQK
ms2zyXiT421kEvg1Gge0d65jhmf2jfJ6m2mIxwb7fYZlw24dpuHc7dYXXe/R
WJNGTOCLasv/ShrxhB8/kj3PKoC+ncW+u2yrPq2tHBb4X0RzTjTfyULvWstQ
axrwauuPDNhgkWP4dFn44vEs5qo9z7jYeEMatuQu1ljH4ebPM/7Cb7XGuXPo
drvj8B7ruNM2vCKJ8zj3VFmsQwf9M1o7zDr+9XhE8KzgqOAJwS89x/MewSbB
ZucKfDYiCRkrLedz3vcTwfMejwle8HhcMA67SNfr7VtshJz/FJwXPCVYKhvv
U+y+d0n4YoH9uFrzXYLviuZ/vstHpdeUkrDPpZrvIPYEG3IRM8h5meOw1fGD
3jvJN+QI5z/y4NNJ5KFDgv2Ch7z2mPXeItjrsU+wT7DVdOx51Hx35AIfdA7C
J0sVO0/n414f8b3/UUnkrAux4Jgc1HgwDR8erwiaT0vDZ9xRdHlb889o/i2N
P/fZ6FSMA+hOi3G/eJzSuEMxcLXwPbLVw2nkL2KeO7Pe5572fFGe9c5X5PQq
+xhfbPde7hPxdCHva6z03pfSyPvk07nGr/R9fNh7Kx2D6FJpnvh3Uz5y+rnS
uE9bijXIe6G9jPypgy7PIq8R2+Scr4pwt/A/lkbuJod/Lws7HrxInp3Gdxkn
9rAV9jmp+S/Lwl/UEHyxy/OM/cax6S7vnaNxr2C08JZc4OjLOGB8fz5q5Pny
kIH5OeY9aDnmlkb8jpbM1cJvFn59FrIP+tyq0oj9a8khwsdTV4UPOB63+j42
2m4F51lyUZfof6rxXo1Xa0+HZH1ecn1cHjVjsCxqLzWY+g0tdfhnGu8TfUH4
c/mg6XGN7nStp+Y/6JyDbddRq3PRH8xwbibG2Mfd4F5A0+3nVe4l6CnWEg+5
qLXgawTb3A9UOya7Pccdu8P+J+Y7XKOp1Wccw3Wua5yPHVZrbmsuaid+vJCj
tXayPGKJPH1pSfDlLrXYhvBnb5egj32uv9Thq0siVonZTq1vzkUfAL5KsCkX
+xjbk6CrdU0puGegdyB3bcxF7B7Jon7/RvOTRTdb8Pck+JHb6pKwDbI8ILxO
427Rv8NdzoeOb2os6PndSyLvTs3CL2c0X0+slsTalCxs/pbmxwnvFf6y8HuF
/1t4rcZJWfCEN/n7Pefwm7KImXc0P1Z4t/CXhH9WHnn5c411mv+maBvRUfvO
Cm5Igvd/BN+gvlQEPftuEP16zb+aj17zKq03ae+YLGrAiXz0cOR/6sCELGz+
huZbc8EXniN8LuejM7r/Oh900J/KR39GTP22NPTHDm/no+7jV3yFbuj4bj7O
RoYXNc6UDEtEM1vjsdLAZ1VE77DQue5h5zdy12v58O/r6FUaNXx2aeiJvic1
VmZBAy12xJ6/yoc/8Msr+YjFZufP65LwMf59Lx85MCuP2OD+cB+4K9wZ7hg+
XO24uV/QJvwW1yzuJ/cZO63z3dzhvdw19qy5iCc4sYfN1vpOYv+laeTCNsEy
4dcmkT+Wp0Nz4Pim3c/gnLPOcvZYNvJgi8bWNPJdfRr88S93Cl24h8U7Bk6u
rXFtQqde68VcbRr5fa5zMDm82fec/NDhnqTVvXCL7z53jrt3n88Cr/N97PQ8
MdXpe45t6UO4y/i2kA7Zu2C9Nphmvm2L/OQH/N+RDq13mE+7e2nkPJzFO8jr
ZWHTetuEvp8cQFyM9TM49+yc7wXvZPS61Cbesain5MB5pfGe9olrAnu5e9Q9
aiQ1CNrTpkcecig2/Fp5rH9YHuunTNPvOsczPRp3nLg/Vx559v3y8Am+wW8N
roPUwxfcLx2tiHhCxzFauy0XtPQm8NjmfL02F7FCnHBvmtOY6/H8hCTq3so0
4g79VqShI8/g2Ixxpeeb0uBD3eX+EYfwgy9r9MDkwQ7ntFHuCegHukzDXnr7
xjR0Y55neub90m2P5D9QEXkFmi7bqsH09Ob0qv2CE0n00U8m0ZfvTqI3R4Yf
CL7v+7vDdZyY3OR6R49Ar7DXvcI+Pxf7WvpczkcOzi328fT1KwWLBNWC5YKF
gruSeD/otxybXJeI4RVeZ08zdZK6LFgmWOD9Dea3mHM93o3NPbKn+P6AHPTZ
+y33Rp+LXR70+f32L74kn2TuCf+rscX9En0T/iQ+8Mu+iqibAxXR4z9me24w
75229wnLQX5r8d15vzTqxNezeHc5Yb/sss/oyXl/OGC5yaH06oPme9jPze7r
6O+WMtpG3H9yQ5317RCssr6MnYK19k2Dz1qXxHcd+D9wkR4bzGOb+wVk2W7a
XsEa+wxe3eaHT/rcszzg85bah6sdByvMu93y9dh/zZal0c+9nmsR1CehV5V9
2m3ardan27Fym+B2x8EP/fyZv3V8kUWMzPUacTRbMMdxNMdrxN+tXttkHbos
a51leSmL/vJvWcRAl/Xb4hHbfFEWvt5YEfdojWVdZR7YpcbyzjOPZbYR5xJT
xCix15QO5SpG8hI5mzikli/z/k7zXmV5qRttriPLLRt07Z6bb3+s8Rq1vs+9
9AdZfMf5Qxaydprv4xXxrn1YY6vfO3j/4Czq1s32W699u9J6c8ajZfEN5ZMs
+hjy+u6K6FenCl68yI6b7deH7Gd6BmLxEcfWTsckcbDNdHzHoq/FNuRd8u94
x9oG76N/pY+lJ11r3n2210bTddoH3JvXyuJd99MsbLfZa8V7xZ6DFcHzxxWh
Z591aHPup1/imxzfKeiDx5bFe+9HWcR6j/VosM7IRZ7ke0rxWwtj8RsMI+/x
9EQF565DnuObBHn+We+nlyK/UafoSXkP412NvN3g2kHtIg9elQy9l1I3m7xO
zaLm8A6A/Vijh4A3PULBfULBPRz4oGXhfZD+q9Xz+Bl/8/1mst9RyIXkUeoH
34PwXYttR5055rVG2wkbzTYfYgY7Ys/PsyG+583rOduCunXcvKgHT/oZOmQg
F5Nzn/LaWfem5O1+++Nxr583zcmy6C325eO+PpEM1dij3kNNm5VETiGXkadq
kui/qb3TvbbItNztGUnEDDmo2mu7HW/EXjFnVZs3+xZ6Dzlyvnks8DP5kDvZ
lAzVzgbTkS8u1Itc1A/60pnmt8Br3I12y95iXrz/0/NdWR4yTMLu3jvRzzcl
EXfXWVfyHPnuNvNaYt3ZN8VrNV6blkR8sX9qEjF3rfWa4DOWuS9jnl6GnuYG
nzXOz9N9Ps89zp232KcbbVPuJDmNnmyideCcbvdt5JARPnOC6Tv8PkuuKbhn
pg+kR0TmkbbBRPuHPLvceqDPjUnkS/Iwvfoo2wBbXOOR/aNNO8X2xHbUL+5h
u9/jet2z3mwbTfMZ+I/asNSxgs9Xmtds236SY6jo85l+LvZVjebHmXPNl3GO
5ZpjXmMtH7SLfA46V/n8evthuukm+/xZPne5Zb3f+XK+aYvxUmW/4Zcqfw+s
9LerBn/vvtX/d/C/B9+ReB/jWw/frchvI7PII+Qa8kqrvyVj+3mOG+KI/oza
TQ0v+D8Cvg0f874B222kfcW932O+fKvb63dF8l693215LznruCHfrnDsUrOI
IeJmwN+w8esef2shto77TPIW+Yc8dcCxNcJyUAuW+X35jL/3pmWRp/Z5z1rn
cmKYOjCYRH5mP+8WfB8g3w83372WnRisN+8xF8XoKPtnum03xXOj7bObvEbs
LHFM3ej1MZ6fZrpiPBXja6rXvuKenG8VC+x/YhT7ctYVpof3YsfiFPP6PxC0
RfQ=
          "]], PolygonBox[CompressedData["
1:eJwtlVtsVVUQhtdpObrPOaw++IQoKUYbrSIUtUUs3uIVX7SGRFFiAi0keIFS
WjURTRBUMGqrpBXaAm0FKiReYvShpaWWS1QIRaMS8UFFaU1EeEDwRk38/vz7
4c+e2XNds2ZmXbZo+YPLikII68AEcHUhhHKQmxhCHkzPhdCXDeElMBRDOJIP
YVJxCDUY/YnsE3QaMBwBvyQhrC/BF3gDNION+GrIhNCKTTt0Hf9qwV/Y/Q3e
xscefC8A/fivgj+GPp+wGH8fo1OP78PgZ/jt+OjAVyM6Z/OOoViX8/8K8CU6
rxU7xxHke3F0AN/3gg/x/yN8Xcb/TsN3ot8BluLjcTBGvFHwFv82gHfx2Vns
2syF34fsFZgG+JXwffiYj69B8Ca+R4lZgf5M6nMCehU4WuR/Neg/SoxHwHn8
joNunRnb/eBT7J9Htgq8CNaAL4jXQrytxHs6sY1sT/L/dzAIXkB+F/J65EPw
q+Hnwa9IfGad/SNwDPoC5FnQCJpABTH/Rf8fsAj5Nvgq8p0Nhsl9YbRMd6C7
2Id8XpFrvA3ZCnKsT3NW7i3IB7KuiWpzCJsN2L5HPs+Qz3/w42AHdG/iO9Pd
qeZjac/l0hyVq+5Ad6GaqXZV6FYW3EPqpYuJsR//B8Bk6M+weR26hXhN2HWi
21bsHlQv3o7NbWnOyr2bf5uQr0S+GfogNjUZn+EE/vZQgwUZn3ko7xnQLPSD
Geot4r1KvNXEa8S2CD4z0TOkWVKPq9fVY53pmXX289iO53yHJ1Mb2aqn1dvt
5PQO9t+g8zUoJdepoKdg2RJizsfPWfL5POue/gP6kuhaaKY0WwPwC6GrsOnA
//vgcMYz9AH0D/ho5Wxb4Hfh+yv4xzL2eQ7bhJgXgi7VCvRh8yz+r+S8y9At
z3s2NmO/E/sR/q3DXxn8d3nvCO0KROFczjEUSzO1A/p0Yl45lKB/KrEvyXuR
/xq9G5TTGHQNOTxQ4h5QL2wBG9FdTBIPYzsN2TWgmv9ztBOid5N6XL1+Jvru
luLvuOYZnb3gDnCnejF612jnafcNc9618LXk34D+aPSsTyHf5pxtZKueVm+f
ip5l1US1mZL3LpgKfyn09pxnSzV6Gf3vo2dTPaZe6033jWqi2nSntd8JdoFB
5ANpzsq9KZ1l/ZNMO0y7rBvbHnAP9N1pz6v3d6P7HMlVkc/yxD7l+1vyOJpC
tGqsWt8SvXs0w7dCd4HKrHf0fZylDZRlPYOaxcmaSdDP/93gqcRnb0RehvxJ
+NLgN6MWvp187p/gnaPdox4vTX3IV3m0rWyuivYp33pj9NbojnXXOqPO2lrw
21FN/doK7kH14nr8HyH22oJpzfjBtEaqlXpGvXNI59Vbh/wibM/k7WsSPp9I
PHOaPe2MLnxNi5ZpJq6FXpK41zVzmr2q6N7RmzEL+obo3ayeqoSeE72rtONv
hh4m+VlZvwl6G26Mfmu0Y2ZDbyr4La2Df4hYN0XvHu28aujf8p511XQo552m
3aYZ2VrwjGhWtBM7Cu5h9bJi9mA/N+fe1R3rrhVDsfSG6S37KfHsqEaq1Zr0
rdKO0q6aHr0b1GMzoI/nXUv1SDN8RXTv6c2aCX1d9NulN+t66P8B7tUnHw==

          "]], 
         PolygonBox[{{2810, 2809, 2811, 661, 2575}, {3014, 945, 3016, 2809, 
          2810}, {2889, 862, 2888, 2885, 2886}, {2886, 2885, 2309, 945, 
          3015}, {2556, 2555, 2891, 862, 2216}}]}]}, 
      {RGBColor[0.1481690975729821, 0.3300939430961012, 0.5401583612191421], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmXl0ldUVxb8vyfvyXl7eEwFFUBAUrQMEnBgstLXFAa0IUlEEpWY5giKJ
hEANS4bSYrEgilOr1ApOaFfXqv/YZREVlcWyEkDFGDQiKlWrpXUVJ4Z2/zw7
yz9u7n33u8O55+6zz7kn/epvvHB6RZIk9+pPpeoxpST5uEqNcpJsU3VQmiRf
ql6RJckelUS/V+v7KpWFak8qJslkTfyR6hNVJqo9QXWbhnbV969Vn6m1B6sM
UmlX39Mqr6i/XeUQtfeq3pJLkm5a/zqVu1Sqq7WVvj2sdlHtgtrjJdOlWr9O
69+u/s9VDmjuJs2tUftqlc1qd1F9rcofVWo0t1pzH1C7oHZO7VaNKen3NSr3
qeTVX5nGesu85usqJfXtUb1cfZnG/E/tB/nOb33bqnUOVXuqyhf6dlwW8z5Q
maL2bJWP1D5W9QbVq9Gf1slr7t8KSXK29HFPbZJcpDMNVPtTfe5QOTyNveZr
fEV16P9tlcPUv1/1/erfq1Kl37dSV4cOf6t2rjrGdFfdTaVKffeqfMVaGr9I
dWV13MsOlT5p6Pk1naWnvk3jDGofofp69KhvdZItn8T932kMsP/vLcM7wsLZ
av9C7U819/Is5n+s9qQs7vVtjTlL9RyNaVd7lNrNan+WC10dqbJd/WeiN/V/
ov7JWej3X2r/XPVRKu9qzGjVLRrTURtYPEeYfVP1GepvUP8d0udIy75Lcy/J
Ah+jjNX1qv+h/olZ4OAs/b5M/aNVj1CZpPYAYa2DtfX9Zq0zpBjYG1cOXd5j
ff5T61yWhe7eV3sCeuDsKgvRu9S1S/UtxggYXJkFDsHmQ1ngE4w/kgXOt+Xi
rNNVdqssUdmnuZ+q/rXKN8ZY/zTWAY9/MCYXZzGOMTtV+qWB7XlZyIEM4P13
WfTv1F4XcS/G5qos8InNDlUZrt9v5OJ+blD5pc/GuW6zfMj2tcZcrHa9ykWl
wPJigeYAWLa9c4+cbVkS8j0Hv/jONqoci43oe1tV/G5R/bB+bzJOkGOexozQ
PaxS+1n136Ixj6jdauyB3YYkMPtWLuRi3e25uHMwCdeMUt8VVYEV+AissF4P
9c+pCjk2+n6xjXr1n4Ydqv2RyuO5wP1Wz2nPBdZY9x3vg4zgknUfzQW+N6dh
A8xDzqXqewK59fu0Uow5VfUppbCTk0ux97u5kGVCZfAF+l2u70+ilzT4g/6r
1F4lvf9H3ycLqys05k/oPQ17Y//xSeiM9dHbgqqQj2/Y3pY09nwsF3bL76Y0
7gEdLKqKb/TPSmMNzr24KvTC2ZaovQbdpXGHb1XFfOwa3kSGA/YFcAu6g8fR
ZWM5/Aj+BD/zgfHzYCnaowuBzQ81fr/vnrNwvnMqYl3WHFkKvhhRCjmwZ2y5
zX6INdHfjqrQ4dw09PQk+FT/3lz4rGphdFgW7ZVgW+NrC3FOMADvTZO8j1cE
1hn3ai7W4HwHvBf3jDzcNfzFnivV//1SyHa66uGlWHNYKe4DPHAnyM08bAdZ
zrQ/7StdTVH9Ov6kFD75v/nQPWtybnDfajtAVvqwoyvtT+E2MI3v5H57FQNn
E0ohI/pBN1fCu/g/45WztBgv4ARcDy1Fe4jq81QPrwpZf1iKdX6guovWPkhl
mPllfkWM+UbfUrhFdWUWcQj+l3uAV+ZmIeelWfh4eOLHWWBzgvm3TaWYRezy
pf0w3PGeSjmLuATfd4nHPJvE2nvNFRM9Zl0S+7Sbp+BIuPJNlZ9lsR5cNl7t
HeamcWp3mC/g4sFZ8DQ+clAWfHyxY4S1KmOz4ArsobfGHKLfL6i/VnX3NDj2
wixsH16Dy1mDtfDb+O+6LPwkcQNzke1l+4fjNaaff/dIg2s5S3/VA9Lg+fm+
A+ypr+XFp3Cul+xDwBvyMoZYhpgGP3WY2n3TiAemeO5LjunQ24nq65WFnMQY
l7m9Pom4gJjm+SRiqzuyiHnw87uSkPkK70Xs1MNnZMzl1uWLSZyD8zCGOOg3
WcRCxEFLs4iFkG+g5x/t9fG552fB29gGe+3OBYaIFTaZz+fa7sHHmCz8SGeM
udm+oKD2wWn4VngYjoKfwcox+najZUL3B6t9QRZ+BD+UNx7AOXJ9Lw3Z9ls3
3bOIE7G5cho+Hz0Ptt9lTNcsMA1my9bZCWnc0QHjAmwR67TaDxKTbbGfIh78
ldcg3lyQhe309R1zX8Q6db6/o9U+PAv9g9HjbUv7fOfcPfsO8B3j60+wXYFH
cJlZX9hfwfHEOmP/S/djx8RB2Bmxw0+z8OncDdg9yXeJjtH1bsfj2NMnjlmw
y88c275mH0psij0RLzQphhyIPKr7qP/YNOz1Qp+P88JD6J47Iq641j6/Vvz5
Z63xRDliGPiV/tn2n/g4OO/cLPhzlv0kHNtsP8zvOY4FmHOzOR5+nqR1/636
znzMxy/hL3gb3Z2FTa0thvyco8n+GTla7FuWmfNZjz12adwl4t7+mldTG372
hGLoFf3OyILrNhiPcA+6mGWegxeajV9wfFMWGOTuuXf4DF6bqbLH/hD/t9s2
dow5CEyAB+KCn2ShG/bkXtl3u+2t0TaKrTZkgRGw0sndYAj7qXN8PrAc91aR
fsc12H+HOSVLv+OpKvPpe+b02eZfsAtuO8zpTVn4PeKNtbZhzrrX8iI3HIRP
gTOQl/2RAzvhXYicvCfBVx9za6XH9M7C72CXnPtwyzvQd8wZ4FH8EXyD7uFy
OB094itqrZuxPgPyj7PtstYFvqd2c+gL5tQxvg/u4nyvsc1yY+ecAy6BU07O
AiPPWudwNXaJX4STsScwAs9jZ2AHbuqVBj4K1hU+hLfs2+YIuKm3uQrfg276
el5Xy829vWz+qHYbLsef4rfBb2/7BfTa3dwDj5LD2Gaewu/AeeAUvwlPcM+J
9QzfYevc86lZ8DF4hGvIZ7SZy6osJ3fJvaKP4+wHCtbR+pqIc16oCfzDUdgk
fN7F8Q/6arC9g8N5ttl9ufjOfPS7zLaPH2D+MMeYzX6bv++14YibaiIWHcr+
KvPBSU34sLw5bJx+r1BdVH1oZezHXtjrQser6GiUeYw4+0PLNLwcb+SRxbjj
enPLFmOTOVutY+a22ibgJeYTR3IOYjzyE4PSuEPkq3NOhDOuLYTOdvpsbfbP
nHGbYzr0wpn2Ot6mvOpzvmE8otPNti34ET6v9L6vG6cN1vtO+5qV1in39pXj
0i9K4UM6fOZNxl0Pnwsd7vf38ebzdn/n7OSnaoyNa+yPsTe4cqzx+px5pYcx
CBZbzLMXmHd4jxCXrDVHY4dzzFPfxqC2+R7mAvbDp4LN4+1rsQk4HW6HJ3eY
Y9abIw42LyBTd9sg2C9bZvgAPifXgQ1ju9g0ebcunkvchJzI24nvz4wjYknk
325cdL6tqcHPW8YCuuNtwDuCHCI5qSPsm8lHHGkuJVdCrAAvkEPsZpnJzR1q
PeA/4Di4oNHcx5nIefX02d91Tonc0o32V3DWDHMfds6bmnfi3PS7dyN4We53
ZIvtDbt7uRj+FT9bwZr5yGs8o/YG553IP12VjzfpEGG+MR9v7Oc1pqffYrzJ
bsrHG3u9+mfkI/exVu2GfLzh19VGX6tjjZNK4V8Hl8Lf4/eXyXbPtv2S65qe
j3zHX7E57f2J+g9Re5/an+tMj+r7izXBVw9ondH5iHEf09xp+cjFfK7vCzTn
dHLCqreVIi5ao33m18bd7S/FG5W36kL1j+V9CG5UP5aPvdjzGZWzNKZXOd7Y
vLXHacz+2sjdkcMrmLvgsIec65iq8U35yKds0NiZ+chBvKR2cz7u7BW1Z+Xj
njbWBlbBANzwtPqnav16rX9uIWJ48g2brEtw2eIcBnHWRteddg024APk4t7J
w8y0v4EHsRPsBU7BVrFZuAab/fb9lgs7x97hxkbHBNgHOiaH1JmjanD8OcP+
D1sB28Qf8A330OycOxgmnoNHO/NccCO2j5+G++Y438a68AxxBrb4gf0w9kXM
h4+HT7E14iU4eJHzQ8S8nfkjuG+p8xzEswuc9yLmnWquwz+0um+UbRZ+w4d0
5keWmSexWXzINPMbHIztE4vC8debx+Dyxc7JEVNvcQ0PL3EuhFiYOI/3Knz0
mmWEn7b6O76AOKK3eYa4Hz+FzyAfvNR5pFONQ/C4ujLa3Du57QXOR4EXbBAM
DbVfHlITOurwO4V8DT63sSb8L2P4Tb58sfMq5MUXORdErn2J805NfiOs4I2g
dg3yq761HHaEPZEX544bfLYdfvsQd99i2cijgO8mxztHm0trjCt8SMmYXGcf
can9EpwIDmeYWxnfYO68wvzZ03hbbz/COo3m7ynG2BHGGDq/T/Z5vuS5tzb4
e7I5HE4npuvlWBJsg3F4Cy7F9uptF/gXzgBWp9snTLJf6GKc46eIs4n/iLvZ
g/iYePQo2ylrwAfkDb/9v1UauWPsaaT/X3BKOd470xxD8Y3cMvbWTWf4GJ4v
RE4WvhpSjlzlHucrn/BbclMpuIwx9+tOx/t99xe1B/t+n8zH/9vgwzGq1xQD
dx3q31cMPPB2fMT9a+xnkAGebfA6Z5RjLdq3q/24eXiQcHh3MeS/qxjx4Xz/
P4B8LP6R/AZ8ifyco9k13IKsyDyxGG/fFc4f8n+b5c4Z3um85d8LUWj3L4fd
gQH4hjXBAOsO9P94BpSCA980nm/Lx3mxA2wG+V7xfa2ynM2OleFDznGec5KD
SpFDrHNOl5izbG5vsy2Q8+AN1MfxPpxzg3HM24wcCbYB/19tPOFT8C3k6Xgn
kLfj/1EjjAd8IT5xXm3EV2Bypu0KrrvGGIUPrzOOycFV2wbgz6m2E946vNP6
2d6fKoRs8CR8OdS5VeYTE2JH+BzisnqvPcc+ArufbW6H+4ll9zlW483DW7Or
3zp5zyVuxK5n+c7QD3eIvyMnS5zIucgtdfc7rGg+IVfEu5B8IfuAs868Pr7w
SnMH70byfPx/Y7X/x/GU44Su5Rg3zPPQCb7getstb0XyTbzfeKvznmMf4nmw
QB6Nt2V/3y/vT97oxCZggbcC2Blkf/p/vN4tNQ==
          "]], 
         PolygonBox[CompressedData["
1:eJwtlllslVUUhc/fXg63vf+9KIIiDqGRaDRUUAYtggYHWiCgSGjEglgiL5KA
gkNMlKEVAUHGgqCAzG0dYmJ8AAUHiuCQ+KiICjzgAKICSkVk8FtZ92Hnrn32
Ofucfw9r34pJ0x6cWhJCWItkkNVpCCMBz7J4uCyED9DvjiHsZ613PoRV6CPA
c7DPy4ZwJ2uH0d/uEEI9ei/0b9E3o49E74+P/ew9koQwHHx1LoSHSkM4wV2L
sP+O7/nIWfQr2PMeey7H3glpKw/hGLYXkTPYu2Bv4/x4bJXgXeBfsM1G2rFf
ylrfQgh12MvBfcBD8XcUfQJSzf6b8/6WLbyvlvsfQVrB81mbAR6E/RD4LdYe
Rf+E770P/9+z1h/bBNZasM1Fnw5uRk4Fv+k8eyeiv4l9IfanwOO1B70B/Ulw
H3x8B97K2sNZ36G7FrP2NHhYzm+Vzxb0nfi8J/rMLZydxNo77G9SjsC3snYA
vI21OvS9nJ+T2Me+nHOi3CxjzzPgPfirxt+P6FWc/RJ9eHQO70Kfhd6HfFUp
x+DjSHPG+TqHv7P42ILvsUg39FpkXDEfY6Tjoxb9OPvHgi/iewMSsd+I1LOn
psQ1tgbfu8ud60uQPeABnPkh4xgr1ic4uwg5h7/unN/B2hT2nsbHBvbvxsfQ
6DO35V2Tqs1ENYX+F79LkQucv4bzvcsdW9XEZZydn/Vbt3D+EPqSgutzKD4W
gMuQLLIR2YRsZ8+Q6BqvxP858Fokg+/rkX5514pyrtyrh9RLA1lr4OywMvdC
JWvDsM9OHWv1lHqrV7F+T/KmTdjvx1+B/SO44wFwSep4KyfKTdKRt2PLsqcX
cpLvG4y+nD2riPXKnHG97sDf2qx9t6Cf4fyoYj8pJq3YPmLt3uia6st9/4JX
IyX4vg5pBzchAdwDmc59jfy28j0zlL9yY+VIuWrPOxfqafX2P+A1SClnKhLX
rGp3Fvc9AR7AngOJOUPccQp/g0r9Tfq2N5RXpGfimtrFnmr2Huf8eu7Ksaep
xDWqWr2Qd+yOYh8FngnuQswy/J7mM0LBtt74ej9rjlDvHBNf4Pu16Bjo2/Xm
zeDzyA2JY74+ugaU+w7I69HfqG9TTahH1CvqiSvBq6JjqNglSCP4J6RTYo77
kPg/nzHnint3pY6NOEBcMIvfI0g+Mec1g7ciZeg3IfPAvyKdE3OqfM/Rm4Lv
0NmZxW+XD8VyXfTbFdOT4GXIRexXof8NXhn91msT+56rmATf8Qf4FcUEvRv6
b+AFyH/oXdEPEtPJiTmpE7l5NdqnfKmmXormeHG7fCq2G5GOiWPcEM3x4nZ9
w/LonlYv642LozlC3KA3rIj+Br1dNbow+k16izjk5eiZo1mjNy6J/ga9XRwR
U3OZeqwc/GfWb1dN9eP9n6bmfs0EzYaB1NTBjDlf3D8u5/PqqTrw19jfFdej
j6HWuqauLfmU78bU3CDOFffuRWqifd7B2ROpe1U9u1nzssjHet90/NXkzV3q
wWrw5+KY6Bk2OO+eV++rpyaDV2TN5eK4n1NzgPzrfY8VPJM0m1SD07KekZqV
z6FPzXqma7arJ6dkzcHi4sfRt6Pfnvds0UzVbJ2Us02cL+5vSz1rxdni7kbu
nFjief0CuGdRF/9WiHOjZ4hmh2piWzTnietU81+lnoWaYZpl+1LPUsVQsfwi
9exTTBSb7gX71h09wB+nns3iPHHfZ6lnt2akZuXSgt+m/SvAnYvnFT/9lxlS
tIuzq8EtOXO7an4beF3es00ctRM+aSrGXzlULnekjq1mimbL6IJzoZr5hrOj
8+Y2zQDNgsqiXTlTbQwouDZ0fxX4fwl/S/g=
          "]], 
         PolygonBox[{{3746, 3745, 3754, 1455, 3596}, {245, 270, 1588, 189, 
          1544}}]}]}, 
      {RGBColor[0.14819444089542183`, 0.3301080227196788, 0.5401820954417443],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFlU+IllUUxu8333wz33ff99VcCLZ0UyC0SEXFYsaFqJg5ptZW/DMDghjY
SibSnAGd3Ns4/9CFlOYmJ2dSU6iZjUSKRotWCdImsSYbCw2059dzwMXl3Pfc
8+c5zzn3vkv3vL/9YFtK6UutulZ/R0rzjZR+1P58M6VdUm4tUhqrpbSCM+mH
a5Z8T1SSsr/eSmlLu/endf6HfD9T4MVlSsekm2vYZ3nDduyJyR578q1TvG6t
cfksk++YYg7p7JT2q6VfL9kr+Vwx3pQsdPatdNuE4TfF6alsRxz8HrRb/5Ni
P62c47hwXa37DP1e2X5ac81XpF/U6fpejTzkeEm6i+3GS77RmvMT+0Hgn5T+
jch7Tvin9N2TxV3lPM8q13FW531aG/X9q3w3SX4s+zXaHymdizzEnND6Wj4n
JWey678kTu61HGNY9qe19gv3bvVoa3Ze8oPxceBP0k1LdsF34Z72FD6DE2o9
qJiFMHwo317FmZVPn+Q2rWnt15bmlbxg/V7+lxTnpmRumZfbhTkjHnHpOb0H
99+SfzXMT3/0Dnzrwhb9hdIYwHKsdC5qpScXZXdN+ebaHOcrySfirk36fyrn
GYh66Sc25ByNnt2Q7wLFGtH3D8I53vKMMWvwTe/pO1z+2TBX3TFL1Ev+LwID
Pfi/JuV9W/xc1n5Qcc53GCuxemNek+SFDveVuQMX+MC/sNM+2IOF2ukTvQTH
nsIzAzfMFv7EYTbuFq7pTuHZHYpeniotj5bOw3zDc29wTn+wpwecbdZ9eEVx
Pio9b+eE4RPJX0rvTzQdr4i+wXOK2qj1WvC2UZzcRxbmfT7q5HywYRt85mMu
4Ji5hOfB6B02KXKQ70jci4HSNYxGb7HFZ6T24j3CZ2f2femS/VvZHG/OvrsL
oy/vqme/6/u9yjN+oG4c/aX3V5vWp7irxHsUd3CfYs1ovzc7BvzAGfGJzRx9
0/IbN14ZI/WDc3fdeMBfxPtBPVea5mBV9ls4FjXRm/7o3Q7FeqiznZJ9dWOa
iPeNmWAeRiMH8bFljw68nXXXAuf7Y0/PP493YSri0XdmkDP0vN/ddfd1IO4y
XMMvGHYI8+vZ55tafs+ISZzH2b6Hm54JbDa0zCs4wHAg5h4d80fen+M+VXXH
+TfuOHedN4i3aLtsXi7ckyWSs9mcfUf/g88z2f8n+BwO/CPBPRhvRe1LIs7T
pu/mXNw3JHl519d2mEfuInbYF9n/GnR9UT81vib9ymzu+Ad+kJ3rEPOo71Xy
SQtc31RwBZ7LsecdYb8lGyv3ljvBDE7HHJJzJuYTnJOBGRy8V+A63nzxHvTE
//GdyrMwG74j8TaSZyj+gdxd3kfOqpbfncmoHbzM30Tw2xXzS/+WBZ9n4w0F
y39bZia7
          "]], PolygonBox[CompressedData["
1:eJwtlEtsjFEUx+8MZeab+WahLAiLSlmgD4aiidZCUqpKO6OCIoqKREjakAgL
j0TEIyHqUbQJJaRqo1WNV0K7kdB6xMKGhdhI2pTUI171+zvf4p+ce+85/3Pu
eWXV7KzcEXbOrQcjwcuYc49GOPeYSy/q3HLPuU5kn7vLnPti9nYh5FyC8xPe
h7BbxF03cm7CuRwwGHfuMzgTca4B9CMPgP3gNfrFo5z74ztXA982uIvg60Lv
HtjOuQe+LfDN4H06qAKrQK1nb6PROYz/NnzdBL1w9YHfoBDus+gMI19CZ1rY
OPfiuxyODci3wULkc9yV8fFZGc49QPcQ53mca4nnIHI93HUJi0GxfIczDP+g
4kP/BXcXQ5azV8iVxHeXty9gK+8etlFwBbQEkBwHPniHj6PYX8Pne+RT3J0E
p0FDAMnP4HoO8vCRG7McK9fKoXKpmA9gX8H5E3IjnHH0b5HPtohxivtpzP6u
HJQhH4mY7wGwEls/arW9z3sl5zQ6Kdmg1w4y4RgDJnI3CXzzrfbD5O8Hcor/
d3Guxb4zYhziukmMYezmKj/w96JTj9yKzkbe+/GfCmqoWqbQTQMHCrB9g1ju
G+d/buzLPeuJqiBGxVrG3R3eboA5yHWe+dJ5CNsY52Mhq1EF8ibQHbaeUe+8
5TwV/hjxtJLP3fjflbAeVi/PRM5PWE6V2yJ8LgBJ7maDdaBaMeuv4AQ6xyPG
Ia5CMD9hNrKdAJpDFtP4mPVEPOjptiAHyoVqrtrvi1ts6ukmanUV7paI+ZRv
9Yh6JRt5CuhAbo9azVQ71Ui10gz+9G2mNdvK2TLPaqxar8bXGuXWt95QjIo1
B50PyMXYfPWsx9Xrqnma8/m4zY5muhH5r2+1U0+u8G0mNZvtYIlnM6RZ6gBL
Pesp9ZZyptyNg+N62HyWRG2HaJdoJjWbk0FWwv6ov+6JWGyySXq2I7QrVOPN
ntWkIKiBapH2rfc0w5pl1TAZ1Fi1VoyKVTP/y7edpt2mnCv3Tb7tDu3AHs96
Tr2mHirlvdSzv6nH1evKqXK7FlSDh8SXzLAdpF2kHpX9R84lvtUwO/ij/poP
Xx7IRHcsKPBsd2qmNFuLfbPVTtFu0Q7QLpCPZt7+AbxnxZE=
          "]], 
         PolygonBox[{{2570, 2569, 2641, 695, 2640}, {2908, 2907, 2880, 946, 
          3019}, {2611, 679, 2612, 2569, 2570}, {3092, 3091, 2374, 483, 
          2609}, {2895, 863, 2217, 2607, 2608}}]}]}, 
      {RGBColor[
       0.14821978421786153`, 0.33012210234325645`, 0.5402058296643466], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1VDtMVFEQvfvYt+y7bx8mBult1AQLRYgFKDWrLLpAggSRsICiibYagUox
FtrRuSZqggY0YEOBqImfWJj4/9Zq4Scx0WLxk+A5nLG4uXPnzp05M3Pmrh88
VjwaOOfOYlVhPYmdK6ecCxLnCmnnDmClYNBv8nasQ1gtadnncZeFsA77ptC5
HXZX8M41w89C1rkZrJ+09fJ9KtB5GfYTkJcgj+ecm4T8I4Iv6KO03k9G8j2C
t62w8dAfge50TrGuQD6I9Ru2Ra/Y1DcEwlswzPms8DbBpht3jdC14s2lSLYd
XjHpn76Gve4X8a4uEDae6wO9p7wNNovweQI2tcAzDf0W6EbhM8s6QLfZbI5n
FZsYdmMf8sqL+XmsKfh7Hus9/XRA9vaWcU7mhPkCbK9DHoA8m1OcjGFewXkW
8hxiPUrUp3nobkFug887kWoxYL1jLtSzv+xD3nrRlFaO1I9av2k/H6rXtNsF
TBXWCT6nEWMfbF5Hqnm/caYC+18p2bHnlNn3w9bjCeB6h3UT8kNg7kx0T758
DMUP4hmKhbWEvYT4380XuXS7SrW7HAkn8+bdYJVsN4TKl3m/xPu70L2KhSdM
y5a9rbeejuF9Ld6MY6+BzyXYP42VN3GSC9QtWNzHuBuG3Ie9PVHcGO82wrbX
eMgZIJc7vTByTlosNnNhfdiHgtWtGfWsZt0j9aJo/SjbeQz3PWnVnH7Zf9qT
KzM51f89Yp2JhHcOuPYbzmro9hivyK8i7tZWO5dEis96sVZvIuG/anPGfJgL
dT2WV7fVjZgzGfGCnCbeRsPM/MjJ5ZTu6qzOnHPW/UOi/owax/4m6nnJi6+s
yzCwP4vV665EfmjDmG1e8kqi+NTx3OU1E/wb2HP2m3zpszr0Yi/G6hf7Rv6T
b8S51/T/79mnnRlxoM5yvBeqXsTX7lUP/iVbbX75H3A22NsK/Ceo8bWMOEPu
8Dxls8G45PsLy5G5/rE6MD/GJleJhTvPxETM90PlXbIZuRip5svme8X8sK4V
mz/OJeOU7bw6o6HkoEZ8IC8aLJc10H1LFOurzceExTgHm0+Qz2N/kNUf8TZR
Tqu5YX1OVK8v2FNYN5CDw/4Pen/IDQ==
          "]], PolygonBox[CompressedData["
1:eJwtlUlsTWEUx78+7+m99937JKYdCY0hUS1SKa22W6qKeoImbYQSJWFBSqLt
qlgRxLOhJFolagy1qIrEsCBR87TGwhANYk7w++fcxT85557xO9OdsGZL3eaE
c64ZJMFJz7lu0JBxrhHcgb6Ucs4b5txA4Nx6MAaDqjzn1gWmI91SMAfMAjPB
OezOg9HQo8C4tHPjwQjoHuzfgr3YnwydW0ngcvzVwh/GJgc+8X0IXAQbkDeD
S9DdsX49eO471wlfBz0bdMJHYGS+c1fJ9z7xlhMvC4qhZ4AHYABZjngBur3Y
r8Z2Mm/cHzn3AlyEria/89AHwdSU5XAC/QPwU+Ar4Hdhew9/d0ENWAQW84ZZ
CctRb5NP+a6FP479a/jdyMeCPfDv4W8iXwB/DboNjIb/SX5/Q7ORrXTeKTdq
s5b814ClxFuXNttpoAn6GfqrkhZftaqXDrrn4C9juxl5HrqN8GeQvwqMLgXt
odVYtVZNzkJnqF0EzqqncY/V6zJQDtK+5ZJCf456Q7wVIKvag6fgBvJO3jMI
3edZr5VjD/pZ3nQd+Vdmbxl0MT6LwGdkX0KLoViV2FaBfs9mrwT7ncjbsRmT
Mp/yXca34cj68bcksJnV7Kqnt5GvJ9/f6j06VegWIZ8OvoHvYFlgvnzklciP
wA8lrOaqvXqi3vQi/we9VjGc7UQT9AXPZLKRbV1g8ZSTctvhWW75mnnNtm+0
5HPhN/mWm+JXhDaDmsVb5P8xsh6oFw+gH4JToe2CZlKz+Rn7joTV/An1+gDf
nrCZatUsYjsJTAQFGfMhX9oR7YpqrFqXQM8Gfdhf8W2HtcuD0Pd98yFfHyLL
TTEUqyD2LRvZ/kD+g/e/QedXZDdAt2AvddgHLkS2C7oxL6FdZLOqmW1Im41s
VeM/qkVgsyKfC6EPEusAOARyGdt57b52PEP8NN8C0AW6wVHfZkc3Q7djHvCS
1iPNRoe+JW2HF+G/NbTbop3R7qgn6o1mbqNvM+LH9ln0Tw8nbr7Nu26Mdkq7
RTqu2rObptu2lVy2ge2gJWM373BcE9WmJZbN9+1W6mbODOwNXfFOajeP+bb7
uiltofWsJL7BusXaSe2mZkKzkYgsN+WYl7EbrVutGqqW2jntnv4B+hd0+Xbr
dAN1C3VDdUu1o9rVR2l7p3b4MfR0UBjfAN2CmsDerpqqtnPj/VTNm32rgWpR
GNvm4l5qxjRr/wFFetC5
          "]], 
         PolygonBox[{{2311, 869, 3019, 3017, 3018}, {2702, 741, 2376, 2605, 
          2606}, {2806, 2805, 2169, 186, 2604}, {2893, 2892, 2895, 678, 
          2610}, {2901, 2900, 2227, 1197, 3329}}]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk0tsTVEUhldve7PPueccExNhZOKRtEJJEc9Ei4GKSkRJ3EFV45FW4hUD
l1EjEanSMJGQeCZIWwMxKAMJE4kaeM478QqpYELKt/x7sPP/Z51/r/ee3XVw
a1/JzLZz6jkbErNrdWazwM5gNgRvgi+Fr4WfA+cl4m6bAT8Fbw/SuX4HfFVu
9gd+IDX7WJg1EuQq/CmaTdgfVcy6M7M+gu4Bq2WzJ2X5ba7ITzv2XdjOcpaU
hP69GD4z+mkF96eK5TG/EKsVzTC4jfvd+O/MZPte1p3nmfwH7tVNM8vJt4R+
MKj2KrgcX7/he9EcDeKLwPfo2vAzUqgXnm8LeKJQHz6jH4z13sXHefhu+G34
hUK5X0fzl+87DWZT4DLOJe5m2H9R+000C8C5ieqdA2acD+jHibU+9vwn/DR3
xtBM4Ls/VyyPuZB/OZqd4BlOF/YO8BvnB/av4P1cfR0Fb3H64Q98/qny9Hx7
4JPwlblq+18j9slUOXvuN3L5f+P9LNRz7/1wnMU78GG98vc7vgfeH+/TvZiD
5/Ii5uY5tiWa1zqwMfbEe/M2VSyPebmiGkcS7ZPP9lmiGryWk/jvJW5Lg+Za
y8Wv4GNNrrp6Yv98pq5pDtqlY+CRuP/+DkYTxfKYrzLV4T0Yz1Tb60z7OhT3
qyOT3u9V417523oZpN8IHyu095/AWlBP5id6S95nn/O+VLvn+7g5qA8XwUOx
V94zfzf+jnwXp+Je1fA5PdEsDqPZEjTTgSBtb9T7P9c8BldwdzX8eKL981gD
4D8wPoqW
          "]], PolygonBox[CompressedData["
1:eJwtlEtIVVEUhnfmZZ/jOec2adCLIIIs0TQriYyU0llRCkEUOtCCHmQQvQZp
k0LoRRg6lLCuF3oZRRYYUaA0uwW9oVmQPazQXoOC+n7WGfycf5219nrvvaBt
f3NHkXNuKygGB7POvffOTYFvsXM1fOunObdvunMP03/SlYK+wLkcKIN/1xl0
Q8gx9ldw9g/5HPIidENgfuTcndC5E/AcWEissyXO9cM3gRnIVdjchr8BW5CP
gHFvPuRrJ/oOcnmUce5BaDayXY3uaWI+5XtQZ7KWk3K7ByqRq8EI/D5YCZ8J
erzlpNz2gr/kP0lT6mKrWbUP8O88vB99TbH9a48sB+XSCkaIX0Ie4+j7sN+O
fR02w3zHQC2xWnQG/hs47ItADL+Lv0JkNaiWdeA69pdBPbwCmwjeC77AJ0AP
fGNi8X4Qr5nznYn1/jjyMfhPb1z/fqU9UW+6QYHcX4A2aj0JBqn3KLHWkksO
uZzZXEK/HN4uG/RXQTl8BbimXQitN+pJJ3IW/0u95azcFVOxtRNV2gNyalSv
QDdnn0dWu/r1DJ73Fv8P8iH4mthmIXk39r3ecpNNPt0p7ZZmqFke9jY/1XMh
rVG1qmfqXSt4621ntbvaAe3CcDorzUizGgWrsjYDzUI1qbYKbG55uyO6K12J
xVLMPaHtmHZNO6xdvsHZSm87p93r8tY79bATvsxbbarxIvxmbPoz9OdxYjPW
rOVDvrZ566XmfQDe5G1+ms9p+GxsGjI281nwV4nJG5BHA6tJtakH6oXO6Kxm
vFk7FtostFPaLe2w5A/IEee/eostvXZ9LDDfmulr7D8nFlsxJxK7I7orurM7
IpuJ+qWcT8Eb0vNT2DfC5wXmS//mBLbTiqeamyLr0WTa7+r0DdJbpDdCb0XB
W67aqSfad/QtGeupep+PrV7Ff0mtZYHdXb1xi+GfEpM1n4/wuYHtt3JSbksC
08lGZzUjzUr9G8Df+sBqUf2axa7Q5qt9rdV76M1WOZWif5fYXVAM3aX/oja+
+g==
          "]], 
         PolygonBox[{{3599, 1871, 1881, 403, 2610}, {2702, 677, 1870, 1950, 
          2701}, {2311, 403, 1908, 1982, 2909}, {2904, 868, 2067, 1970, 
          2861}, {3328, 2039, 1981, 868, 3329}}]}]}}, {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwN0LsrxXEYx/HnWFwOx2JWUia3TilC/gIDpSwMbrkUi2LAJhOhWBTlOrgP
ZyITKcNJue4mlxKDEa/h3ft5vs/n+3x//cp6xtpHExExjkQqIqcoIpuMuMcd
vvIj6gsjktxq1u6sDSd5EWsFEcf8Z/6LafMpvMu+8weO8IRLuXP5K37WH2NO
7oW/edr9de61uw/9uNCfmb/hFRv6Rd6XPcApTnDtbNNsmbd41tmSeo8f9dv8
wLuc8f6M2bC+WT/CLTzATTzEDTzIjTwpX+m7f1CNBcyj2L9Kc6vvvEGufBeH
3Ql0qDtRhXHZT7tW7ZpQL3Cp8xJ1xr1yrkBWvcLLOJJJcx1aZBu5Ht3YMfu2
r0Zda9bBt9485BS2kcQ/2RxCyA==
          "]]},
        "0.03`"],
       Annotation[#, 0.03, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0L8rBHAYx/GHieNuYTVQNr8upG64mXOczpUSi1+3nUEpkUk2g2Jzg7Bc
TGTwH0jXYfNPKIMkitcN797P83w/z7e+396VzWKlJSLKaE1FFJMRyfaIekdE
ihuc4Bd+xTNKMvOotUXkEhHTWJf5MvvGD6bM/vgXq+o1HMpsNLN4sLvbGXFm
VuUq73GFa/wms885uXF1Hgf6GT6XKfCVfpbvZeY5qy9x2XmRM/o5TmAUO3Kf
PIhJmTR3y4xwwbvyeMQTlrCIWzslXsAAtvzRu51T8231EfeYd6nv3NnH/air
T/gYNzJpHkNWNsMTWMalsw/3DamHm3/LDX92zUlcIIF/fdI0sA==
          "]]},
        "0.02`"],
       Annotation[#, 0.02, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwN0L0rBHAYB/DH5twxkEKWK5u8FJ0MyuRMx7lcicUNRorM3gYGgyIvA4lJ
TMdAsWCUPwH/gBgkXZHP8Lnv7/f8nue57tKlubHZqoiY4araR11Erjbij1FG
yJNKRBzJO7mXiriVh+6PNRH3PFBW+1b7ocK6fbt6l/l1X5FLrLHKm/59ecB0
MqLEtZlju25kRvaxwDxfall7hnkx88qG2rh7kRbzzTRRUU+ayZOglw+1RjNZ
35vVMyQb3Lu8nXnLqQ0yyQRltYIs0s68/+Zd/476ovOmbFWvd760Ky3beHLe
lltc6OmWPQzo7ZcZpjj19mlfh3Ont4J89jvOZYoTEvwDt9g2CA==
          "]]},
        "0.01`"],
       Annotation[#, 0.01, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwNz7cvRWEYwOGPQXS7icQkerk6kQi5xMBg0AkLiV4mFpPJIEwGDIi/QO/d
KkajycIkQuIZnrzn/Z3znXNv5uB4+1hMCGGRwfgQ5nlODuGJupQQahnQ5njU
HqjRqunXZrnX7qjSKunTZrjVbqjQyunVprnWrijTIvRoU1xqF5RqJXRrk5xr
ZxRrRXRpE5xqJxRqBXRq4xxrR+RreXRoYxxqB+RqObRqo3wlhvDJelIIa7Ro
w0QS/Baa2fR81Izqe57ZYZ83e5qzP9zZ72kkyp57v87smn++26Bdc8qsPY5E
su2x5ge/rrtSQ1h15t2eZV+xL3PsXelmBi+ul8wFJqmniWrP55jbzo+YG+a3
9wy5jrjXZr76L/vmFvH8AzHKQ/w=
          "]]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0klIVXEUx/EjIaWmi1o1SIQFSVBuXLURpAHcVJusXQ5B0LRw6UJColVm
iyyf5XsOiZuKqESRHBdRYROBtUlNCwoFS4t4Qn3u4sv3/M7/nHvvu/ftrLl4
/EJORDzC/Y0RD9BTEDHAvbySH9HNXTi5ISLNGdxBJ+6iWj/FHbiFdtzGCf1G
+8d4geeRzoso5u2oL4w472w3P3W/Ut6DOpzTr+Un+l/Uu9Rldmv4NB7rz+mX
qPfpj/B+nuOfmHXW5B4z/FLepJ5Fi/qmuS28FdvQJg/xN3zFOzujZt/yqryM
FfzCZ7NLPM4P+SM+4Zn5EUzqd8sT3MNvXGNK/zV+663isLrD859xNmwmpf6e
7DtrT94/j8nrvMN/3Ctf0Z8yP51cizcnz6TfbOaFPC9flwe5lRe4hbt4jDM8
yotc6hr99hbt9fESF+m9co9CzuIvnjvLtXOQj6AKWfme+TWzlfI4htEg5yIv
+Y5yDv9AVn2qKOJG8h+QS+Rr8lUMJd+Bd+C9+jI34hIqcAgHzO/ljP2znOI/
rlOrLnd2lD/4Tf2cxnr8B4ZzcdM=
          "]]},
        RowBox[{"-", "0.01`"}]],
       Annotation[#, -0.01, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0F9ozXEYx/HvpDU2buyvZts5ZNquSK2WUljhwmp3btAuGGWzKS6G2Y0l
5s9MygXKvyMuyKbWUhabv6u1FLWLNYb9EzYOJvL6Xbx7P5/neX7P75xfrLqu
qjYlhDCAVfNCeLQghB7cRzI9hJn5IUykhXBBvdJ8hn/gO8b1T5qP8Sv7S9Uf
cUN9EyUoxSfzE9GMi/g9FuOD3MijnMfvcN3+U+9ZzsU4rrdGzuFlGSFkc6X9
S+pe/QT38YB+OWdxTC+Tt9hLuPEQtzCltwjF9rbLO1BktxCbcFTe5ZkR8ze4
ZvcqytT55kuwx85uVOnVcIVeE9fLj3mD3MnrOcbD7sWj9+C0b5bPZzhu/wt/
5jbv+G3vhdlG9U79U+rzZtmcg9zoObOzaNevd/8cN3Ct3nPzZ+iI/qd+Hg64
cxB9btfYm1bfxT2kYA6OmD3gv9zJHQhIyl/5G4bc3+f5Vrfb3M3kLLSbvbVX
oC6M3itPYpv6pf4xdaln92JK7udJvq1/B7/kfncP6WWoD/MT/V789J5U/MNm
eZb/2J3FOrkH3dgvz0UaVkS/nSeiPfXWhb6Xm6NyXG6VW9DlVi4XYFDdzI2o
w1pUoNx+CV+Jvh1f5KQ71erVZpX82v9M8GWk4j/5VXeC
          "]]},
        RowBox[{"-", "0.02`"}]],
       Annotation[#, -0.02, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV009Mz3Ecx/FPkxFluYiZLP8iM4ccajYrWkzEaggXfzYxKsxqNZtW8if9
sRmTg3Dxt4NMujAHhguSDHMwZoZp62BpQx6fw3PP9/v1fn8+v+9338rYUVVS
mRBCGMKG8SFkTgjhI+ZjUVIIc3lJcghzuNT8svqp/Do/4355Ac/ixbIMLrHX
qb6E92avZH3IV8/khfJ0Xm/vRkoID3ATg7LpyLI3NT4Dd3AtzuMc7mG3c1/M
3qJHfxdL1fPcm4nZKEUJjrq3CZ/NP2HAbh3f5tz43HbKuMLOJt7HjWhAjf4R
P0YPiuz+cC5HXsONqEbKxBCSsdp8o9leu2fllbJ22S1ZIa/EKlw1Oyi7wkfQ
4H3a5OPs9/Eps1a+FnfiPrfwfXup9icjTbbZ72zBS7MXqDffGu/k5/pE953i
ZqyL78YV2BMzfbOzCfG76Kv0ebyfl/Mabjdby9P0xVxufxdOuDeVj3NR/Fbm
teo0nhLvd+6JZzgsO6SeF8/KP6hXYNjsAP/mwvjN7TWr89Tv1Pn8R/+e7+i7
nO3mAeTIdpp1y76qs90deJTbzFtxEoP4iSZkmafH9+fv3CUbcsdw/B0UeZd/
nGQ2gjPmr823yd5wr/5vnPnNfHWiulb9UH1BXa0eE79f/PuTjeKbeoTLJoVw
2h2f4/+GvkV/DL3OpfEM9KnruQ6VWIYC5NpfwJ3Ol3MH/3LPdnW2WTH3e/ar
fBFj8R+xEoAp
          "]]},
        RowBox[{"-", "0.03`"}]],
       Annotation[#, -0.03, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV02loz3EcwPEvm7nnTHKUpS2EHBFpuR+QFRrDmNsYNjmyYe5jI2FTNqGk
ljOU2hyFB7REyRjbHCUJpRRqJfL6Pnjv/bl///9+W8qygtn5LUII3f3IbBNC
WrsQPuAdunQIYXDbEEbxaIzESixHaccQ8sx/1W/CXfO3MVk8TH84hmIZluKg
+TXmP+s3oN7sPq7hCTzETA5vNreQN3KO2hbeLX/Mi+Q1sc/f7Y1X7yweyKfl
2VzIC3iQ+inxTvEn7EK2WjHP4R08j0vMdGvvuyJVPl99g2fkY6NaAbfHdXNF
ere4kK/xQXQykxzn7DbiqN5JvskX+AaX80Pffb/5DPEBzlTfy23t7uEt8fdh
pky/Hlc98xVvivf0Csw90M9Xay2/iEt4on+FL8cb4uP6J9DKfFK8bWeh3ku1
OlS6e8VcBb+QH+HauK/2Mt7kR5yARPSUJ3GeW2uRK+5lb6b6Ovks7i0PXMpV
vFu9RHwI5eZrfYZkz9mnXhzvqOehQf28fiO35Fy9u+IPfI+T7LwXr0YPd9/x
ivg+uVd817wN2zE/vneUxvfKJbzKM2a4M0n+FVOQqj6V+/M53oCzOBN3zTa6
1YQ36GzmLf9Rn6u/WFyPTupZPttr8XX81i+Of2sYh7F4ppbOT7mr2cPmUux9
4768Vm+73kS9H1yZHMJPniafjr/6bcw1o8xOnd5itVdcLb+D6XYS9Lf6noW4
r1Yp7yDuopcm/4cv8mbOUjtm/6O8n/yI/ACq7fTgPnge/1e4COuRjskYY34A
n7O/iiv4lztLxCP0MviFz13FZ5GI/z1ckdo=
          "]]},
        RowBox[{"-", "0.04`"}]],
       Annotation[#, -0.04, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV00lIVlEYgOHTRKapaVoLKwuKitoUgRBN2ECRNKtNjhU02UCzgWHYgEoQ
pUYDrmyVVgZJQQYGhVlEqwqHtKhsk1KLVg3PXby+33TOPef+1ynFBzccGBJC
mODPjlEhDMaGMIAeLJcnjw5hFmdwMZ+OD6GI23in2jlxP77hnTUV/Jgzea5+
IZeaLeCTfAoXcQHxKDRzVm9fQgjlXCCvtH58XAjjMFuep37C7BEcUzvOo5Go
18KL9DdYv5AT1EqtTzWXghnyw2Zm8lH5ETyLCWGLfCs2IRc5uGDdeb1kM2Nw
GIfQptakdw+nPeMOP0AzzunlR/fmbnvUoAuNntnJl8x36L9Ch/gltyMGa/TX
IgvrsQ4bzUzibI7x7FjEIc/8B/X3uGnvu9H7ju7EDXqJarXeQbW8WtztPOV8
PNqHRyEWt832c6P6dW7iGzyEa7kOV1CDq6hHu71+6XfhhfXP0am2m7t4BO9x
xlbxZ37KI637JC5BH3oxaP1X/oYzKMdZTFD/zv0oQ5r8C3dzT/QNRmd0t7Hc
ad/B6H5Ild/nlOhsPIAqz+7hj2hGH3rxT/2Jc/7lXC5GERZjp9oD77JfPM9e
8eKpXC8v4YO8nwfwA5vtl8TDeDhGINtMi30KnTsfTViuvgLLsNr5t3Me5put
0q/GAnFS9A3z5Og3MZfO29T2qpXac4k4E9f0fsqzxEvxGuvscRkTxe/06sys
xCO1VTw0+v9znxvcqnaN4+Rj9KbJ/0S/h/w356j1iXuRLq+UV+ChNamchjfi
Mj6J/ViATGSYn863nGEX10XfjH0KxHP0svitMzbwTQzDf2wSmGQ=
          "]]},
        RowBox[{"-", "0.05`"}]],
       Annotation[#, -0.05, "Tooltip"]& ], {}, {}}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0, 8}, {0, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.885556103400816*^9, 3.885556125010607*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"92f086a5-b745-45eb-86d5-b5c39f06e38a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "x", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       SqrtBox[
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
             SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
          RowBox[{"1", "+", 
           FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", "\[Sigma]", 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}], "3"], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], "==", "0"}], ",", "x"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.885657281930806*^9, 3.885657302348919*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"91d3082c-5d43-4edf-83f4-8f953c0444b3"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 70, 20, 31684940622056771425,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.885657306746251*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"6f64884a-f456-4b5b-aa62-be97efbf5fa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "\[Sigma]"}], 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       SqrtBox["3"], " ", "\[Sigma]"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8856573067578707`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"701e9052-5eeb-4d3b-a8bc-c1c1af1ad3a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"qNormalDistribution", "[", 
      RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], "]"}], ",", 
   
   RowBox[{
    RowBox[{"1", "<", "q", "<", "3"}], "&&", 
    RowBox[{"0", "<", "\[Beta]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[165]:=",ExpressionUUID->"fe00d830-918d-4e15-bd5e-9e66f5eccfad"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
       SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], 
    FractionBox["1", 
     RowBox[{"1", "-", "q"}]]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.885568483793964*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"6c421b10-1bc0-4268-8356-eb5db80a9f15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"qNormalDistribution", "[", 
         RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"1", "<", "q", "<", "3"}], "&&", 
       RowBox[{"0", "<", "\[Beta]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.885657404476143*^9, 3.8856574045380573`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"9df472b8-1c7f-47dc-80b8-f829424bf8da"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Beta]", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
       SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "q"}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "q"}], ")"}], " ", 
      SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.885657407529377*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"962fca82-bafc-491b-a293-facf3351d1ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         FractionBox["1", 
          RowBox[{"1", "-", "q"}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "q"}], ")"}], " ", 
          SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]], "==", "0"}], ",", 
    "x"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.885657421562491*^9, 3.8856574420658197`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"35976ee7-e520-4ab1-b24f-6bcf85567386"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox["\[Beta]"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "q"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8856574325747423`*^9, 3.885657443598144*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"b0896657-09ea-4d52-9992-6453f9128251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"qNormalDistribution", "[", 
         RowBox[{"0", ",", "\[Beta]", ",", "q"}], "]"}], ",", "x"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"1", "<", "q", "<", "3"}], "&&", 
       RowBox[{"0", "<", "\[Beta]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.885567340333276*^9, 3.885567349028631*^9}, {
  3.885567573386516*^9, 3.885567625238797*^9}, {3.885567667243511*^9, 
  3.885567667336487*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"64417795-128a-49fb-9fff-dc5753ff1f58"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "q", " ", "x", " ", 
    SuperscriptBox["\[Beta]", "2"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
        SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "q"}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "q"}], ")"}], " ", 
       SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.885567351268633*^9, {3.8855676453778343`*^9, 3.8855676689279737`*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"cc4db2ce-22cd-491d-99d9-54c8870bed5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "q", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
            SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          FractionBox["1", 
           RowBox[{"1", "-", "q"}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "q"}], ")"}], " ", 
           SuperscriptBox["x", "2"], " ", "\[Beta]"}]}], ")"}], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
       RowBox[{
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]}], "==", "0"}], ",", 
    "x"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.885657465832296*^9, 3.885657488236175*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"025aa577-34c9-46c9-8170-3ace986ccbbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      SqrtBox["q"], " ", "\[Beta]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
     SqrtBox[
      RowBox[{"q", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "q"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "3"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.885657489515634*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"76b936e2-7049-46f6-9f50-0921a6bd97c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"%156", "/.", 
    RowBox[{"x", "->", 
     FractionBox["1", 
      SqrtBox["\[Beta]"]]}]}], ")"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.885567682466316*^9, 3.8855677031462193`*^9}, {
  3.8855687275879097`*^9, 3.885568739005035*^9}, {3.885568900719604*^9, 
  3.88556893668367*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"08aff83e-5a48-4b98-b02e-b44d916705fe"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", 
    SuperscriptBox["q", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "q"}]]}]], " ", 
    SuperscriptBox["\[Beta]", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.88556893759798*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"57a2c952-dbee-444f-ab9d-7e0344dc7708"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", 
        SuperscriptBox["q", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          FractionBox["1", 
           RowBox[{"1", "-", "q"}]]}]], " ", 
        SuperscriptBox["\[Beta]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}]], "]"}]}], 
       RowBox[{
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}]]}], "]"}]}]]}], "/.", 
     RowBox[{"q", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "+", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}], ",", "1.5", ",", "2", ",", "2.5"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885567751817438*^9, 3.8855678755447407`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"d9ac8792-fc0b-4c32-9517-6c8be885ed23"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
lVm25L8k8wP3
       "]]},
     Annotation[#, "Charting`Private`Tag$1004860#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1004860#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0HssFAAcB/DrdubY6RynPPJKirBlF2N5xKl1i1lKM4+cKyebJUtKYjjk
ldcpUacmr+OyaqlJ3hPu7IThj9zNyt2FWtFJ53DV1n6/3/bbb5/tu+8fP3tO
clg8kUAghPzdf1c0HbX9qLbLn/B/HggaemrZb8F5CUuZ9w91g6O1aTvlne/A
FIcqXe5kH9jTezH7FWkIfK/QklfnMwZu4w8xGbNT4FPJJwqUTgtgDx/fgfBU
JfjDcvOs05Ov4P4Nm4TV1lXwzN2jZY9H1WC1lH0wwOU3eJnwvp2epQULTl6P
7qrZAT97aN3ntEk4DnlBU7yshAiuMhcT281I4L4v6RFr/XpgyaCU2RCqD45e
61BJdGRwRJ1L7u5WQzAjOORlF4MC5p/drJMvGIEnLwVbJKVQwWIFvbWr0hjM
mZnsHePSwEusOLsyNxPsT/S8QNUzBScZyZVBUvTHb9PLBXw6mJJOleQnmoHd
iqx/ebnvARsHpWy3GuwFOx8zzXaUo93f3Ak532gO3pIFbDAzLMCvi6QrCqYl
uDlFGFVNtsL/kMQtOhlaY9XjZ9u0DxwjX3+hvW0Nfu6462rpSRuwtzBS6Eyx
BefNaXp5n9Cxw51UVrgd9qXSOjoG0GkB9GJLV3uw/pnsEnY5WuNB1ZK0aE6M
fgUvdj9Y2dDMIQ+ix3suP11xdQA7W1UbCCvQbaKweG4V2tWPNuBQjT4SV3az
vgbt2VKo4tejAxmZw1kidORpbs65UfT8/AEZTYyOufLZa0KCZleyf7Am0Ny5
yFj/WfS1i6G+hxfRarVRrUqBTisYVzeq0LeELJHtCjr7O9PKbA1NzCHemPqJ
5pkMTJWvows8/IoNNWjyyJZiZBNdFNEdkL+FNlxOFwTuoEszvDQ6HfoPVscZ
/Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$1004860#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4KsjMu6pTjQy5bzBokBA4P6idHaBC438FwmXQnk=
       "]]},
     Annotation[#, "Charting`Private`Tag$1004860#4"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 10}, {-2.920222539909996, 35.13828269474271}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.885567854369879*^9, 3.885567883455291*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"4fe967ae-1e56-4e0e-af52-2d61e35c8756"]
}, Open  ]],

Cell["\<\
Simplification of Inflection Point (value at which 2nd derivative is zero)\
\>", "Text",
 CellChangeTimes->{{3.9174194990982857`*^9, 
  3.917419526669595*^9}},ExpressionUUID->"7d9f7566-959c-400f-8c58-\
0b7204d03181"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SqrtBox["\[Beta]"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox[
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "q"}], ")"}], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.917418744656225*^9, 3.9174187477624063`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"06251c6e-e862-4be9-b51f-fa741fe6bce7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Beta]"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
    RowBox[{"1", "/", "4"}]], " ", 
   SqrtBox[
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "q"}], ")"}], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]], "Output",
 CellChangeTimes->{3.917418749522727*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"b06a5981-47a1-4916-8f69-cc21ca2d25fb"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{" ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "3"]}], ")"}], 
    RowBox[{"1", "/", "4"}]], " "}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "q"}], ")"}], 
    RowBox[{"1", "/", "4"}]], 
   SuperscriptBox["\[Beta]", 
    RowBox[{"5", "/", "4"}]], 
   SqrtBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "q"}], ")"}]]}]]], "Input",
 CellChangeTimes->{{3.917418786368389*^9, 3.9174187928873463`*^9}, {
  3.9174188476361103`*^9, 3.91741886444068*^9}, {3.917418907278535*^9, 
  3.9174189304770393`*^9}, {3.9174189801242847`*^9, 
  3.9174189867385187`*^9}},ExpressionUUID->"c010d63d-344f-4770-a44a-\
d2ad088fbe5d"],

Cell[BoxData[
 FractionBox[
  RowBox[{" ", "1"}], 
  SqrtBox[
   RowBox[{"\[Beta]", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q"}], ")"}]}]]]], "Input",
 CellChangeTimes->{{3.917419016957671*^9, 3.9174190751528597`*^9}, {
  3.9174193438435707`*^9, 
  3.917419351218801*^9}},ExpressionUUID->"605d6e80-5861-4969-96dc-\
8b696fb6617b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{" ", "1"}], 
   SqrtBox[
    RowBox[{"\[Beta]", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q"}], ")"}]}]]], "==", 
  FractionBox[
   RowBox[{
    SqrtBox["\[Beta]"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox[
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "q"}], ")"}], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]}]], "Input",
 CellChangeTimes->{{3.917419116262136*^9, 3.917419122601709*^9}, {
  3.9174193549478607`*^9, 3.917419359368972*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"28640a6c-e8a3-4aad-bd3a-7cd2a7c082ae"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "q"}], ")"}], " ", "\[Beta]"}]]], "\[Equal]", 
  FractionBox[
   RowBox[{
    SqrtBox["\[Beta]"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox[
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "q"}], ")"}], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]}]], "Output",
 CellChangeTimes->{3.917419123704879*^9, 3.917419361020699*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"9c0cc83d-3774-4de4-a4e1-ba026c7a5c69"]
}, Open  ]],

Cell["Simplification of value at which third derivative is zero", "Text",
 CellChangeTimes->{{3.917419539428153*^9, 
  3.917419562402948*^9}},ExpressionUUID->"255d13c0-a30c-4fb2-90ca-\
a1122ded896e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{"3", "\[Beta]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}], ")"}], 
    RowBox[{"1", "/", "4"}]], " ", 
   SqrtBox[
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]]}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "q"}], ")"}], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]"}]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}]], "]"}]}]]]], "Input",ExpressionUUID->\
"2f2eff6f-771b-44dd-997f-713ff998fc1e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["3"], " "}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "q"}], ")"}], " ", "\[Beta]", "  "}]]]], "Input",
 CellChangeTimes->{{3.917419580813833*^9, 3.9174196335329523`*^9}, {
  3.917419681391814*^9, 
  3.9174197171938868`*^9}},ExpressionUUID->"bdf341a2-00bc-4c01-b523-\
f6f65f30751f"]
}, Open  ]],

Cell["Role of alpha - curvature at x = \[Mu]?", "Subsubsection",
 CellChangeTimes->{{3.900299790621896*^9, 
  3.900299808875289*^9}},ExpressionUUID->"6e3b62f7-955a-4462-8130-\
3d2c2b376db6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of Coupled Exponential", "Subsection",
 CellChangeTimes->{{3.885658340339217*^9, 
  3.885658347674683*^9}},ExpressionUUID->"72a8e02c-2b93-4847-8ec9-\
b0c047305e42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"domain", "=", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFRange", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]], ",", "1000"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFValues", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledExponentialDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "#"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        FractionBox["\[Sigma]", "\[Kappa]"]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerValues", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"x", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"CoupledExponentialDistribution", "[", 
               RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
              "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledExponentialDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}]], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"0", "<", "x", "<", "\[Infinity]"}]}]}], "]"}], "/.", 
      RowBox[{"x", "->", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         FractionBox["\[Sigma]", "\[Kappa]"]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledExponentialDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "PDFRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"\[Sigma]", ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  FractionBox["\[Sigma]", "\[Kappa]"], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*FractionBox[\(\[Sigma]\), \(\[Kappa]\)]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    FractionBox["\[Sigma]", "\[Kappa]"], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "2.5"}], "}"}]}]}]}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          FractionBox[
           RowBox[{"x", " ", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"PDF", "[", 
               RowBox[{
                RowBox[{"CoupledExponentialDistribution", "[", 
                 RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
                "x"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"CoupledExponentialDistribution", "[", 
              RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
             "x"}], "]"}]]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "DerRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<df(x)/dx\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]", ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", 
                   RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["\[Sigma]", "\[Kappa]"], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*FractionBox[\(\[Sigma]\), \(\[Kappa]\)]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["\[Sigma]", "\[Kappa]"], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", 
                   RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "2"}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]", ",", "1"}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881100128501431*^9, 3.88110013280828*^9}, {
   3.8811001746212187`*^9, 3.8811003125183163`*^9}, {3.881100359125701*^9, 
   3.881100391216311*^9}, {3.881100440401959*^9, 3.881100511440146*^9}, {
   3.8811006142330523`*^9, 3.8811007584344597`*^9}, {3.881100813299799*^9, 
   3.8811008329318867`*^9}, {3.8811009761527863`*^9, 3.881100986240885*^9}, {
   3.881101171717436*^9, 3.8811011958446503`*^9}, {3.88110126967766*^9, 
   3.881101378766934*^9}, {3.8811014197138042`*^9, 3.881101470137429*^9}, {
   3.881101513783824*^9, 3.8811015266973333`*^9}, {3.8811016213820057`*^9, 
   3.881101645063546*^9}, {3.8811017726496162`*^9, 3.881101775165063*^9}, {
   3.881101838728846*^9, 3.8811018415913*^9}, {3.881102058697577*^9, 
   3.8811020658974247`*^9}, {3.8811020961477413`*^9, 3.881102097283677*^9}, {
   3.8811024496395206`*^9, 3.881102512978949*^9}, {3.881102604344492*^9, 
   3.8811026151008177`*^9}, {3.8811026588487864`*^9, 3.881102660459358*^9}, {
   3.881102765909773*^9, 3.88110277293682*^9}, {3.881103017541745*^9, 
   3.881103042165785*^9}, {3.881103368509575*^9, 3.881103368568424*^9}, {
   3.881103537419341*^9, 3.881103567430234*^9}, {3.881103606514262*^9, 
   3.88110361089336*^9}, {3.881103841724616*^9, 3.881104035730578*^9}, {
   3.881104089052025*^9, 3.881104091061489*^9}, {3.881104155309367*^9, 
   3.881104159915003*^9}, {3.881104232307646*^9, 3.881104234851286*^9}, {
   3.885145668710247*^9, 3.885145674570279*^9}, {3.885145835851491*^9, 
   3.885145861442034*^9}, 3.8851458975761423`*^9, {3.8851462376937113`*^9, 
   3.885146247005601*^9}, {3.885146278844803*^9, 3.885146281050338*^9}, {
   3.885146356382719*^9, 3.885146399555936*^9}, {3.8851464482518587`*^9, 
   3.885146479728002*^9}, {3.8851468717533407`*^9, 3.885146984975891*^9}, {
   3.8851470415443153`*^9, 3.885147131706245*^9}, {3.885147191833992*^9, 
   3.8851471927224293`*^9}, {3.88514722286096*^9, 3.885147313371127*^9}, {
   3.8851474437450123`*^9, 3.885147445031027*^9}, {3.885147502497591*^9, 
   3.885147531494525*^9}, {3.885147572855035*^9, 3.885147573166093*^9}, {
   3.885147648183681*^9, 3.885147671087173*^9}, {3.885147763992936*^9, 
   3.8851477903907824`*^9}, {3.8851481072181597`*^9, 3.885148187908036*^9}, {
   3.8851482451490107`*^9, 3.885148248081468*^9}, {3.88514836258892*^9, 
   3.885148403417306*^9}, 3.885148439104628*^9, {3.885148524444862*^9, 
   3.8851485252570047`*^9}, {3.885148575615932*^9, 3.885148651142852*^9}, {
   3.885148698929248*^9, 3.885148711277014*^9}, 3.885149052638982*^9, 
   3.8851491699686537`*^9, {3.885149236558316*^9, 3.885149238181747*^9}, {
   3.8851492850859413`*^9, 3.885149304358575*^9}, {3.8851493530730333`*^9, 
   3.8851494565522757`*^9}, {3.885149900708228*^9, 3.885149927415313*^9}, {
   3.885150023053043*^9, 3.8851500698419247`*^9}, {3.885150151242325*^9, 
   3.885150155280498*^9}, {3.8851503340909*^9, 3.885150376628426*^9}, {
   3.885150480951005*^9, 3.885150488508451*^9}, {3.8851509663648043`*^9, 
   3.885151043753997*^9}, {3.8851511605739307`*^9, 3.8851512736444893`*^9}, {
   3.885185201698551*^9, 3.885185208735071*^9}, {3.885185567282577*^9, 
   3.885185567901623*^9}, {3.885185669571903*^9, 3.885185689294176*^9}, {
   3.885185810549407*^9, 3.885185816113462*^9}, {3.8851858833371277`*^9, 
   3.885185934991125*^9}, {3.885185972153462*^9, 3.885186017588564*^9}, {
   3.885186070072124*^9, 3.8851862042221003`*^9}, {3.885186245748827*^9, 
   3.885186364771111*^9}, {3.8851864019326963`*^9, 3.885186430637042*^9}, {
   3.885186518831053*^9, 3.885186551021462*^9}, 3.8851869402980957`*^9, {
   3.885187177166107*^9, 3.8851872212851152`*^9}, {3.885187318396853*^9, 
   3.885187345546852*^9}, {3.885187383630319*^9, 3.885187435423347*^9}, {
   3.885187515831841*^9, 3.885187560537628*^9}, {3.885187600673565*^9, 
   3.885187630487739*^9}, {3.885187748423316*^9, 3.885187780154642*^9}, {
   3.885187851418582*^9, 3.8851879472611923`*^9}, {3.885187998499823*^9, 
   3.8851880600558*^9}, {3.8851880932798243`*^9, 3.885188107265744*^9}, {
   3.8851881541606703`*^9, 3.885188199977947*^9}, {3.885188286349166*^9, 
   3.885188289137907*^9}, {3.885188329662655*^9, 3.8851883448553047`*^9}, {
   3.88553399578439*^9, 3.8855340421155148`*^9}, {3.885534638832657*^9, 
   3.88553465058669*^9}, {3.8855347233052187`*^9, 3.88553481008349*^9}, 
   3.885534850758347*^9, {3.885535091324885*^9, 3.885535119487836*^9}, {
   3.885535479360141*^9, 3.885535531442617*^9}, {3.8855355792209873`*^9, 
   3.885535597672271*^9}, 3.885535633785018*^9, {3.8855357224375477`*^9, 
   3.885535805228004*^9}, {3.885536310497335*^9, 3.8855363259402447`*^9}, {
   3.8855363746187277`*^9, 3.885536392047887*^9}, {3.8855364998425903`*^9, 
   3.88553654071001*^9}, {3.885536600395667*^9, 3.885536602857518*^9}, {
   3.885536751980774*^9, 3.8855367971852427`*^9}, {3.885536831890212*^9, 
   3.8855368724254103`*^9}, {3.8855369377775497`*^9, 3.8855370719995003`*^9}, 
   3.885537177075563*^9, {3.885537262061028*^9, 3.8855372758419228`*^9}, {
   3.8855373097031612`*^9, 3.885537420271719*^9}, {3.885537510016234*^9, 
   3.885537511624548*^9}, {3.885537546759593*^9, 3.8855375699910183`*^9}, 
   3.885537775603609*^9, {3.885537816554007*^9, 3.8855378166281853`*^9}, {
   3.8855378474497232`*^9, 3.885537885999897*^9}, {3.885537971912609*^9, 
   3.8855379975441313`*^9}, {3.885550129171794*^9, 3.885550170271324*^9}, {
   3.885550205744316*^9, 3.885550268302496*^9}, {3.885550305589573*^9, 
   3.8855503155715647`*^9}, {3.885550766060876*^9, 3.8855508274775343`*^9}, 
   3.8855531405405807`*^9, 3.885553175978547*^9, {3.885555348023698*^9, 
   3.8855553487078133`*^9}, {3.885658375603215*^9, 3.885658384294821*^9}, {
   3.8856584312062674`*^9, 3.885658565007934*^9}, {3.88565868092283*^9, 
   3.885658702009655*^9}, 3.8856588987764874`*^9, {3.8856589714938297`*^9, 
   3.885658980527309*^9}, {3.885659022535187*^9, 3.885659030630262*^9}, {
   3.8856590762583313`*^9, 3.885659083073547*^9}, {3.8856591202218857`*^9, 
   3.88565912113538*^9}, {3.9000641330471563`*^9, 3.9000641348494043`*^9}, {
   3.900064171697391*^9, 3.900064176353356*^9}, {3.9000642109575853`*^9, 
   3.900064225268332*^9}, {3.9000645578879957`*^9, 3.9000645754641438`*^9}, {
   3.900064797792548*^9, 3.9000648285632277`*^9}, {3.900065520245582*^9, 
   3.9000655627628937`*^9}, {3.900065594504624*^9, 3.900065612433762*^9}, {
   3.9000656460962133`*^9, 3.900065647726491*^9}, {3.900065693245717*^9, 
   3.9000656932838287`*^9}, 3.900065733035207*^9, {3.9000657967120667`*^9, 
   3.900065799110155*^9}, {3.900066738852257*^9, 3.900066764844225*^9}, {
   3.900067211199725*^9, 3.900067213795179*^9}, {3.9000672965395613`*^9, 
   3.900067299307585*^9}, {3.900067927342671*^9, 3.9000679424868937`*^9}, {
   3.9000679752358027`*^9, 3.9000679849233017`*^9}, {3.900440692533971*^9, 
   3.900440701790277*^9}, {3.900440834744524*^9, 3.900440855358749*^9}, {
   3.9004409305507717`*^9, 3.9004409540816717`*^9}, {3.900608562000152*^9, 
   3.900608562021961*^9}},ExpressionUUID->"8e875cf2-46a3-42c0-9f94-\
9e2ce96b97ce"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Kappa]$$ = 0.5, $CellContext`\[Sigma]$$ = 
    100, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]$$], 2}, 
      Rational[1, 1000000], 5}, {{
       Hold[$CellContext`\[Kappa]$$], 1}, 
      Rational[1, 1000000], 5}}, Typeset`size$$ = {750., {126., 133.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Kappa]$$ = 1, $CellContext`\[Sigma]$$ = 
        2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`domain = {0.001, 10}; $CellContext`PDFRange = {
         10^(-4), 1000}; $CellContext`DerRange = {-2, 
         2}; $CellContext`PDFValues = Map[PDF[
           $CellContext`CoupledExponentialDistribution[
           0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], #]& , \
{$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$}]; \
$CellContext`DirValues = ReplaceAll[
          FullSimplify[$CellContext`x (D[
              PDF[
               $CellContext`CoupledExponentialDistribution[
               0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 1}]/PDF[
             $CellContext`CoupledExponentialDistribution[
             0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x]), 
           And[
           0 < $CellContext`\[Kappa]$$ < Infinity, 
            0 < $CellContext`\[Sigma]$$ < Infinity, 0 < $CellContext`x < 
            Infinity]], $CellContext`x -> {$CellContext`\[Sigma]$$, \
$CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$}]; GraphicsRow[{
          LogLogPlot[
           PDF[
            $CellContext`CoupledExponentialDistribution[
            0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 
            Part[$CellContext`PDFRange, 1], 
            Part[$CellContext`PDFRange, 2]}, 
           PlotRange -> $CellContext`PDFRange, AxesLabel -> {"x", "f(x)"}, 
           Epilog -> {{Red, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$, 
                 Part[$CellContext`PDFValues, 1]}]], 
              Text["\[Sigma]", Log[{$CellContext`\[Sigma]$$, 
                  Part[$CellContext`PDFValues, 1]}] + Log[{1.5, 1.5}]]}, {
             Orange, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$, 
                 Part[$CellContext`PDFValues, 2]}]], 
              Text[
              "\!\(\*FractionBox[\(\[Sigma]\), \(\[Kappa]\)]\)", 
               Log[{$CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$, 
                  Part[$CellContext`PDFValues, 2]}] + Log[{1.5, 2.5}]]}}], 
          Plot[
           Evaluate[$CellContext`x (D[
               PDF[
                $CellContext`CoupledExponentialDistribution[
                0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 1}]/PDF[
              $CellContext`CoupledExponentialDistribution[
              0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x])], {$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`DerRange,
            AxesLabel -> {"x", "df(x)/dx"}, Epilog -> {{Red, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$, 
                Part[$CellContext`DirValues, 1]}], 
              Text["\[Sigma]", {$CellContext`\[Sigma]$$, 
                 Part[$CellContext`DirValues, 1]} + {0.25, -0.1}]}, {Orange, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$, 
                Part[$CellContext`DirValues, 2]}], 
              Text[
              "\!\(\*FractionBox[\(\[Sigma]\), \(\[Kappa]\)]\)", \
{$CellContext`\[Sigma]$$/$CellContext`\[Kappa]$$, 
                 Part[$CellContext`DirValues, 2]} + {0.25, -0.1}]}}]}]), 
      "Specifications" :> {{{$CellContext`\[Sigma]$$, 2}, 
         Rational[1, 1000000], 5, Appearance -> 
         "Labeled"}, {{$CellContext`\[Kappa]$$, 1}, 
         Rational[1, 1000000], 5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {199., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.885658574397493*^9, 3.8856587044036694`*^9, 3.885658903466215*^9, 
   3.8856589841845713`*^9, 3.885659032804037*^9, 3.8856590894572268`*^9, 
   3.88565912256067*^9, {3.900063327881342*^9, 3.9000633295524673`*^9}, {
   3.900064116732236*^9, 3.90006413645345*^9}, 3.900064177791769*^9, 
   3.90006422668851*^9, {3.90006427793172*^9, 3.900064280984426*^9}, 
   3.900064577371299*^9, 3.900064801274371*^9, 3.900064831522603*^9, {
   3.900065631284477*^9, 3.90006564969936*^9}, 3.900065740559041*^9, {
   3.9000667910819263`*^9, 3.900066800558927*^9}, {3.900067215152021*^9, 
   3.900067239517291*^9}, {3.90006730245427*^9, 3.900067314227454*^9}, 
   3.900067945875313*^9, {3.900067987860034*^9, 3.900067996214666*^9}, 
   3.900439613762834*^9, {3.900440716797419*^9, 3.900440726427526*^9}, {
   3.900440859794424*^9, 3.900440867830184*^9}, {3.900440956427616*^9, 
   3.900440961740307*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"24439b25-3064-41ba-8113-e6d699879a93"]
}, Open  ]],

Cell[TextData[{
 "Determine derivative of log-log plot\n\
https://math.stackexchange.com/questions/2820920/how-to-find-an-inflection-\
point-maximum-slope-of-a-log-log-plot\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvemzFeUZ9vvWe86H8/H8C6dSlap8SVWqUqmTsionOckxlbHiS8WiDBWH
qNEQJEhwQAUkoAjIJPOoyAwiAioo4IAyo4zKaJhHmWcZ+vh7yLXy7Ka7V6/N
XnszXL+qBbt7dfcz9vNcfd/30+v/eqD9/3r4f/6P//E/Ov4f3/7zv+5/8meP
P37/063+z283/vhYx0f/+thDD/7qsX8+9NeHHv+/H/jfvt35P789tve3n//9
278TY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
MY3i+IkTybZt25OzZ8+1dFZuKy5cuJCsWr062b9//zXfffHlpm/b42yp63y6
ZGly6dKlUscePvx18lTnZ5Pf/O4PSc8XX6opvzcr33zzTTJo8JDk93e1Su69
/y/JqVOnWiQfr42fkMyZ+3aLpF3U15oCxo+HHvlbclerPyZ9Xu5flzRuNaiz
Bx9+pNnrjHG+bbv2Sau7Wyet72lTt3Tmvv1Ock+be8NY8+68+XVLJ48vN21K
Hnjw4VC/vfu83Ozpm6an7Biabvvm6vO3IufOnUs6dnoyueMnP0s6dOyU/OjH
d4T7+vF/PtHSWbvlWbz4k1DfzK38j5YRM96YmXR+tktp7cd9Q5uhBYrger/8
9W+TCRMnJX379U/++mjb6yrDzUK37j2Sdu07hLkKrYhWridXrlwJ41Lcftxr
3/nu95Jf3PmruqadRVFfS8M4QD75/PTndyaz3ppd+W7EqNHJyFFjKtsv9e6b
fP8HP6wcu3nzlvD3E091rmt5biV4Rm+JOrt48WKYL+kP9YS+R/mmzXijrunk
8fXXR0L6zHNl4f44f/58HXNlqtEUY2i67Zurz99q9B8wKIzz1D8cPHQoaEbm
VFM/jh49Gvov+m73nj3JxMlTKt/xNzaGshpRTJ02Pfn7Y/8oPAa7I+nWy6Z0
I3LmzJlKXTcXO3bsDGnOf+/9BvuXLV8ennObk6K+lgf6j3MWLvqgwX60IJ+Y
mW/OCvYizat8b51YGy1VZzw/1XvOPHjwYIvqREBX1KITaQuep03L0VRjaLrt
m6PP32pgk03fD1OmTksebduuhXJUDp41bmZeGTI09FWeb2K4N9Dtu3fvrvma
ly9fDrayWbPn5B6DRuDeq7ff9UZqn81brtq4Pvzo42ZLM2+Mawny+loRa9et
D/nv8UKvyj7GZtkZt2zZWtmPTwdfkLBOrB3rxPpindi0FI3vTTX2N9UYap14
/XR68unQFqPHjA06A/DJ4VvCDoN/H+1BbBdw/9zd+k8Vu+/kKVMr29Omzwh2
BXROl27dKzbKLl2fDzEB+LPHjB0X7JWMi+Nfn9AgL/gnOI77k+tgpxCHDh9O
nv9Xj/Ad55OGYinx21AOrsn3A18ZnGuLO3DgQPLRx4uTca+Nr9g/6I+UoznA
jkddUufkFf9yDHGD+AZjuO+2bt0W8hg/R33y6ZLk9QkTG9yXHEM9ZN2r7Tt0
DN+RNm3BNlB+7Je0IR/ipOS/Zv5X+1JvtAvnqq8ItocOGxGeO7gHSYf8wenT
p0Mf0PVJF7s10OZcj7p45915yX0PPBTyR7/jmGHDR4TrkW5a58mHzDW5xqbN
m68pM/2YY7gm1yA2cey4V4PvgfOwtS1Zuizs53uekYB+TlnwweKjV5liHyzs
2rUrtBf9ljwvWLgolINttTHXXvTBh5VYmdhWX1Q3S5ctq9TN7DlzK3VD3ujH
1ajW14rg/uEei22H6E35pGkXQf1u2769ss05xEBwH3IN6pXyx+S1Xdl6F9Qt
/ZOP7MXY1NlWTEVe/y4zvqUZNXps5Xv6t8Y75p5jx49XxlPS2/7VV5XzsOOq
n+j4eIyKdSJlV5noT8CzDmXluGqxftQbdUgeaffPP1+Te2x6zuQ+5v4gDc7n
Plmzdt1/y/Ht82v3Hj1DOTiPPIV76tXXctPI0olFYw4QR0sfIv98r3S4J2LK
zD+Q1gpF9x19grKRZ9JM+9b+vWNHpX34EGNKGakrtrlPiuqRZzCNN4xppKux
gfE/C+Y65j+Nr5yPTxXicYJ7gHGCfkKfo4+RH5WTvkU/zaLo2KL5l77Y5s/3
hXzx/YCBr1Su2dj7vJYxlPJTv6TDdegHMUU6scz4YZLQT2UjoD6ZJ+P7C33C
d9QtoK2oP/YBfYv+wzb3Jvc/40Ecb8M9Sduyj+tzjM6RFmSuZlvj34qVq8K2
5rZevfskz3XtFv7euPGL8N2xY8eCHqJNsX8y7jM2892kydm6b/Vnn4VYVo6h
LwJai23GpjTEqVCuap+yMdKMCegp0mMNyYoVKxt8TxswF8Vwv3OO7k/Kjc7l
vuLeiGPNWPvCtSlnGuqdeuT7devXh210Etdk7KcueUbgHlLbcW3qlnO4f/Q3
2jwGvUfe6Q9HjhwJfzPHcU3uYdpfsSbc6+SdeYHxlPJqPKA+JkyaHLbJF+Vk
ntOcF6fHMao/5mfynY7PZPzm/lffu7pW62woH/toD/JIfbE9fOSocB7jI/XN
PjTE+g0bwjjHtu4P6oA8qu2Z69gmTcrOsTwXkeaJEyfDfq7J+AfV6obvmWtU
N8uXrwj3S1qnNbavVYP25tw9e/eGbeY15gvKSL9THaT90HoWwXattouPKWq7
MvUeg04nP3HfQEOzr0z/rja+peF73QPMVYxFzO2Kz1z4bbszn6VtsYxRtDOg
L4NP/z8aUHWmPNEXySM+f+4P9ABloM3pI4yJaZuu0DjKMx3nki7tlkdaJ1Ln
qjsgTa4nzUv/1HOsxk3GbGmsLNI6sVqbYPdmm3uHMlDPnM/YlvaDlJl/INYK
1e47yorWoh9y76ouYmibdBuzZod7m2sW1SNlQsvE8x11QplJNwueuTieOU5x
JC/06l0pj8YJytlvwMBKzAhxZZSDe5h8Uca8mLKiY/PmX8XW7tu3P9yf3Mta
G3k99znflxlD6Q8cozVglIFt5qCstoe4z1cbP8x/YWxRm/Hhb/qC0POv4Hkh
Hkc1D8f1SruwT3YP+lg8HnFv6hkCsp7h43hT5iXuoZMnT4Ztxij6Dc8SaZ8i
bZ53v4H6Nus4gPuWc7LGOvo0z7XVPqw5KYvGiLRvmfKwP892Ir8f9y5zVZbN
kDFXc3QW3HN8r3XUAwddHX+Y/4VsUDt37grbrF2Qr5o6kp0wpk/ffqGtdA7H
8PyseMh589+rHKs2e3PWW2EbLRG3IeWizzF2i2EjRja4//X8KN5fsDBXH8uH
yrglpEXV5oyLsU4E+pDmduC5Ik5jyNDhYVvP9dRBuOa3YxlzeDwPCGwoGuMa
Uzcg+0oZ8vpaGdDVelbDhkLeQfc2zy+M5T16vtjgPO5p7AQCm67qBaq1XbV6
T6O5QVqGumKuhDL9u9r4lia+H4A5jO14fQ/tE889XF/PE+pr8fOgdCLzLWVX
3uL86tlMOiHuq4Ixgv4l+67qJs8XGM+ZGn/Qb0KxvU89/Uxl3KROAdtQ0TO5
SOvEam0ircv9AbpXY5t1TJn5J9YKZe47xthqayVkU5VdmPufMaZaPcZ1F48P
zIF58xZzAn1Kz8HyX4h4nEBn8Qxy5MjVfhLbMNC17Ev726S38o7Nm39lZ9L4
tHfvvsr8db33eZkxlOc20tExegZbs2Zt5fhqfuei8cM0hL7AczDPnno2lm+x
MTpx+oyZDe71tE4E3cunT1+9h9LxI8w/Gh8HDxlW0bH4C3gOAOke+WOU/2qx
JfFaHfpHc67bYQ4l/TSyaRXFY2Dfj+fcNBqP8t6xkdaJ3HPpdiF9PY+C5sWi
9X/YutQ+2BuwBwPxDPE9CFqDxjMqaIxjfhC0Y2z3V3+SL0Vpqc31nPPe+wuu
ydv16ETGbrFy1epwjHQy5eTeEORL1yszxjW2bugDcb6KyOtrZVB8ENdA08i2
T5nYz1yBLSeuV0jH2jFvSAOUabtq9Z6XT8Z74F7WWFSmfzdWJ+p+wK7CNrZv
oXdIxDDHUofyrcR9jTpDB8gHG0MZ4vpibGM7tmWl2bBhY8XOVlSWeM7kuS7W
c0JxQED+pE9k75FNAR8wdRl/KHNaJ1ZrE+6hWHdjn6J+8mKJysw/sVYoc9+V
0Ymy69IvyRvtyv9l6rFWnQjYWdEwsmfHx2aNExr3FPshn3z8vF322Lz5V7Zh
9qMJ0dnohqa4z8uMoYLnK2wJiheInymr6cSi8cNcfc5LazN0hrSWnsUaoxO1
T3FJWTqRfRwjGxh26RievdhPX6TfYRvRGKn0ZNPBXkL/1KdaLC02bj3LoEfi
MSOGdBlrqn2yfNZZyFYmG36MfMZF63IV/8SxWehZNp6zYtI6MesdAdzrHMPz
H5TRicAzOXOd2ofnQ9kJ4r5BW8XzXK06kfEyPJt3frZBm6djJkW9dKL8JFn1
UmaMa2zdlNWJRX2tLIp14F7R3CLbg2Ki0v7gIp1Ypu1q1Ymg+CjFeoky/bs5
dCIxWBxDmzOu8nfankg+yS/fERcSl41rpesra4xjTKd/cf/g76tWlnjOZB0p
x6bjWBV3BvjpqS/FSsY2VPQidRB/sH+ldWKZNtGzCPcLaaefRWLKzD+xVihz
35XRiXom5zmKdIjxKFuPtepE7gHOJxaEfHNslj0xHicUu8X9V22crHZs3vwL
3NeK4+FDn2qK+7zMGEo6pEGfZP2mYj5qsSdC3vhh/usPYO6NUSwEmgNog9iv
WkYnaiyV/yRLJ9JPtI8xJz330SdJmxg5+YhBcQ+sg1Ha6fd3VHs/HhqUa3N+
UWyh9EO1T2xXKkJ9X7GRMcRk8F2ezxgtqpgx2RzSz9iag/Ji0dI6kWfDeBvk
byB2HsroRNpH62npB7Qnz73E7MTP9cDzZFzOWnUiyH4cw7id9Z74LJ0on6pi
7xqjE7kn2Ga/oA6Ix1U7U/6YeIxrbN2U1YlFfQ3KvHdJ/SP9XlrZuLJivYt0
or4varvG6ESNA2jXuLxl+ne18S1NrTpR96T889IXxJSl64wxWeuHVB96no5t
QGjEtE0olLdb98qzN3BfltWJyqf8ykAa7JO/hfuGNqdvFb2DMyatE8u0CfWH
7iLeoRpl5p9YK5S57yhvOu42C7UN/VXvGitTj4pViN9NUaQTdc/onuW5LV7v
mDVOkB/2yUYa5yX9jFF0LFo/b/7l3lacLH4/2TrjPMfUcp+XGUPlq5aNUnmL
n7PK6MS88cP8d3zj2ZC5TaBF4n5Bf6TNGRfQjvKbKFZBdax5mH6Fxov7se4n
bIOg5zetk2NdLduy62lswd4tG7ZsyYptxAZPv1NcvdZmoZGY14psinqmpB83
52/Q6L00cWxODPdNOtaR5ymeUal36p/2ocw8O2mdplB8hjR+GnQQ36uuiB9m
Gx0G1K3WNAvZbNXeWXB8bFtg/SBtS7+irdL3KflXvJWeZeM1sbF/C/Bpxf1D
a18UT4Q+o79l2R3kz4/XDTCOxM/86sPxMwN6LI6vScfCKt/YE6g3PszTXAv9
yXfxfQSMjRo7a6mbOD4xHfeTR1FfU1xRtXdKEsPFcekYNMU9qt/EUCatpQdp
fMWXVWu7avWeBTZN+Trj55ky/bva+JZG94PuMeqX7XT/11yktXWagzWXcZ24
zqQhNPfJDoxthO34vfvcx1kxVIrlYZylThSnkqfpnnmua6gzjZVowFijyq6n
505isckr/ZT0KXPRemogZo1rYFOFMm0i/yf6Eb2FJknbM0SZ+QfNrnfLlrnv
9AzIHFmEnkHTz0vV6lH2Nj1PoRvj9WFpyC/f0U7UJ9u0rcgaJ4AxlOvqPRn0
Veo1K24p79h9+/blzr/Mz9Sz+iXjtOr9eu/zMmOo1izJTqQ1PIp7grjtId3n
IW/8MFfvF/kQaHfGAHQKdRqvZ6UNVIfoeK0XZjxlLNV9yjWI3WU/94k0IUgn
6t6n7Wh/9S/+Z45mP3E16ASevxW3S9p8h9+VvhbH5nCvao2l4nyynrVjFFtS
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
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjTOM4ePBgsnbd+vD32bPnkj1797Zw
jowxxpibn0uXLiVr1q5LJk2e2tJZaXL+vWNH8vqEicnJkyebPe3de/Ykq1av
DvUbc/HixVDfZUDrUIbm4uuvjySz58xNvvhyU7OlKY6fOJEsX74iOXXq1DXf
kZ+zZ8/mnksdP9e1W/LXR9uG7YmTpyRPPNU5/P3NN98kK1asrE+mjTHGmFsY
5tceL/RKvvPd7yU//fmdLZ2dJmXK1GnJj358Ryjb/v37my3dCxcuJA898rek
zZ/vC+mjWcThw1+H79atX1/qWujb+x54KFmxclW9slsBjdbq7tahvubMfbvu
6cUMHjIs+cWdvwrp//2xfzT4bsYbM5POz3a5Rm+neea5rsn41yeEv+9q9cfk
zVlvhb8vX76cPP+vHsm418bXJ/PGGGPMLc699//lltOJMGzEyGbXiX379Q+a
B10z663ZyZYtW8P+06dPhzpe/dlnNV0P+9pvfveHZMOGjfXIbgPIW3PrxMWL
PwlpYn9FD3/40ceV79DYDz78SFWNCHf85GfJl5s2JR99vPjq9Xbvrnx35cqV
pGOnJ5MJkybXpQzGGGPMrQz+ultRJ742fkKz6sQTJ04m3//BD5PJU6714Xfp
+nz4NIaFiz5Ifvnr3ybnz5+/3iwWsnHjF82uE+9pc2/SvkPHa/bv2LEz1GWs
9/I4cOBApZ0fePDhoBm3bdve4BjiF7lec/rxjTHGmKZk7959ydRp04PvTdpm
+MhRSZdu3euabpZO3LxlS/JU52fDvPto23bJu/PmN/ieeLIXevUOflHOHzN2
XLAFbd267Zrro5+wFaGfNE9jXxv76muZ8WhNRZZOrFYubFechx2Lsg0Y+Ery
/oKFybLlywvTeufdecHXTHq9evdJtm3/r07ZtWtX2J/2N+NXxv5FbKhsZkeO
HAn+002bN1eOwx6GxiF2sJ5k6UTiKfHZtm3XPtidu/fomRw7dqzBebQ7fYDv
8fHOffudYCfEB5/H55+vCb5i0qMdPvl0SYPvaSN89FlQVxw/ctSY0H7YIrkO
NkPSRSdm2W3Ro6RpjDHG3IygI5jjiGtDG8CgwUPCHMgaziyYK9GR1T6HDh/O
TTetE1euWh3SXLhwUdiWbxDNKtBEzMvEf7Gf79FWad0F27/6Khk4aHA4plv3
HmEfPkK2hw0fUbdypXVimXINGTo81AX1LT8strxRo8fmpgNLli4Lx9F21MHR
o0cr37HNddL+U/QYdch3A18ZHPQX18BvPfPNWQ2ORUuhW/NY8G2ZytQXdZBH
WifSB9HTfNCv1IliFHimAfQ/59DG5F8xobR3XAdp0MEdOnYKx06bPuMa+x91
kFXn+/btD3GMffr2S6bPmBnOf+/9Bcm5c/+9P1i7kgVrmoruJWOMMeZGBh2B
3QhbimCuRjvkgb54/J9PVP1oXs8irRNZB5BOExvn1Tn2bMXPp7UBsudgeyvi
93e1CtcW2J6ydGVTlSutE6uVC6gHrZsFdPvdrf9UWC6gndBIcduJ3n1eDtfJ
gzzQ7qSbtxYaOx7H5IE9s0x9oY3zSOtE7IRsY08V0vc8vwC+dLZ5XgDKH9dn
EeQnq16wP3MN4jtj0HfEamotM/54jlu/YUPVtGDe/PfC8diUjTHGmJsN7InM
Y/jtBPNveg1oUxPrRGLgyANrTGNku8Hfd+z48fC34srQSGm7XBZoCGkdbD7o
r3radmKdWKZcgJYlj7LnUjdFdjyBPYzrZPmGscEVaX3ZOWVrzYL1MRyDv75e
pHXiK0OGhu30uwjRw9j04KXefcMxijdQnVdrV/nSs/zAsuPOf+/9Bvt5LmH/
zp27gt+afPA+HLVVNWQ/xtdvjDHG3GxofS7vTxHY2/S+jyx4t/CnS5ZW/cR+
uTSxTmR+Jw+xTQ2wKbEfmwzofTrMuWgt7ELVNAzvP+GcM2fOJGPHvRreeVLP
csU6sWy5sMuxTbwl791Di5SxVxF7mbdmBp9x0TohdI/i9PLAJpnluxas+yhT
XwcPHcpNI60TFfPA/hj5xgF9SB3hQ2ZNNtp/wsRJuWkIzstbM8P7ErO+k4bH
tsq9Uuva8UUffBiu2xxrx40xxpimBrsTfjWBDYx5t0gL6Z131T74C/NI+51Z
g8rcH69DIG4vthsRj0aMInGExPvlxYTF8E47rkEsHWkUve+kKcqV9juXKRca
lng8dAj6l/U6ZWjXvkOuFmS9T57PGFsY9Y9GJB+kJx9uDP5d8p9H/wGDStVX
kYZL60Teqcg2cX2CvhjbkgE7aJ+X+wd7H2t2ysDaHa7DOuQ0slfH754E2i4d
A1DmnTkCOz3Xrfe6cWOMMaYeYKORFmA+Jg6LGKx60/qeNg10DL7TsL5gxhth
Gy3DMbJ3Mc+SV/yS/OYIWq0oTlCwZpjrklZzxIjJHqa1x9XKBfjG0XxLly0L
uon12dW0CLqOMhFvmQU+7bT/Fhsi9i3shNhWWdfBMdhp0ZVp/YQ+4th6QpnJ
A2vugT6I7VDreoD1OrGNkRhCjsGuTNwE/vcysYnUsWySWVDedIyA1r2QP9bV
sH4Ff3xZiJ/FJmmMMcbcjAwdNiLMg6y3CL/D0Qy/Nyb/MR9ivbCnAfM/2gc7
FjoK/aR32KAT0QZpWxXzPmtc8sA3Kp9uvcGnrbW32GllLywqF1AH6XJxPBoq
DzQvx8XviI5BZ+KXl/4C3gnEOU89/UzFfsi7Z7LWb2BjrLe/FL2PhlI76vmE
tKk/vuv54kuhb8ZrYWSjS39GjBqdm5Z0NWuW88D2TPvxXh5BLALnqU1YK182
NhHIe1EMhzHGGHOjg8+trK+z3jCf8x6SeK4GbEbYPVnnjP5as2ZtsI1h/8TX
mwd2PNbkZPlVm5O8cqGR0edoJuyIxCViCxw9Zmzuu/wA3YsOLPJnch2OkV0O
7Zh+DyGaJ6vt0fJFmqo5QEvz+89peFck2ou+gI0RX/Ws2XMavNspDXov9vVn
Qf3Qx9K/oUIdY4utxd8MxKESy1DrecYYY4ypDXy12L7SEMeGTojB14q/kDUs
2KRkr7wRwU+Nvkmv1WVdBXGMMRxDXCH+Yvyy8Rr1PIh5pC5qjalDWxfFqLYU
8lOnY0R51sl6PxBro1knxHdlfpsG2zR2a55Drgd+O5E+i5Y1xhhjTH3RO/OI
IcPWxbuiWX9DnF0a7HIcy5qXorW2NwLyoeJ35X0tlBNfZacnn75G22FfQ1Oi
EbGplbWRsn49XhdSBPY59GlL21/z0O/M4ANG/+KXpp3RZFnrvnkPO3XGOqGy
NnOO49qNfR8Q+pq2rOfv/hhjjDHmv6Bb8OP1GzAwaCR+T6NIA95Mvj7ec402
69HzxeBPLVpPzRrv2/23PfDf83zAu2p4fyb+9Tx/M/2G3yo0xhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY8zNz+49e5JH27ZL
Wt3dOvnlr39b6pyLFy8m7dp3COe0+fN9dc5hNrPnzE1a39Mm+f1drZINGzY2
e/rbtm1PHnrkb8ldrf6Y9Hm5f5Nd95tvvkkGDR4SynXv/X9JTp061WTXLsuZ
M2dCmdauW9/sad/MvDZ+QjJn7tstnY1mo+zY8dHHi0Ofvnz5cqPTaoprlGHV
6tVVj+G+OHnyZF3zEfP110fCePfFl5uaLU1x/MSJZPnyFZnjULW6unTpUrJj
x85k2/btYfvo0aPJkSNHwt979u5N/r1jR9Nn2BhTF7ifH3z4keQ73/1e7jHo
l/Pnz1e2Ga/vaXNv8qMf39EcWWzAu/PmJz/9+Z3J55+vCXrq0yVL657mlStX
krNnz4W6Eoyh1NkTT3VusnS6de8RNDhlpGyHD3/dZNfOIqtczAuUi7yYcpw7
dy7U2S/u/FVN56Xvq+Ymq/1roczYwTjB9wcPHmxsNpvkGkXQDt179EymTpte
9djNW7aE/Bw4cKAueYnhXkSHU/bmfgYZPGRY6M+k//fH/lHZX7au0IU8R497
bXzYZlyb8cbM8Dc6+74HHkpWrFxVvwIYY5qUAQNfKRzr0UJpm8FzXbu1iE68
u/WfQtrNCc/F1M/8995vsB+92lQ6ETtec88HWeVi7ken1luj3mosW748+XJT
bTafrPuqOcnr17VQbezAboQ98HpoimsUgYYZMWp06eM3bd4cNFRz2PtXf/ZZ
s48Lixd/EtLEZoyW+/Cjjyvf1VJXd/zkZ8nGjV8kx44fD9fbtWtX5Tvq7je/
+0OL+IOMMbVzM+nE7//gh0mfvv2aNc3m0InYKUgjHpPrTVPoBNN4WkonYkeE
5tCJzYHK0xjmvv1OaINabaq9evdJOj/bpdHplgWd1dw6EXtp+w4dr9lfS13h
W2as5ljGazRjmoWLPgjXa0mbujG3IjzjERuHP4D7EP+g7lvmHWz9HTp2SiZM
nBR0HFpm1luzG1xj7959IbaIZ2Ke6Tgmb6x/4MGHw3X4npg5nidBOvGdd+eF
8/l75KgxDc5F+3AO35MOdioglgu7IOljJ+A7xib82ZTllSFDw3d8KAvPozzj
ci3ywZjD35zLOWPHvRquwfHELa5Zuy6kQ2wPx+HDHT5yVCXPjE8g/y7nkT52
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
avcY2pW2pj55XuHveJwG8ky9Z1GUf/qW+j12vbi/xdCfmT/JL2OEYgvpf7XY
/7J0otA9HZ4J16yt3PPoBOAZnm2t5UKzyN9edN8I9KjGQvow98mESZPDNnWH
FtB9FduWiu4r1S19mevTt3VPU2c8hyk9YoLpU6H835ZNMDdTdo6XdkrDPE0e
43yhNTVGVuujW7duaxCPzP2HVsmzfZXpw0X3erX5gTbSWAs8n+fpxLy2rTbe
pmG8VmwFYw7XO3bsWOa9WGYe5fmF9KgfvmcsoX1Up9XaLAY9KFsk/YR8MOZK
J5IO2hi7ANs8AwvuA/JOrBxjJveknjtjFOPONRnT6cdae1nUxxUvKLsV9x/b
9KEyc161eZd7nW09m2s8uhF1ImVEL8f3WqwTtW5COgQoN/t27twV+i1/M16D
dCdtxrV5Nihbbmk1zb3UtdYKKyZu3vz3Ksfz3Mo+7jWg38bPibpenk5k7FAf
kP2fe0KQb+lIYrD4KM34uZv6yitjrBNVV7HdRHMkOr3a9xDrRNqB57E0sQ5K
lwOYf+J6URy9+i/1mDf3gsY6aZhqfSSvLtMwzsb9UNCXeC4TPGNynNZ4yM4i
3l+wsLDda60f4LlRegjSOlHlVbwG44jGf81d8h3Rd+K+zNiWtm+k6zjLBpJe
IxW0RORDpe+xL7aDxDB3xOfrmU4avEya6XrB1kqa8k+onmJ9lC4vfYRjps9o
6GOiLP9/e2f+q1V17/8/5iY3ub/c5CY3N2maNG160+Z2Sg2pIdZcrVVbL6WU
Uoc6AFJUBCcURAZxYhBERHBWcEBBcEKcGC0yiMgkoICg7m9fy76f7zqLPT3P
eYZz4P1Knpyzp7XXXnvtvd778/mstTiX6hDPc2xbB9W9vG+CumUW14UUzsc+
2MEBO1/Zs1FEHZ0oW4n86bG2Id96LvReo52BoucmBh0Yv7d4N3MdshuB+jjK
h1D2XPH8ct+JdQdpV/nz0vMB90LfLWq7OY56x2/qnXfl5l1p61uZNHXP6txj
+YpElY+0qg6XPetl7YPaGPlgoMrvnHdv67xvY7iHnF/2aeqyviXy3j1V7Sh5
ZRkNXlSmZfcsBQ0d3uf/9A2CdCLfsIK6qnzp20ntN+C7ZF1q29D7VvcEW6js
emV1nPrI/7Jb8T5Su9Nsmwdpu8J26mmc34Hod9b1o4V5lvih+2OdSDuQxtfR
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
1QN++q7gPci7gnKQrTH+ZirbTt2Vj4bzopN4RlimrLlPspXzw84aXwf3R/0a
dd3YJIJf65++GtKPYzlSWwnfhdpOGevbqKyOlJVlivq8cw7yL/86P3yM2PRV
BlwHeo16pW85trE+bx4s9mulfOTb1Lfx+vXrG/WYfMrOw33Se5H7E4+zRKxd
fO/4NpatjD6jcZny/atl3j3oTNKhLSFPvLfJI7ZwnlOetfi6sBXgZ4rvY6pv
QDqRc1B+pE17pDyXnRPicuF5pA7E+eYZ1/3kp3qcXi/fRIoBid87ilvneeDe
0A817ssrTZCOkSTK8p/WhTTGTfUF2xJ1WdqCX2wP4juQdUV2MFD7puNJS7aT
9JlGL3Hd2hc7m/qgah/6IZAex0k7ps9NDO8IHc8xaAbdez1X3JP4ucJWX/Zc
EUOhuq5xpnTsiytX9jkfOknvYn7YYnjOuC/8eGfwvZHaLVLQJen8nVV1FCgj
5RXbt/ozcx9SrVi3Dpc962XtA3VWNhXqvsZ80dg7eeTd2zptsuA4ygf/PBoo
rr95z2KddlQ2QNJlH7WdaVxG3j1LId+qe6T33D/uV/x+xVaib159swG6UGMu
kTeOyRsHjG9N6gXbaed4n8gGVdV28KwpH5wDnSPqtnlF7Qp1VO8PypA0VG+4
roE+v1LeGETkGV0Sf3ek29N+lfHYb4J6SDkV2aqA77m4X3MM32T4RdAHefY7
1vEtQtvJ/1XjaaJZZLtjX+5z3fvDsXljadSB9wbvoKJzVW1vJ9hpeHfFWle2
Bfmg6lBVR+rCvc2rO1Xw3GET6+UYqtjJKbO8/rfq/5/nB+Z68U1V5R0/B+/h
Il9yM8jvrLahqMzbeU6RXi/PEe/I2K6ius8zmWf74TuPd3PVM9Jq/nnX064q
j2ht2dF0f9nW6jugWXgudK28a+O+ltreynNTRdFzRRsb98finV63LEiLZyWk
XfMdgz4omgOq6h7THnANlF+75kwve9ahrH3gOvSerPOOz7u3dd+3umauP2/s
g7x3T512lG2yORaVadk9i1FdaqW9I861rA+E4kN5hxTZKMraDvKkvl152/rb
5vEdiN1Y6Z3pUB5o+bx4dWzZ2O0Z47LKL23ah/pdpX4PxbYVvQPN4Idv2XbO
FdRfsLFhwyF+qGwuPtom7Bfo3KIxf9oBdgBsTvG7SPMBmO6AbR37Dn6MPJ+9
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
GGOMMcYYY4wxxhhjjDHGGGOMMcYYMzjZsXNndsmw4dmQs4dmP/7Jz2odc/Lk
yWz4iJHhmHP/9/wO57B93Hf/nGzZY4937XzPPPtcKJ+f/vyX4f/BzNYPP8wm
Tro5+3Tv3l5npZJJN9+anT3016E+U797zWVXXNnIz3vvvV/7uHY9Z726d0eP
HsuGDR8R8j/0nHO7em5jjDHt46uvvsouvPj32b/8678V7nPixIns+PHjjeWv
v/46O+fc87L/+s53u5HFfnPs2LFwff/9o//p2DkoR9rGmFWrXw3nXfTw4o6d
t92k9xrumHpnuI4nnnyqbefhnqCFOsEtt00O+UUjDQTumjEz5OeNN99s6rh2
PGeduHd14f6iEQfLe8IYY0w+t02+o1QnYhNJ7Y3XjBk7qN7/r65Zk32wYUPH
0kcLUob79u1vrPv4492DTifm3evPDh0KOuPLL79s23moO+Ovu6Ft6cWQ14Gk
E19+ZVVLOhH6+5x14t41w9hx4wfVe8IYY8ypnK468ZtvvunauXqlE7/44ovs
888/b1t6efe6E1gn1mMwPGdlWCcaY0x3Iebqot//X4j7+ff/+M/wHsbnCbTx
Zw35VTZy1KXZnLnzwvv5+z/8Ubbk0aV90ti16+MQl4gflvg59inSiRdceHFI
h+3n/ea3IWYK1H7RJnM8/8+YeXefYzdu2hSOYTvnefKpp8N6YgWJ2eL8L760
MmzjWm697fZcX+Tb698J6bDfCy++lO359NOQL671iiuvbuz3zrvvZn/4458a
5+MclI32Vd7rnv/1N97I/vyXy4JuYl/ywG/1q6/2yd9Nt9watlNG+NnYZ/fu
3Q2dSLlwT/gfH/+WLVsbx2LvufTyv4Y8c57Jd0xp3M8UfLXEmum+jbr08hAD
9vQzz2YPLVoczs22AwcOBJ+3yuzBBQsbaaApR4+5NuzHb8TIUaE8i+41MZ2k
S95ee/2Nft/bLVu3huM4B+fif/yyMWht1v/irCFhW1zXyCPrb58yNeyr+L84
piBPJxblN4XYgWv/Nj7UF+VP2r9uvSGN8ddPCPuRV35lOpHvmXvuuz8806TP
9Ur713nOeNbJL+fjPr311rqwPu/e1X1HCOo6vm/SIL3zL7go7D9j1t216luq
E6nb+MJV/8jHwc8+yz23McaY5qEd4T0PslMsX74iLPO+/e73fhDW0Y6im3jH
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
GGOMMcYYY4wxp/L/AB3+hhY=
     "], {{0, 514.}, {650., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{650., 514.},
   PlotRange->{{0, 650.}, {0, 514.}}]], "Input",ExpressionUUID->
  "7d337147-4ddb-4c7c-8193-e79dc048e734"]
}], "Text",
 CellChangeTimes->{{3.9000653732966022`*^9, 3.900065374566966*^9}, {
   3.9000654053412333`*^9, 3.900065416183313*^9}, 
   3.900065446888706*^9},ExpressionUUID->"ac0b44a7-af11-4809-879f-\
dd7c4b268fc7"],

Cell["\<\
Computation of the derivative of the log-log function of the coupled \
exponential distribution\
\>", "Text",
 CellChangeTimes->{{3.900439198998433*^9, 
  3.9004392173547297`*^9}},ExpressionUUID->"a4bc7671-a06f-42b9-bd40-\
91a9be3df2aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CoupledExponentialDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
        SuperscriptBox["\[ExponentialE]", "u"]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], "<", "u", "<", "\[Infinity]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004445786316843`*^9, 3.900444602469429*^9}, 
   3.9004448165211287`*^9, {3.900445150427219*^9, 3.900445165708941*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"7f1242fa-3e95-4a93-a2e4-ee3299727e20"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "u"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Kappa]"}], "+", 
    "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.900444609165148*^9, 3.900444820979561*^9, 
  3.9004451680172453`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"326374af-b3fb-4525-8181-68415dab78af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "u"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Kappa]"}], "+", 
      "\[Sigma]"}]]}], "/.", 
   RowBox[{"u", "->", 
    RowBox[{"Log", "[", "\[Sigma]", "]"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9004453259098177`*^9, 3.900445334824106*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"6fc8137a-80fa-4072-9303-ec21ab4cfa0c"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.9004453360755653`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"03be4c6d-e0c6-43f2-9019-67b1c1aa0a6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{" ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledExponentialDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
         SuperscriptBox["\[ExponentialE]", "u"]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "1"}], "}"}]}], "]"}]}], 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"CoupledExponentialDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
      SuperscriptBox["\[ExponentialE]", "u"]}], "]"}]], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], "<", "u", "<", "\[Infinity]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900439231130899*^9, 3.900439284993422*^9}, {
  3.9004411612684307`*^9, 3.900441167251947*^9}, {3.90044529487986*^9, 
  3.900445295747147*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"462ea6a8-b310-41a6-97a0-d4fb0acca4c7"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "u"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Kappa]"}], "+", 
    "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.900439287516974*^9, 3.900441169077938*^9, 
  3.9004452968056383`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"fa28730d-c12b-4ad3-b4a8-7770ef9035f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{" ", "u"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Kappa]"}], "+", 
      "\[Sigma]"}]]}], "/.", 
   RowBox[{"u", "->", 
    RowBox[{"Log", "[", "\[Sigma]", "]"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900439369801961*^9, 3.9004393928365803`*^9}, 
   3.900445314755713*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"79ba3a89-8e8f-43d5-9ec7-1e5603b4c419"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.900439394029654*^9, 3.900445315697255*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"1b23c5c1-7484-4a25-a913-faf04a7f6b7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CoupledExponentialDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
       SuperscriptBox["\[ExponentialE]", "u"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], "<", "u", "<", "\[Infinity]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9004411905409718`*^9, 3.9004411962530537`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"f1e095e9-d073-49f9-99a7-792f8c9dca05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", "u"]}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
  SuperscriptBox["\[Sigma]", 
   FractionBox["1", "\[Kappa]"]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Kappa]"}], "+", 
     "\[Sigma]"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    FractionBox["1", "\[Kappa]"]}]]}]], "Output",
 CellChangeTimes->{3.900441198338385*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"6f63f220-4859-42b8-a44a-e9da5df5c060"]
}, Open  ]],

Cell[TextData[{
 "The derivation below seems to have a mistake. I shouldn\[CloseCurlyQuote]t \
have substituted x = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", "u"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4fae211a-ab15-4eda-86cd-5dba0452eade"],
 "."
}], "Text",
 CellChangeTimes->{{3.900439142963046*^9, 
  3.9004391888054256`*^9}},ExpressionUUID->"f353dc70-f6a8-4b2f-bc85-\
d0bb4af0c602"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledExponentialDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"CoupledExponentialDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
     "]"}]], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900067383815487*^9, 3.900067409203639*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"7bf191b6-5a12-44c2-bc0d-12d7dfa321ae"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
   RowBox[{
    RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.900067410690234*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"58e5b7ab-46c8-4789-a31c-a1263e2956a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}], "/.", 
   RowBox[{"x", "->", "\[Sigma]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900067442972148*^9, 3.900067467552845*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"1f44c304-5579-4e97-a5a9-ef882c604e44"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.9000674609893208`*^9, 3.90006746823914*^9}},
 CellLabel->
  "Out[249]=",ExpressionUUID->"a419dbbe-70e3-46a3-82c9-6e2762565ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}], ",", 
   RowBox[{"x", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900067515720766*^9, 3.900067529767453*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"94d8b228-8685-4477-b96a-368251eafdda"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "-", "\[Kappa]"}], "\[Kappa]"]], "Output",
 CellChangeTimes->{3.900067531386078*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"90ab7aff-4edd-418c-9dbc-24ca6ddd6431"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", "\[Kappa]"}], 
     RowBox[{"2", "\[Kappa]"}]], "==", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
      RowBox[{
       RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900067675555558*^9, 3.9000677062774763`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"f530d11e-b4b3-4ef8-82b9-00c054a50b73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["\[Sigma]", "\[Kappa]"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9000677076538754`*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"6c3e095f-0656-4132-937f-be3f4c999915"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}], "/.", 
   RowBox[{"x", "->", 
    RowBox[{"\[Sigma]", "/", "\[Kappa]"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900091580933035*^9, 3.9000915866535263`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"7b4b5290-4d2e-4262-9c45-1a0392ebdcb1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "\[Kappa]"}], 
   RowBox[{"2", " ", "\[Kappa]"}]]}]], "Output",
 CellChangeTimes->{3.900091588761958*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"eecda3ef-4149-4469-ad29-c57ad94a6ebf"]
}, Open  ]],

Cell["Show Derivative of Coupled Exponential Distribution", "Text",
 CellChangeTimes->{{3.9004379680124207`*^9, 
  3.900437983478731*^9}},ExpressionUUID->"e925ac01-ba68-4b67-ac74-\
f110286fb348"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"CoupledExponentialDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.900437987839139*^9, 3.900437989600821*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"eb897fd3-19c7-477d-bbee-dcfc0e0f8555"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["x", "\[Sigma]"]}]], 
          SuperscriptBox["\[Sigma]", "2"]]}], 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Equal]", "0"}], "&&", 
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", "\[NotEqual]", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"x", " ", "\[Kappa]"}], "\[Sigma]"]}], ")"}], 
            RowBox[{
             RowBox[{"-", "1"}], "/", "\[Kappa]"}]]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}], 
           "2"]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], "||", 
           RowBox[{
            RowBox[{"\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], 
            "<", "0"}]}], ")"}], "&&", 
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], ">", 
          "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9004379929733047`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"975f5c5b-20e4-4c1f-a7f1-7e7704923b01"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "LogLog2ndDer", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LogLog2ndDer", "[", 
    RowBox[{"f_", ",", "u_"}], "]"}], ":=", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"f", "[", 
      SuperscriptBox["\[ExponentialE]", "u"], "]"}], "2"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       SuperscriptBox["\[ExponentialE]", "u"], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            SuperscriptBox["\[ExponentialE]", "u"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]}], "]"}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "u"}]]}], "-", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            SuperscriptBox["\[ExponentialE]", "u"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1"}], "}"}]}], "]"}], 
         SuperscriptBox["\[ExponentialE]", "u"]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          SuperscriptBox["\[ExponentialE]", "u"], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", "u"}]]}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.90031434027101*^9, 3.900314349419785*^9}, {
   3.90031444771224*^9, 3.9003144593915043`*^9}, {3.9003145628888187`*^9, 
   3.900314709795897*^9}, {3.900314749288186*^9, 3.9003148081645117`*^9}, {
   3.900314867876524*^9, 3.9003149417627163`*^9}, {3.900314978245428*^9, 
   3.900315022199512*^9}, {3.900315077263277*^9, 3.9003150833332033`*^9}, 
   3.900315140832088*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"99f4f149-6dc6-4b00-a67c-def906da1c7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogLog2ndDer", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CoupledExponentialDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "#"}], 
      "]"}], "&"}], ",", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.900315819928583*^9, 3.900315896710384*^9}, {
  3.900316019551115*^9, 3.9003160314164248`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"0751fbb5-3150-45db-ac94-3164c04558c5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["x", "\[Sigma]"], 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Equal]", "0"}], "&&", 
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", "\[NotEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], 
           ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}], "2"]], 
        RowBox[{
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], ">", 
          "0"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], "||", 
           RowBox[{
            RowBox[{"\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], 
            "<", "0"}]}], ")"}]}]},
       {"ComplexInfinity", 
        RowBox[{
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], ">", 
          "0"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Kappa]", "<", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], 
              "<", "0"}]}], ")"}], "||", 
           RowBox[{"\[Kappa]", ">", "0"}]}], ")"}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.900316025568637*^9, 3.9003160341347437`*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"2ff42157-2adf-4086-92c9-ef234678a22c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogLog2ndDer", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"NormCG", "[", 
        RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"CoupledExponential", "[", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"#", "-", "0"}], ")"}], "2"], 
           SuperscriptBox["\[Sigma]", "2"]], ",", "\[Kappa]"}], "]"}], ")"}], 
       
       FractionBox[
        RowBox[{"-", "1"}], "2"]]}], "&"}], ",", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.9003163227753687`*^9, 3.900316326586238*^9}, {
  3.900316538325594*^9, 3.900316580768395*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"53979462-a51c-43ac-8e7a-e93c31d6bc65"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["x", "4"], " ", "\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"]], 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Equal]", "0"}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "2"]], ">", 
          RowBox[{"-", "1"}]}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9003165833013287`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"d442e523-72ff-484d-abd9-b14fc8aad122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogLog2ndDer", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Kappa]", 
          RowBox[{"\[Kappa]", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"#", "-", "0"}], "\[Sigma]"], "]"}], 
            RowBox[{"-", "\[Alpha]"}]]}]], ")"}], 
        FractionBox["1", "\[Alpha]"]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{"1", "+", 
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"#", "-", "0"}], "\[Sigma]"], "]"}], "\[Alpha]"]}]}]], 
         ")"}], 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
       RowBox[{"Abs", "[", "\[Sigma]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        FractionBox[
         RowBox[{"#", "-", "0"}], "\[Sigma]"], "]"}]}], 
      RowBox[{"2", " ", "\[Sigma]", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"#", "-", "0"}], "]"}], " ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "\[Alpha]"], ",", 
         FractionBox["1", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], "&"}], ",", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.900316389288484*^9, 3.900316390197661*^9}, {
  3.9003164342934628`*^9, 3.900316435950926*^9}, {3.900316819561308*^9, 
  3.900316847012834*^9}, {3.900317125933627*^9, 3.900317146987492*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"cd22a1e3-6a9f-4de6-b15c-494ab948cac6"],

Cell[BoxData[
 RowBox[{"LogLog2ndDer", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Kappa]", 
         RowBox[{"\[Kappa]", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"#1", "+", "0"}], "\[Sigma]"], "]"}], 
           RowBox[{"-", "\[Alpha]"}]]}]], ")"}], 
       RowBox[{"1", "/", "\[Alpha]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"1", "+", 
          RowBox[{"\[Kappa]", " ", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"#1", "+", "0"}], "\[Sigma]"], "]"}], "\[Alpha]"]}]}]], 
        ")"}], 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
      RowBox[{"Abs", "[", "\[Sigma]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       FractionBox[
        RowBox[{"#1", "+", "0"}], "\[Sigma]"], "]"}]}], 
     RowBox[{"2", " ", "\[Sigma]", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"#1", "+", "0"}], "]"}], " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], "&"}], ",", 
   RowBox[{"Log", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.900316397665524*^9, 3.900316475910117*^9, 
  3.900316975503819*^9, 3.900317194081028*^9, 3.900697031078074*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"03963278-1291-481e-be0f-cb4980a3443c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"%109", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "0"}], ",", 
      RowBox[{"x", "->", "\[Sigma]"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9003170574168663`*^9, 3.9003170786291227`*^9}, {
  3.9003171813095284`*^9, 3.900317181736668*^9}, {3.900317264539256*^9, 
  3.900317271067061*^9}, {3.900317416262989*^9, 3.900317457918768*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"ad0706ca-bfca-4247-bbe8-4b41b454d7aa"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 115, 6, 31780959797347766106, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.900317194132526*^9, 3.900317274996879*^9, 
  3.900317459476542*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"45bde5e4-811c-4aa3-b597-0efb24333620"],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.9003171223232594`*^9, 3.900317194928841*^9, 
  3.900317275008507*^9, 3.900317459493203*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"4548f877-d2ab-473f-a7bf-5a3b86a91785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["Abs", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "/.", 
    RowBox[{"x", "->", "\[Sigma]"}]}], ",", 
   RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900317335149351*^9, 3.9003173848333397`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"b470bdba-b620-4394-b5a7-01b4e4b8710f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.900317344176509*^9, 3.900317351052251*^9}, 
   3.900317385673023*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"85dfe3ad-945f-4a2e-abfc-a9bd067c15c0"]
}, Open  ]],

Cell["CDF of Coupled Distribution ", "Text",
 CellChangeTimes->{{3.899966212351811*^9, 3.899966219757918*^9}, {
   3.8999664115729713`*^9, 3.8999664186924458`*^9}, {3.8999666599201117`*^9, 
   3.899966661156646*^9}, {3.899972096207407*^9, 3.899972109161272*^9}, 
   3.899972695568274*^9},ExpressionUUID->"15e928b7-dd10-47fe-a484-\
726d338b2795"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
               "\[Alpha]"]}]}]], ",", 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "\[Alpha]"]}], "]"}]}], 
        RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                "\[Alpha]"]}], 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", "\[Alpha]"], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.899972719416938*^9, 3.899972768522933*^9}, {
  3.899972814539716*^9, 3.899972869842372*^9}, {3.900094229497251*^9, 
  3.900094231466387*^9}, {3.900101484506266*^9, 3.900101485386489*^9}, {
  3.9006969699779787`*^9, 3.900696973952775*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"82c63251-3817-4e57-a99e-098939a342e1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
               "\[Alpha]"]}]}]], ",", 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "\[Alpha]"]}], "]"}]}], 
        RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                "\[Alpha]"]}], 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", "\[Alpha]"], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.900696975551838*^9, 3.900697051946949*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"0981096f-edfe-46a1-b0b7-d5b896a8476f"]
}, Open  ]],

Cell["Survival Function of Coupled Distribution ", "Text",
 CellChangeTimes->{{3.899966212351811*^9, 3.899966219757918*^9}, {
   3.8999664115729713`*^9, 3.8999664186924458`*^9}, {3.8999666599201117`*^9, 
   3.899966661156646*^9}, {3.899972096207407*^9, 3.899972109161272*^9}, 
   3.899972695568274*^9, {3.900092549476613*^9, 
   3.900092553473781*^9}},ExpressionUUID->"c67acbfa-3cfb-4f0c-b9b4-\
5b3fb8affd71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "SFCoupledDistribution", "]"}], ";", 
  RowBox[{
   RowBox[{"SFCoupledDistribution", "[", 
    RowBox[{
    "x_", ",", "\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", 
     "\[Alpha]_"}], "]"}], ":=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"BetaRegularized", "[", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}]}]], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
              FractionBox["1", "\[Alpha]"]}], "]"}]}]}], 
          RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
         {
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.899972719416938*^9, 3.899972768522933*^9}, {
  3.899972814539716*^9, 3.899972869842372*^9}, {3.9000925741215973`*^9, 
  3.900092574727516*^9}, {3.900092729918159*^9, 3.900092738182152*^9}, {
  3.9000928062858877`*^9, 3.900092885027577*^9}, {3.900093050365471*^9, 
  3.900093067837569*^9}, {3.900093098682289*^9, 3.900093104921997*^9}, {
  3.9000942355931273`*^9, 3.90009426547639*^9}, {3.90010149285358*^9, 
  3.9001014940886707`*^9}, {3.9006970706161757`*^9, 3.900697076629096*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"758e6ceb-1de5-4887-8b16-ef7deda5ef85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "LogLogDerSFCD", "]"}], ";", 
  RowBox[{
   RowBox[{"LogLogDerSFCD", "[", 
    RowBox[{
    "x_", ",", "\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", 
     "\[Alpha]_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"SFCoupledDistribution", "[", 
        RowBox[{
        "x", ",", "\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", 
         "\[Alpha]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
    RowBox[{"SFCoupledDistribution", "[", 
     RowBox[{
     "x", ",", "\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], 
     "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.900092898295834*^9, 3.900093008560688*^9}, {
  3.900093075500415*^9, 3.9000931661344357`*^9}, {3.900093360778657*^9, 
  3.900093372579987*^9}, {3.9000936246010523`*^9, 3.900093634617597*^9}, {
  3.900101775217347*^9, 3.900101796547418*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"176e19f3-cf9e-443b-9323-2d4895f08e4e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.900093024927906*^9, 
  3.9000930263318653`*^9}},ExpressionUUID->"37f103bb-5fac-407d-aa8b-\
673da8267072"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"LogLogDerSFCD", "[", 
    RowBox[{
    "x", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
    ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900093344677537*^9, 3.900093346461421*^9}, {
   3.9000936726746387`*^9, 3.900093675122032*^9}, {3.9000938340644093`*^9, 
   3.900093875809568*^9}, {3.900101511745043*^9, 3.900101512142756*^9}, 
   3.900101800759411*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"b07b3e32-f884-4702-b353-e855a7d58667"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.900093348800004*^9, 3.900093378867814*^9, {3.900093669777287*^9, 
   3.900093676636928*^9}, 3.900093879163241*^9, 3.900094294708584*^9, 
   3.9000943336929703`*^9, 3.9001015177240343`*^9, 3.9001018042284822`*^9, 
   3.900697134071355*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"f1bf5a6f-0b89-4a4d-b6fe-03249888c9e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"LogLogDerSFCD", "[", 
    RowBox[{"x", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "1"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900094388158309*^9, 3.900094392457251*^9}, 
   3.900101806845488*^9},
 CellLabel->
  "In[346]:=",ExpressionUUID->"49943158-8bfb-4a05-89c2-5466e883cdfe"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["x", 
   RowBox[{
    RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.9000943957869797`*^9, 3.900101659556032*^9, 
  3.900101807847378*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"e3cbadc8-002d-4e69-bede-780e3d6b5023"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"LogLogDerSFCD", "[", 
    RowBox[{"x", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "2"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900094388158309*^9, 3.900094392457251*^9}, {
   3.900101712401926*^9, 3.9001017125260687`*^9}, 3.900101811330628*^9},
 CellLabel->
  "In[347]:=",ExpressionUUID->"b33c2f9f-db72-475e-9337-825d0ad138ae"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "x", " ", 
   SqrtBox["\[Kappa]"], " ", 
   SuperscriptBox["\[Sigma]", 
    FractionBox["1", "\[Kappa]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"2", " ", "\[Kappa]"}]]}]]}], 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9000943957869797`*^9, 3.900101659556032*^9, 
  3.9001017148352537`*^9, 3.900101812926868*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"bd5a2e0e-5c05-4004-9666-b7be0f049bd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LogLogDerSFCD", "[", 
    RowBox[{
    "x", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
    "/.", 
   RowBox[{"x", "->", "\[Sigma]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900101959996045*^9, 3.900101987058709*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"f5278a72-19d8-454b-ba27-bfaf7909c364"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1", "+", "\[Kappa]"}]], ")"}], 
    FractionBox["1", 
     RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["\[Kappa]", 
      RowBox[{"1", "+", "\[Kappa]"}]], ")"}], 
    FractionBox["1", "\[Alpha]"]]}], 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]], ",", 
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]], "Output",\

 CellChangeTimes->{
  3.9001019362023983`*^9, {3.900101970977507*^9, 3.900101988052806*^9}, 
   3.900103553941601*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"89e2a8aa-3fc7-4ad1-a028-806725e30591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"x", " ", "\[Alpha]", " ", 
      SuperscriptBox["\[Kappa]", 
       FractionBox["1", "\[Alpha]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}]]}], ",", 
          
          FractionBox["1", "\[Alpha]"], ",", 
          FractionBox["1", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "/.", 
    
    RowBox[{"x", "->", 
     FractionBox["\[Sigma]", "\[Kappa]"]}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900101959996045*^9, 3.900101987058709*^9}, {
   3.900102839140505*^9, 3.900102844320551*^9}, 3.9001030647871304`*^9, {
   3.900103575891123*^9, 3.900103584820423*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"47b97102-3880-4cb7-8e7e-b62739191e8c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["1", "\[Alpha]"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Kappa]", 
       RowBox[{"1", "-", "\[Alpha]"}]]}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       FractionBox["\[Kappa]", 
        RowBox[{"\[Kappa]", "+", 
         SuperscriptBox["\[Kappa]", "\[Alpha]"]}]], ",", 
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]], "Output",\

 CellChangeTimes->{
  3.9001019362023983`*^9, {3.900101970977507*^9, 3.900101988052806*^9}, 
   3.900102852662162*^9, 3.90010306872752*^9, {3.900103560209511*^9, 
   3.9001035868829823`*^9}},
 CellLabel->
  "Out[369]=",ExpressionUUID->"91a60960-0eb2-4d51-ab48-0fc499ba18d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"x", " ", "\[Alpha]", " ", 
      SuperscriptBox["\[Kappa]", 
       FractionBox["1", "\[Alpha]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}]]}], ",", 
          
          FractionBox["1", "\[Alpha]"], ",", 
          FractionBox["1", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "/.", 
    
    RowBox[{"x", "->", "\[Sigma]"}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9001030909204063`*^9, 3.900103091352125*^9}, {
  3.900103188449337*^9, 3.900103218281048*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"03045dd5-504b-4520-b96d-697ba347fddb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Kappa]", 
    FractionBox["1", "\[Alpha]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]], ",", 
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]], "Output",\

 CellChangeTimes->{3.900103092531434*^9, 3.900103220263857*^9, 
  3.900103599781166*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"753bc953-1850-48fb-827c-8acea95dea30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"x", " ", "\[Alpha]", " ", 
      SuperscriptBox["\[Kappa]", 
       FractionBox["1", "\[Alpha]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}]]}], ",", 
          
          FractionBox["1", "\[Alpha]"], ",", 
          FractionBox["1", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "/.", 
    
    RowBox[{"x", "->", 
     FractionBox["\[Sigma]", 
      SuperscriptBox["\[Kappa]", 
       FractionBox["1", "\[Alpha]"]]]}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900103261097782*^9, 3.900103272679104*^9}, {
  3.900103408991699*^9, 3.900103454216559*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"6353f058-731a-49ef-8100-a898a33f7745"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", "\[Alpha]"}], 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]], "Output",\

 CellChangeTimes->{{3.900103267391632*^9, 3.9001032741469707`*^9}, 
   3.90010345889402*^9, 3.900103604602518*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"d988c2c8-a227-4201-9101-715c042cd923"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{"1", "+", "\[Kappa]"}]], ")"}], 
      FractionBox["1", 
       RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]], ")"}], 
      FractionBox["1", "\[Alpha]"]]}], 
    RowBox[{
     RowBox[{"Beta", "[", 
      RowBox[{
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"BetaRegularized", "[", 
        RowBox[{
         FractionBox["\[Kappa]", 
          RowBox[{"1", "+", "\[Kappa]"}]], ",", 
         FractionBox["1", "\[Alpha]"], ",", 
         FractionBox["1", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "/.", 
   RowBox[{"\[Alpha]", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900102057605205*^9, 3.900102072965399*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"b311a2a6-8ce5-4648-9980-c0a2c154f3d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"1", "+", "\[Kappa]"}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{"1", "+", "\[Kappa]"}]], ")"}], 
      RowBox[{
       FractionBox["1", "2"], "/", "\[Kappa]"}]], " ", 
     SqrtBox[
      FractionBox["\[Kappa]", 
       RowBox[{"1", "+", "\[Kappa]"}]]]}], 
    RowBox[{
     RowBox[{"Beta", "[", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"BetaRegularized", "[", 
        RowBox[{
         FractionBox["\[Kappa]", 
          RowBox[{"1", "+", "\[Kappa]"}]], ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["1", 
          RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.900102074133177*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"dde478e4-d4b1-4731-a777-584ce0869000"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "x", " ", 
       SqrtBox["\[Kappa]"], " ", 
       SuperscriptBox["\[Sigma]", 
        FractionBox["1", "\[Kappa]"]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"2", " ", "\[Kappa]"}]]}]]}], 
      RowBox[{
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox["1", 
          RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
            RowBox[{
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}]], ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], ",", 
     RowBox[{"x", "->", "\[Infinity]"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900104285698316*^9, 3.900104347890764*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"43ac9a65-58d0-4c01-9dea-0222ef7705d2"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.900104325365116*^9, 3.900104505240902*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"ae79125a-2cc6-4290-ad3e-3810769f8905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "x", " ", 
       SqrtBox["\[Kappa]"], " ", 
       SuperscriptBox["\[Sigma]", 
        FractionBox["1", "\[Kappa]"]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], ")"}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"2", " ", "\[Kappa]"}]]}]]}], 
      RowBox[{
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox["1", 
          RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{"1", ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], ",", 
     RowBox[{"x", "->", "\[Infinity]"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9001045392145777`*^9, 3.900104550176414*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"cb133a82-2b27-4ca3-ab16-2d44361a31a0"],

Cell[BoxData["Undefined"], "Output",
 CellChangeTimes->{3.90010457558092*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"623b27ac-5d7e-485f-99f3-0b406f57b8a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "x", " ", 
      SqrtBox["\[Kappa]"], " ", 
      SuperscriptBox["\[Sigma]", 
       FractionBox["1", "\[Kappa]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"2", " ", "\[Kappa]"}]]}]]}], 
     RowBox[{
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "2"], ",", 
        FractionBox["1", 
         RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}]], ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "==", 
    FractionBox[
     RowBox[{"-", "1"}], 
     RowBox[{"2", "\[Kappa]"}]]}], ",", "x", ",", "Reals", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Alpha]", "<=", "2"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900104819863847*^9, 3.9001048209675093`*^9}, {
  3.9001049186116657`*^9, 3.900104982401106*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"980bbd16-1836-463a-a7c6-0750814b9cf7"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve.\"", 2,
    378, 48, 31774377331651416585, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.900104984276333*^9},
 CellLabel->
  "During evaluation of \
In[378]:=",ExpressionUUID->"5c8ef267-3022-4423-af98-b6f3415c2f9c"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "x", " ", 
      SqrtBox["\[Kappa]"], " ", 
      SuperscriptBox["\[Sigma]", 
       FractionBox["1", "\[Kappa]"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"2", " ", "\[Kappa]"}]]}]]}], 
     RowBox[{
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "2"], ",", 
        FractionBox["1", 
         RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}]], ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "\[Equal]", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}]}], ",", "x", ",", 
   TemplateBox[{},
    "Reals"], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "x", "<", "\[Infinity]"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.900104984292248*^9},
 CellLabel->
  "Out[378]=",ExpressionUUID->"8a98d00a-1b84-4c53-9a68-4f039ba9741d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"domain", "=", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDFRange", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]], ",", "100"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0.1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"scale", "=", 
     RowBox[{"betaQToScale", "[", 
      RowBox[{"\[Beta]", ",", "q", ",", "2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PDFValues", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledNormalDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "#"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", 
         SqrtBox[
          RowBox[{"scaleShapeToBeta", "[", 
           RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", "\[Sigma]", 
        ",", 
        RowBox[{"\[Sigma]", "/", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", "\[Kappa]"}]}]]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DerValues", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"PDF", "[", 
              RowBox[{
               RowBox[{"CoupledNormalDistribution", "[", 
                RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
               "x"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], ")"}], "/", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledNormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], "/.", 
      RowBox[{"x", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          SqrtBox[
           RowBox[{"scaleShapeToBeta", "[", 
            RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", "\[Sigma]", 
         ",", 
         RowBox[{"\[Sigma]", "/", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", "\[Kappa]"}]}]]}]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"SFCoupledDistribution", "[", 
          RowBox[{
          "x", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"PDFRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "PDFRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"\[Sigma]", ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"Log", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "/", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                  RowBox[{"PDFValues", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                    RowBox[{"PDFValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "+", 
                 RowBox[{"Log", "@", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", "1.5"}], "}"}]}]}]}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"x", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Kappa]", 
            FractionBox["1", "\[Alpha]"]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
            
            RowBox[{"-", 
             FractionBox[
              RowBox[{"1", "+", "\[Kappa]"}], 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]]}], 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"Beta", "[", 
            RowBox[{
             FractionBox["1", "\[Alpha]"], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               RowBox[{"1", "-", 
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}]]}], 
               ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"domain", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "DerRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<df(x)/dx\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "->", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", 
                  SqrtBox[
                   RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<1/\!\(\*SqrtBox[\(\[Beta]\)]\)\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    SqrtBox[
                    RowBox[{"scaleShapeToBeta", "[", 
                    RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", 
                   RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Sigma]\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]", ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", 
                   RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Sigma]", "/", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                 RowBox[{"DerValues", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<IP\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Sigma]", "/", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", "\[Kappa]"}]}]]}], ",", 
                   RowBox[{"DerValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", 
                   RowBox[{"-", "0.1"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "2"}], "}"}], ",", "0.5", ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]", ",", "1"}], "}"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881100128501431*^9, 3.88110013280828*^9}, {
   3.8811001746212187`*^9, 3.8811003125183163`*^9}, {3.881100359125701*^9, 
   3.881100391216311*^9}, {3.881100440401959*^9, 3.881100511440146*^9}, {
   3.8811006142330523`*^9, 3.8811007584344597`*^9}, {3.881100813299799*^9, 
   3.8811008329318867`*^9}, {3.8811009761527863`*^9, 3.881100986240885*^9}, {
   3.881101171717436*^9, 3.8811011958446503`*^9}, {3.88110126967766*^9, 
   3.881101378766934*^9}, {3.8811014197138042`*^9, 3.881101470137429*^9}, {
   3.881101513783824*^9, 3.8811015266973333`*^9}, {3.8811016213820057`*^9, 
   3.881101645063546*^9}, {3.8811017726496162`*^9, 3.881101775165063*^9}, {
   3.881101838728846*^9, 3.8811018415913*^9}, {3.881102058697577*^9, 
   3.8811020658974247`*^9}, {3.8811020961477413`*^9, 3.881102097283677*^9}, {
   3.8811024496395206`*^9, 3.881102512978949*^9}, {3.881102604344492*^9, 
   3.8811026151008177`*^9}, {3.8811026588487864`*^9, 3.881102660459358*^9}, {
   3.881102765909773*^9, 3.88110277293682*^9}, {3.881103017541745*^9, 
   3.881103042165785*^9}, {3.881103368509575*^9, 3.881103368568424*^9}, {
   3.881103537419341*^9, 3.881103567430234*^9}, {3.881103606514262*^9, 
   3.88110361089336*^9}, {3.881103841724616*^9, 3.881104035730578*^9}, {
   3.881104089052025*^9, 3.881104091061489*^9}, {3.881104155309367*^9, 
   3.881104159915003*^9}, {3.881104232307646*^9, 3.881104234851286*^9}, {
   3.885145668710247*^9, 3.885145674570279*^9}, {3.885145835851491*^9, 
   3.885145861442034*^9}, 3.8851458975761423`*^9, {3.8851462376937113`*^9, 
   3.885146247005601*^9}, {3.885146278844803*^9, 3.885146281050338*^9}, {
   3.885146356382719*^9, 3.885146399555936*^9}, {3.8851464482518587`*^9, 
   3.885146479728002*^9}, {3.8851468717533407`*^9, 3.885146984975891*^9}, {
   3.8851470415443153`*^9, 3.885147131706245*^9}, {3.885147191833992*^9, 
   3.8851471927224293`*^9}, {3.88514722286096*^9, 3.885147313371127*^9}, {
   3.8851474437450123`*^9, 3.885147445031027*^9}, {3.885147502497591*^9, 
   3.885147531494525*^9}, {3.885147572855035*^9, 3.885147573166093*^9}, {
   3.885147648183681*^9, 3.885147671087173*^9}, {3.885147763992936*^9, 
   3.8851477903907824`*^9}, {3.8851481072181597`*^9, 3.885148187908036*^9}, {
   3.8851482451490107`*^9, 3.885148248081468*^9}, {3.88514836258892*^9, 
   3.885148403417306*^9}, 3.885148439104628*^9, {3.885148524444862*^9, 
   3.8851485252570047`*^9}, {3.885148575615932*^9, 3.885148651142852*^9}, {
   3.885148698929248*^9, 3.885148711277014*^9}, 3.885149052638982*^9, 
   3.8851491699686537`*^9, {3.885149236558316*^9, 3.885149238181747*^9}, {
   3.8851492850859413`*^9, 3.885149304358575*^9}, {3.8851493530730333`*^9, 
   3.8851494565522757`*^9}, {3.885149900708228*^9, 3.885149927415313*^9}, {
   3.885150023053043*^9, 3.8851500698419247`*^9}, {3.885150151242325*^9, 
   3.885150155280498*^9}, {3.8851503340909*^9, 3.885150376628426*^9}, {
   3.885150480951005*^9, 3.885150488508451*^9}, {3.8851509663648043`*^9, 
   3.885151043753997*^9}, {3.8851511605739307`*^9, 3.8851512736444893`*^9}, {
   3.885185201698551*^9, 3.885185208735071*^9}, {3.885185567282577*^9, 
   3.885185567901623*^9}, {3.885185669571903*^9, 3.885185689294176*^9}, {
   3.885185810549407*^9, 3.885185816113462*^9}, {3.8851858833371277`*^9, 
   3.885185934991125*^9}, {3.885185972153462*^9, 3.885186017588564*^9}, {
   3.885186070072124*^9, 3.8851862042221003`*^9}, {3.885186245748827*^9, 
   3.885186364771111*^9}, {3.8851864019326963`*^9, 3.885186430637042*^9}, {
   3.885186518831053*^9, 3.885186551021462*^9}, 3.8851869402980957`*^9, {
   3.885187177166107*^9, 3.8851872212851152`*^9}, {3.885187318396853*^9, 
   3.885187345546852*^9}, {3.885187383630319*^9, 3.885187435423347*^9}, {
   3.885187515831841*^9, 3.885187560537628*^9}, {3.885187600673565*^9, 
   3.885187630487739*^9}, {3.885187748423316*^9, 3.885187780154642*^9}, {
   3.885187851418582*^9, 3.8851879472611923`*^9}, {3.885187998499823*^9, 
   3.8851880600558*^9}, {3.8851880932798243`*^9, 3.885188107265744*^9}, {
   3.8851881541606703`*^9, 3.885188199977947*^9}, {3.885188286349166*^9, 
   3.885188289137907*^9}, {3.885188329662655*^9, 3.8851883448553047`*^9}, {
   3.88553399578439*^9, 3.8855340421155148`*^9}, {3.885534638832657*^9, 
   3.88553465058669*^9}, {3.8855347233052187`*^9, 3.88553481008349*^9}, 
   3.885534850758347*^9, {3.885535091324885*^9, 3.885535119487836*^9}, {
   3.885535479360141*^9, 3.885535531442617*^9}, {3.8855355792209873`*^9, 
   3.885535597672271*^9}, 3.885535633785018*^9, {3.8855357224375477`*^9, 
   3.885535805228004*^9}, {3.885536310497335*^9, 3.8855363259402447`*^9}, {
   3.8855363746187277`*^9, 3.885536392047887*^9}, {3.8855364998425903`*^9, 
   3.88553654071001*^9}, {3.885536600395667*^9, 3.885536602857518*^9}, {
   3.885536751980774*^9, 3.8855367971852427`*^9}, {3.885536831890212*^9, 
   3.8855368724254103`*^9}, {3.8855369377775497`*^9, 3.8855370719995003`*^9}, 
   3.885537177075563*^9, {3.885537262061028*^9, 3.8855372758419228`*^9}, {
   3.8855373097031612`*^9, 3.885537420271719*^9}, {3.885537510016234*^9, 
   3.885537511624548*^9}, {3.885537546759593*^9, 3.8855375699910183`*^9}, 
   3.885537775603609*^9, {3.885537816554007*^9, 3.8855378166281853`*^9}, {
   3.8855378474497232`*^9, 3.885537885999897*^9}, {3.885537971912609*^9, 
   3.8855379975441313`*^9}, {3.885550129171794*^9, 3.885550170271324*^9}, {
   3.885550205744316*^9, 3.885550268302496*^9}, {3.885550305589573*^9, 
   3.8855503155715647`*^9}, {3.885550766060876*^9, 3.8855508274775343`*^9}, 
   3.8855531405405807`*^9, 3.885553175978547*^9, {3.885555348023698*^9, 
   3.8855553487078133`*^9}, {3.9000905192165318`*^9, 3.900090537549076*^9}, 
   3.9000905884146852`*^9, {3.900090621145946*^9, 3.9000906247173023`*^9}, 
   3.9000907190315847`*^9, {3.9001023267241592`*^9, 3.900102339714525*^9}, {
   3.9001023719836817`*^9, 3.900102378004861*^9}, 3.90010244246493*^9, 
   3.9001025754494553`*^9, {3.900102606797861*^9, 3.900102607202948*^9}, {
   3.900103503496974*^9, 3.900103517561818*^9}, {3.900608562112589*^9, 
   3.900608562150427*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"762bef3a-d201-4881-9a41-203fe28d49e6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Kappa]$$ = 1, $CellContext`\[Sigma]$$ = 2,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]$$], 2}, 0.5, 5}, {{
       Hold[$CellContext`\[Kappa]$$], 1}, 
      Rational[1, 1000000], 5}}, Typeset`size$$ = {750., {127., 133.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Kappa]$$ = 1, $CellContext`\[Sigma]$$ = 
        2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`domain = {0.01, 10}; $CellContext`PDFRange = {
         10^(-3), 100}; $CellContext`DerRange = {-1, 
          0.1}; $CellContext`scale = $CellContext`betaQToScale[$CellContext`\
\[Beta], $CellContext`q, 2]; $CellContext`PDFValues = Map[PDF[
           $CellContext`CoupledNormalDistribution[
           0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], #]& , {1/Sqrt[
            $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], $CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/
           Sqrt[1 + 2 $CellContext`\[Kappa]$$]}]; $CellContext`DerValues = 
        ReplaceAll[
          FullSimplify[($CellContext`x D[
              PDF[
               $CellContext`CoupledNormalDistribution[
               0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], {$CellContext`x, 1}])/PDF[
            $CellContext`CoupledNormalDistribution[
            0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$], \
$CellContext`x], 
           And[
           0 < $CellContext`\[Kappa]$$ < Infinity, 
            0 < $CellContext`\[Sigma]$$ < Infinity, 
            Element[$CellContext`x, Reals]]], $CellContext`x -> {1/Sqrt[
             $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], $CellContext`\[Sigma]$$, $CellContext`\[Sigma]$$/
            Sqrt[1 + 2 $CellContext`\[Kappa]$$]}]; GraphicsRow[{
          LogLogPlot[
           $CellContext`SFCoupledDistribution[$CellContext`x, 
            0, $CellContext`\[Sigma]$$, $CellContext`\[Kappa]$$, \
$CellContext`\[Alpha]], {$CellContext`x, 
            Part[$CellContext`PDFRange, 1], 
            Part[$CellContext`PDFRange, 2]}, 
           PlotRange -> $CellContext`PDFRange, AxesLabel -> {"x", "f(x)"}, 
           Epilog -> {{Black, 
              PointSize[Large], 
              Point[
               Log[{1/Sqrt[
                  $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], 
                 Part[$CellContext`PDFValues, 1]}]], 
              Text["1/\!\(\*SqrtBox[\(\[Beta]\)]\)", Log[{1/Sqrt[
                   $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], 
                  Part[$CellContext`PDFValues, 1]}] + Log[{1.5, 1.5}]]}, {Red, 
              PointSize[Large], 
              Point[
               Log[{$CellContext`\[Sigma]$$, 
                 Part[$CellContext`PDFValues, 2]}]], 
              Text["\[Sigma]", Log[{$CellContext`\[Sigma]$$, 
                  Part[$CellContext`PDFValues, 2]}] + Log[{1.5, 1.5}]]}, {
             Orange, 
              PointSize[Large], 
              Point[
               
               Log[{$CellContext`\[Sigma]$$/Sqrt[
                 1 + 2 $CellContext`\[Kappa]$$], 
                 Part[$CellContext`PDFValues, 3]}]], 
              Text[
              "IP", Log[{$CellContext`\[Sigma]$$/Sqrt[
                  1 + 2 $CellContext`\[Kappa]$$], 
                  Part[$CellContext`PDFValues, 3]}] + Log[{1.5, 1.5}]]}}], 
          
          Plot[(($CellContext`x $CellContext`\[Alpha]) \
$CellContext`\[Kappa]$$^(1/$CellContext`\[Alpha])) ((
              1 + $CellContext`\[Kappa]$$ ($CellContext`x/$CellContext`\
\[Sigma]$$)^$CellContext`\[Alpha])^(-((
                1 + $CellContext`\[Kappa]$$)/($CellContext`\[Alpha] \
$CellContext`\[Kappa]$$)))/(($CellContext`\[Sigma]$$ 
             Beta[1/$CellContext`\[Alpha], 
               1/($CellContext`\[Alpha] $CellContext`\[Kappa]$$)]) (-1 + 
             BetaRegularized[
              1 - 1/(1 + $CellContext`\[Kappa]$$ \
($CellContext`x/$CellContext`\[Sigma]$$)^$CellContext`\[Alpha]), 
               1/$CellContext`\[Alpha], 
               1/($CellContext`\[Alpha] $CellContext`\[Kappa]$$)]))), \
{$CellContext`x, 
            Part[$CellContext`domain, 1], 
            Part[$CellContext`domain, 2]}, PlotRange -> $CellContext`DerRange,
            AxesLabel -> {"x", "df(x)/dx"}, Epilog -> {{Black, 
              PointSize[Large], 
              Point[{1/Sqrt[
                 $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], 
                Part[$CellContext`DerValues, 1]}], 
              Text["1/\!\(\*SqrtBox[\(\[Beta]\)]\)", {1/Sqrt[
                  $CellContext`scaleShapeToBeta[$CellContext`\[Sigma]$$, \
$CellContext`\[Kappa]$$]], 
                 Part[$CellContext`DerValues, 1]} + {0.25, -0.1}]}, {Red, 
              PointSize[Large], 
              Point[{$CellContext`\[Sigma]$$, 
                Part[$CellContext`DerValues, 2]}], 
              Text["\[Sigma]", {$CellContext`\[Sigma]$$, 
                 Part[$CellContext`DerValues, 2]} + {0.25, -0.1}]}, {Orange, 
              PointSize[Large], 
              
              Point[{$CellContext`\[Sigma]$$/Sqrt[
                1 + 2 $CellContext`\[Kappa]$$], 
                Part[$CellContext`DerValues, 3]}], 
              Text[
              "IP", {$CellContext`\[Sigma]$$/Sqrt[
                 1 + 2 $CellContext`\[Kappa]$$], 
                 Part[$CellContext`DerValues, 3]} + {0.25, -0.1}]}}]}]), 
      "Specifications" :> {{{$CellContext`\[Sigma]$$, 2}, 0.5, 5, Appearance -> 
         "Labeled"}, {{$CellContext`\[Kappa]$$, 1}, 
         Rational[1, 1000000], 5, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9001024503319883`*^9, 3.9001024696085443`*^9}, 
   3.900102576892797*^9, {3.900102617608432*^9, 3.900102631672284*^9}, 
   3.90069692336413*^9, 3.900697137272727*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"9dc3efbd-1bda-4b86-80a4-bb3ab515d07f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of Stretched Coupled Distribution", "Subsection",
 CellChangeTimes->{{3.9003036237780037`*^9, 
  3.900303647131222*^9}},ExpressionUUID->"323169ae-4e87-4ea9-bc99-\
79271dd8ed80"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "CoupledDistribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.900304168496482*^9, 3.900304173265717*^9}, {
  3.900693726131092*^9, 3.90069373075819*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"8b25ea49-8c9c-4af2-83c7-4eb1ca98d6e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", "\[Alpha]_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CDF\>\"", ",", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"BetaRegularized", "[", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]], ",", 
                 FractionBox["1", 
                  RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
                 FractionBox["1", "\[Alpha]"]}], "]"}]}], 
              RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
             {
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"BetaRegularized", "[", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]], ",", 
                   FractionBox["1", "\[Alpha]"], ",", 
                   FractionBox["1", 
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], 
                ")"}]}], 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.900307370048066*^9, 3.9003075459438457`*^9}, 
   3.90069374425983*^9, {3.900696209256369*^9, 3.9006962162855186`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"12cf03b6-fea9-47d1-8e75-b92a240ef3eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CoupledDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], 
      "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Mu]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"x", ">", "\[Mu]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900307571022862*^9, 3.900307583039678*^9}, {
   3.900307635905961*^9, 3.900307637387662*^9}, {3.9006919998258047`*^9, 
   3.900692070183301*^9}, {3.900693858455021*^9, 3.900693878993923*^9}, 
   3.900696771076651*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"8481ab4b-b8c6-4a2d-b3ed-cb02613c6c0a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], ")"}], 
          "\[Alpha]"]}]}]]}], ")"}], 
    FractionBox["1", "\[Alpha]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], ")"}], "\[Alpha]"]}]}]], 
     ")"}], 
    FractionBox["1", 
     RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.90030758391041*^9, 3.900307653421187*^9, {3.900692073951445*^9, 
   3.900692086270444*^9}, 3.900693316132656*^9, 3.900693830277584*^9, {
   3.900693864030427*^9, 3.900693882192415*^9}, 3.900696226038601*^9, 
   3.900696773056978*^9, 3.900697155414688*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"9d6714d0-78ce-4191-a8dc-315e4b420ff4"]
}, Open  ]],

Cell["\<\
Check Definition of Coupled Distribution for negative values of \[Kappa]\
\>", "Text",
 CellChangeTimes->{{3.900694060825079*^9, 
  3.900694080710435*^9}},ExpressionUUID->"0e04f833-3741-47f4-bec8-\
523c2fab40b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"BetaRegularized", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], "0"], ",", 
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{
      RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Mu]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"x", ">", "\[Mu]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9006952300803747`*^9, 3.900695345575479*^9}, {
  3.900695397549553*^9, 3.900695400443371*^9}, {3.9006954763374777`*^9, 
  3.900695480220271*^9}, {3.9006955172456427`*^9, 3.9006955339302588`*^9}, {
  3.9006971675495567`*^9, 
  3.900697172014535*^9}},ExpressionUUID->"7b507c92-57bd-468e-9c7e-\
d077a343cfba"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 92, 4, 31783508982185986633, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9006955414100933`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"b82b4ce2-f43e-4000-8b74-31b6efb954bc"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.9006953566574697`*^9, 3.900695402350791*^9, 
  3.900695483909635*^9, 3.900695541423925*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"bea5f850-9a81-484f-8d3a-67026bc0a8f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"BetaRegularized", "[", 
       RowBox[{"u", ",", 
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"u", "->", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"x", ">", "\[Mu]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900695566675943*^9, 3.900695593848701*^9}, {
  3.900697178892034*^9, 3.90069718083864*^9}, {3.9006972191701307`*^9, 
  3.9006972720401897`*^9}, {3.900697364665156*^9, 3.9006973656292257`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"a117e3fb-60e6-4629-b5bf-ba3b6097f606"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"Beta", "[", 
       RowBox[{"0", ",", 
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], "]"}]}], 
     RowBox[{
      RowBox[{"Gamma", "[", 
       FractionBox["1", "\[Alpha]"], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], "]"}]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{
  3.900695633572897*^9, {3.900697216743164*^9, 3.900697248683879*^9}, {
   3.900697358445643*^9, 3.900697367501548*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"8f2b2071-26cd-414e-bb44-a87c6ad87fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"BetaRegularized", "[", 
       RowBox[{"1", ",", 
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}]}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.900697404653531*^9, 3.900697444652234*^9}, {
  3.900697527908703*^9, 3.9006975279992037`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"9a0c85d7-766c-437e-b040-37718fae552e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9006974459861593`*^9, 3.900697529330101*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"7672c1db-0057-4c17-a927-0a6dd17e6466"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coupled Distribution with negative coupling", "Subsubsection",
 CellChangeTimes->{{3.900710412769024*^9, 
  3.900710431053596*^9}},ExpressionUUID->"1c38a10e-29b1-4540-a3cb-\
c098c7d23b0b"],

Cell["\<\
Reference: 
Li, R., & Nadarajah, S. (2020). A review of Student\[CloseCurlyQuote]s t \
distribution and its generalizations. Empirical Economics, 58(3), \
1461\[Dash]1490. https://doi.org/10.1007/s00181-018-1570-0
https://pure.manchester.ac.uk/ws/portalfiles/portal/78743532/studentt.pdf\
\>", "Text",
 CellChangeTimes->{{3.9007104750714817`*^9, 3.900710478966598*^9}, {
  3.900710537298579*^9, 
  3.900710546432906*^9}},ExpressionUUID->"55a6f4f6-9cd9-45ae-900e-\
b8f034b1a760"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQe4HUX5/1EERSlKkS419E4AUZROFJBOpEhvYqhJQKSIgPTeOwkBQUCE
BAJSBARpho6A9KqAdBCkqPv/fYbnPf85c3f3bJlT7r3fz/Ms5J5ts7Oz78x8
55135tl+z412/uJkk0026iv/95+Ntvv5qiNHbveLjb/+f39suseoXXfZY6cd
f7jH6J122Wnkt7ef/P9+/On//WfcFJNN9qX/+3cihBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQHeCl
l15Kbr/99tLbX//61+T999/vdvJFh7j77ruTCRMmJJdcckly7rnnJieeeGJy
yimnJP/73/+6nbRBwdtvv53ccMMNyZVXXplceOGFyemnn54cc8wxyc0339zt
pA1aPv744+Smm25KrrrqquSiiy5KzjzzzOTYY49Nxo4d2+2kiQw+/PDDZMyY
Mck555yTvPbaa91OjugxytrZTz75JDn//POTww47LPnLX/7S4dTG44knnkgm
TpyYXHbZZe55Tj755OSII45InnvuuW4nLQpln2+gvFefhx56yD0P9u/dd99t
2vfZZ5816rKLL744Oeuss5LjjjsuGTduXJdSG5eB+D6FEEII0Vv8+9//dhrp
jTfemDz88MPJe++91/E00La94oorktdff73j9y4LbfHJJpus8jbddNMlm2yy
SXLLLbd0+1FEG1lwwQVT3z+6jmg/119/fWr+77TTTt1O2qDlhRdeSH0nK620
Uu1rowlMPfXU0TfqxsEKbYHpp5++8Z5mn312Nw4rhFHWzm699daNY77whS8k
l19+eYdTHIdtt9029bkHyjhn2ecbKO/VePLJJ5MvfelLjWdaaqmlkk8//bSx
n/GXtPxZcsklu5jqeAy09ymEEEKI3gCfTPxXhg4d6toYYVtqnnnmcT4tb731
VtvT8sorryQzzzyzu+/RRx/d9vvVBV3i4IMPdtuoUaP65N3w4cMb+9kOPPDA
ZMSIEcmqq66aTDnllE3Hrr766tIlK0Ce7rXXXj19b/w999xzz+RrX/uadOgu
8OabbyYHHXRQsuaaa0qH7hHwsTr88MOTzTbbLLoOjR9aaItnmGGGZLHFFkuW
X355t0011VR9jrF9iyyySPL1r399wOpKVTjvvPP65Ac+f0IYZews7cmwDfSj
H/2oC6muz2233Zbsu+++ydxzz90Re4F/8n333deWa6dR5vk6+V7xzd1+++2T
W2+9tS3XN0aPHt3H9t1///2N/f/5z39cf2WbbbbpFzp0mXwbSN+pEEIIIXoH
tIBhw4a5tsWXv/zlZMMNN3RtLnx0Z5pppqa2x4wzzpg8+uijbUsL/gXf+c53
Gvc79NBD23avdvDqq6/2aav+7ne/yzwef/P555+/6fjVVlst+eijjzqY6v7P
tNNOm3zzm9/sF/feeOONpUN3Eca5pEP3HtNMM01UHfr4449vXA8be8899/Q5
ZvHFF28qC9///veb9v/3v/9N/vjHPyazzjpr45hLL720dtr6K6eddlqf+m2t
tdbqdrJED1LEzr7xxht9/B7wu+zP+HanXTr0M88848bQpphiCqf7d5Iiz9fJ
93rCCSe4659xxhltub6x2267NT0Pz/fss8+mHjvbbLM1jltiiSXamq6qlMm3
gfidCiGEEKL7/OQnP3HtCny/wjm2zDUzjdo2NLfHHnusLWnZY489mu410HVo
eOqpp/qcs88++3Qoxf0fYpRauewP995iiy2kQ3eRf/7zn9KhexB8lWPq0D//
+c8bGjTvPI1WOrRB/BC+cY4hLupgBW3R11jYiCslREhRO+v7j6Ktpo0X9SdO
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
8MILJ7fcckvTee3K56rpyarrsdW+z4FtxBj25wzEqNehlZ1lTCUtnWn2eNZZ
Z+1zHO+cdUvCtUtsXwhxZBiz8esx8mP55ZdvrJHC86FPZ42tEB93qaWWapzP
e0Wfp53E35R33rOflro6dNZ3Hm6MfdUlxvOVea9l60feYZG8sM2nzneBjpp2
btb36+vQxDC087GJjN/53xcb35eNH/qk2Ra20MfBb6OEz1Y338q8T6NOuymr
3YffNvWFfe/kscW4tm831NCFEEII0b/BP5r+jt8mQFuqCz41tB3oM1q7f7Dp
0PgMrL766k3H0yYO+3e+NkFbFt9C48EHH2zqp5Gfob8E/jRXX311stZaa/VJ
34wzzphceeWVDf8w9EB8Uvxj6OuH1E0TPmrTTTed24+/R9ge5Xq2fqOv06Ft
slY3m99XoX9pv9uG/44POo//XL5WiT+R31fhmfCR8alzbyPUofFdoX/361//
uuHTRH/QP2brrbdOvRZz4/104LdEn8Pgu6KP47f9n3zyyaZr8B3SH/A1BttI
q8Xp+eSTT5KTTz65ST+ea665XNlqR9oY57r22mud75+fplCHRsfHvwZ/qqx3
61NEh8bm+X1P0hbGIUL/QZ+3Y3wfSKhavqtQt1zDI4884vyVbVyKjX7jjjvu
WLl8kgd+n3zIkCHu2zDwJ8Mf38Y7bOtlHbpOXlM/8Pz77rtv0zVY64/fyQ98
HPl3aKvvuOOOJt0Df2t8/Ojjsx8N59Zbb03efvttt78d7xPw57Zj0uZO2Vgd
ZT8tthQ2xO5TV4fmGexafIu+Pytj6/7YB355zL0wzfHYY49tHHvVVVc1HUte
mq3iu6VdYmWU88kvox35XCc9WXU9/pTo4OQLNtTf53+Tdet1o5WdpezccMMN
bi5OK3ts2jF6KM+OXTGYqxfaD/ydfcg79FTbT5vH1/J4BnxxbT+aWVi2GUPy
70O68eEwKAdpumFdHZp7oAVid6iD7LrUi/zGRrlP82svQ6znK/peq9aP1r5i
vMC/Pr7AYRvMp8538dxzzyVXXHGF05D9/UV0aNuYS2a2mWdFg6c+tP3o8eG3
lGZb2EIdGjuKfzL+A/5xvp9A1Xwr853GaDdltfvwY2dcBB8GmxdEPvrx8RjX
Dtu3QgghhOi/hNowbYi6sYtpE9KnoF3x2GOPZd5rIOjQzL/DR8025hqef/75
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
P466m3qE/ER/I/4y5ZXvN22NtSeeeKJJPyNmO7osfrrUaaZfc76fFsZjeEby
sCr4C5t9QCvn22dsi3z3330dYj1f0fcao37kPfvXYE1K2gGkERvpa6B1vgvW
pmE/mql/LuMd/B7qqNaWol2DfeDfnMv3y7Ph52FxzNnQ/fPaUozzWLvS7D/j
ncThJ74J7RTmL6Ap++nDV542V2jDy+Rb0fdp1G03Ed+D64ZjxJR1frdYWOQj
f5sdtI3xJn7PizMvhBBCiO4TxlQtuoVtD2DdEdbJoC1PjI60vnQIc7dp+3AO
bTb8mNgsxh9tXPyb6I/16jqFZ511ltPY6LPZM5B+/xno89CPoG9ahQcffNA9
P7G3/feArkNek48fffSRGx+gL2G+6Wgahx12WOM6oQ5NX46NdrD/O21HtOkw
5mTMNOH7yr9HjRrl+pphP54+CO3UK664Ijdv6JfR7vS1LPKb64e+isTJoP1O
3z+MNUn72+JN0pamj+HPBeZdhnE2ytybe1LOKQ9+Ged4yrfp1ujZlKW04yhn
af0V3hN9arQAvhdfR6Dvjd9Uq1iyYUxDdHbmu1tcSv969NvTYo6kESNtQHkL
fdCtf0Ifh3nlaWudMlcUmLdK/pGPoY3hGZlvHMIz8i7pt5E//vX5Zog9lOY7
BLHKdxFilOt2lk/e3VZbbeU0SD++BHaGOcdoIGn1DOmJBfFFqWtsfYO0+sbK
A8/HcRwfrgUY24YY5hu30UYbpe5He7J5z+gYrWjn+8yDbxxtlLqGbyqMJ4JO
wDtPW8O1LMSdD69fZAvjChtolWhvod5EPqIDUxZC/7525nOV9KAZUtf6bRG/
XFOmiXWURd16vaidzTqOdHPNgw46yB0XrolbZMvys2cMiHeP5hyWG+z5euut
53S3LIijQF3D+dQ7/vtAV6Q8hj6ztqHj14FxLvKLPGI8GF0yy3+2KjGer+h7
jVE/0sZi/BpN1D+XtkY496HOd4GvTPiNW9+E64W+ztQDpN/mrKCtowfXaUsx
FsGzoi37z0q6mWNB/4s1DtPeTWhbyuRb0ffpU6fdxHhrlv0gz7CFwPnY1yw7
02q9TSGEEEIIUQ5i5qHbEA+z7HzMvHUKuS6+NVnrS8VOE21V1sD0oY/L3D6u
UzYdtK05n/m2rXwFgXQyX5f1N+tqImXv3U64P32J559/vtR6XVlr63A95kiW
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
Pvjgg+Tiiy9O9txzz2S99dZLdt555+SUU05J3nzzzZbXf+ONN5ITTjjB9fHX
WWedZLfddktuueWWUmnkW914442TV155pdDx9NPQkCy9O+64o9OTnn/++cxz
6M/NP//8yaKLLuo0AjG4aIfdEv2Ttddeu6ksLLHEEn2OIY7P3nvvnayyyipu
Lkl/gvH3Nddc09lxxSNK3Pgr73nFFVdMrrjiisZ7v/zyy9t2zzvuuKNP+6SX
y9HTTz/t+hb0AdGe8d1go2021VRTJT/60Y+cVsZznH322d1ObiYDwc4ffvjh
jfTzLgYTRd5ff7HNeekcMmRI03PS/u11VK8IIcrCGDb24p///KcbczObhw3k
N/MjRIfAT4wx2Pnmm88d87WvfW1Q+4m8/vrryeOPP972+9x3333OdzcL3h/6
CjqSdOji/Pe//03eeeed5KqrrpIOHRHmTOBXvtxyy0Vr59PH4VrEjTjwwANd
f+emm25K7rnnHucX4bfX2Mfv7P/Nb36T7L///snUU0/db9pynQT7z3v65je/
mfzjH/9IPeauu+5yNh9fYbTkDTbYIJlxxhldfn75y192dUIWFutjjjnmSI4/
/njn+7XJJpu4c7lOnt5L2h566KFk5MiRzlebc+6+++6Wz3Trrbe6+80777xO
80Yvx39r8sknT6accspkr732ct9+GtzvS1/6UjJixIiW9xEDi3bYLdE/oc37
wgsvuD51lg49duzYRp2z8MILdyGV6bRqLwK+JJZ2bPJgZuLEiS4fZpllFpdv
t912WyNvDjrooMrXbdU/sPYn+d/rOjTjupRx6tC0NNI3nH322RvPkadDFymf
7aSX7XzRPuUOO+zQyGvaYt0G/wDa2Z2YT1rk/bXLNscuu3np5D74iCyyyCI9
0XcZrPVKp3QeIUSSPPHEEw0bsv7662cex3fJ3DWO++IXv5j84Q9/6GAqewfm
RK277rptv890003n6oBWHHbYYe6dUD+Lcnz1q1+VDh2Z0aNHR2vnM/9z+umn
d7YnDbRD7sV7TAONFT30+9//fu20DCSsHYwtS+O5555z4434MfttUPRj02io
A/A9DnnggQdcv3XWWWd1mo4P/XvTokPefvttF6sZHyt8r7i/1UutdGj6J1/5
yldc2hg79cEn265D2cwC/yLSjSYtBh8x7Zbo3zDvO0uHvvHGGxv2pJfqlSLt
xe985zuNtJedmzLQ2GKLLfpozoxbUufhA1yVMv0Da7+gifciv/rVr1z6dt99
98xj0GpmmGGGljp00f5Mu+lFO1+0zDzyyCMuLsriiy/uyk6WD0GnIM3kJT4D
nSLv/bXLNscuu0XSSZybXtChB2u90imdRwiRuDWazIak6QM+/hg+vmeDEfzq
2m2f8Jcgj4vUfUceeaT8oStCHSsdOi6/+MUvorXz0SX322+/zP34uXIv/J6z
YP7bQgstVDstA4VPPvkkmW222Vyevfvuu6nHMD+dY4itEYLOy9gA+Y5eHPaF
zF8lTeMm/gf+Z2nfHL5XxMTjd66JX3tRHfqII45opCeMp4ePI/qyzeX59NNP
U69x//33u2OGDRuWey8xMIlpt0T/BtuVpUPDqaeemowaNSp56qmnOpyydIq2
F9EM99hjD2dnBzsLLLCAy7Pf/va3Ua9bpn/AvKJe9ofGD4D0sY5EHsS4ztOh
y/Rn2k0v2vkqfcqZZ545s/3WCWhXWfk977zzOnbfVu8vtm1uV9ltlc6f/exn
XdehB3O90gmdRwjxOWV0aHQJfy58r7TDOwmxRNttny666CLp0B1AOnR8Yrbz
0UqZL5tFER36hhtucP464nMsDibt3DTQqS0exj777JN6DL9bHUD8aIN1vkwP
fumll1LPpb3KMawJlUcZHXrrrbduHIsfSci3vvWtxn7mPGZBvD7SnhdPWgxM
elGfEN2hlQ7da5RpL4rPISYVeUZs05iU6R/0sg7NmDFzk4ro0MRnYKw3S4fu
pfLZi3a+bJ+S+V/EQ+kmfhybOvMHytLp99etstsLOnQvfbedphM6jxDic8ro
0MQk9nXoXmw/tROel+dup3367LPPGvNcpEO3F+nQ8YnVTjRb8+KLL2YeU0SH
ZqwMbZHvSiTJD3/4Q5dnrAGYxsMPP9xk48PYGoD2bPuZy2wQC5rf8NXJ4vTT
T3fHsEZi3jspo0Nfc801TjvHTzucF8g9LMYH5STvnqxpGM7VFoODXtQnRHfo
Tzp02fai+Jx26NBl+we9rEMTx5o6mvQxztsK1vlN06F7rXz2mp2v0qfEj3ab
bbZpX6IKcMghh3RlXnQn3183y263dehe+247SSd0HiHE/6eMDo0mYccSH/TN
N99s2s8aU+gYv/vd75IJEya44/mtFe+9956LSer7oREvlHhYrJtYhKr3xsf7
zjvvdGubjR8/3t2PuefXXntt03HM2/7GN75Ryj6VTRNznXbZZZdGHlfVoalD
eK9///vfC6XT4B3gL4n/Q57+B8xvf+2115K//vWvLt12X8bquXfW/PcsWIfi
9ttvTy699NJk0qRJLdfdJW4taczyu+T8l19+OXn00Uczr1FUhy6bNst/3jma
3b333ut+p5y1yteiVCnvpItYy/it8kyGvUdiI5SFbxZ/GCNWO5E0sYZH1tpy
UESHxr8XPcF/Xr559Eq+ed5NN9bPwcaQd3xzBvnPHLey321RKLfkGbGUs/RY
5npa3EpiaKSVCeYym41C1zbWWmst9xt90iyuvPLKxrl33HFH5nFldGjg/fKu
Q/CHt+v84Ac/yL0G61xy3LLLLtvyfkWpayd5JuKUsCaUwXuknLT63vuTPa9q
M/lWWHOWmGHY+6K0y26FVG2X1IE47rSd/Lj6lCPyiDn0fBNpcAzfAPmPfcQn
MotY9qvMPbFN+N7565yShrAdalTN+1Y6NGWbMpk2RleHdrcXqUup+1gTxr7x
LMp+v92oz3zK2DqIrUNX6R+k6dCU5bJtsao2sBW2TjTj+GeddVbusfRDWCvY
p2z55NunfFIPpNXllN+33nrLzWmiripCVTvfCVtYpczgP8B6KORRGkX7s3VZ
bbXVXLp/8pOfRL1uSNn318o2F21nlC27ZdtprdKZpkNjG6jX0UZaUedbame9
AmVsdTv6rHlU+SaNsnWmEOJzyujQJ598cuPYlVdeuWkf83TQH9Au6O/bWBp9
+qy1n1ZcccXGHHCzucTwX2qppdzfFteTOLH40WW1yavcG1u+/fbbO01mvfXW
c3b3e9/7nrNBzOOmnQrYavojvo8g89Xmmmuuxpa21kDZNLGeFnqafx/W+vLv
k6aX+jo0/bMRI0a4Z5pzzjmdnsS6ygcccEBuO+qMM85wz4vfIO2LBRdc0F2T
db8efPDBpmNp75p+axvtNe5L+4jxCX7j3j/+8Y8z20sGOjL6FcdzX+5POoil
cPjhh/dJ96abbuqez+4977zzNu3fddddG/MJ7V1l0UqHLps2wDeT9YOJSbzt
ttu69c94d8zzIW/I67qULVu0XSnX9Cf8tgVaH+mcZpppXDnhOYkJSF84D9ob
9FHIB94F/+cbPfroo1085075KxTRoX1oj1k5HTp0qHsGyj3XQZ/xtTbav5St
xRZbzOUrNok1rPmNvgX/ZltmmWXcPjTzlVZayZ1Le8TOZT/ryrAfW0L5tf6n
tXVor2B/SAf+Jdi9It9tWegnck/KSx5//vOfXX6w5mAatn4RG3HUDMo5v2FH
s/jTn/7UODcvnlxZHToLbBDXYL1Kym0evH/KBvnva11VqGsnOZ8027l8u4yX
cL7VmZSVtD5Cf7LnUMVmUo7YT15wP+o78mjVVVfN7Nt12m5VaZfUgbWjsTnk
g7UlaJvgp4j9ob1FmSJP/bXgzf5gl8hT4tPw/ihDzHHwiWW/ytwzbCdyXcoo
NtZ+23HHHZvOqZP3WTr0z3/+86a2RbifMRu/vRZulDcr16Etamd7EY2Ae9u3
HLPN0836DMrYOto1ljeWXubu2G/YvLJU7R+Ar0PT76E9UaYtVsUGlsHv77GR
Hn6jPOb5B0CZ8pnWPh03blzjWmh7YfnFZmdRx853whZWLTOMw/GOWZs+pGh/
tiro2uShpc/65rxj+22HHXaodQ+jyvtrZZuhaDujTNkt204rkk7wdWjSTd1A
WcNe8Tvx7c8999w+59X9ltpVr0AZWx27z9qKOna8SptXCPH/KapD0+axeVrU
a/76VNQb1LtoO/741NVXX+3qK77PtHVU8fs46qijGutecRy2+5e//KW7JroR
45Z237R1eaveG/uOHQtjW6G9kJ6ZZprJ/Y2mhB1ns74BfTr7jY26qG6a7rrr
LnetY489tvE+DjzwwKb7+OPthunQrA+24YYbuj6MjR+jpfEc7KcdEULaOIf9
xGv108r4MPoEdQFjkQZpOOecc5L111+/kU6OW3LJJd27Mj/lLbfc0u2j3smK
H8Z4KNenTqF8Gbx3W8+c9pQPfW3mz1t9TP3gQ3+OunS++earpUNXSRtlh3dL
OfXb6Yyf0EbjHMZT6lClbDGezDvbbLPNGu+M2F+0L8aOHdtIq8X9pS7N6mew
vgZtQ/KG79fGqCm/XM98aXtRh6adzvG06wza9quvvnqfNKNDsv6K7WNjrIf3
xz60nY022qixj+/IvjHG8Pfdd9+G3aIdyt98G5TfY445xuWV9V0oG2W+26pY
3AxfO64C7UB7buyEYX4E5FkWlBM7l+80i7o6NO/o4IMPdudjz1vFuDQYS+Cc
vLjkRahrJzkfHzTKhZ1PvUh/BD8QK/ubbLJJ45z+aM+r2Ey0EGwdfXKb78Lx
5Je1T0K/wE7brartkqpccMEFffq8vHPrU1r8HOKn02+08YRXX33VjZNxDPbf
5klQZ6Bp8ztzsI0Y9qvsPXlfv/71rxv9ffrotN3Qi7GrVm6tLNTN+ywdmrLC
Pos3H+7HTvE7z06ZRSvn22HcEv8oSyf1q+831u72IveiLkN7ydMLqrbHulGf
VbF1+BNa3vhlyX6rMjZUpX9gmIbJuC7luUxbrIoNLAvfpcXxCjfaNrxr/BrT
dJYy5ZPvHk3NxozZxowZ07gW82XZj+1K08586tj5TtnCqmUGjRs7n0bR/mxV
sGH0GUjbnnvu2XgP2Dl+Y1+W30IZqr6/Vra5TDujTNkt205rlU7DdGh0WGwZ
tsH8ZPjel156abef+s+n7rfUjnqliq2O2WctQtVvskqdKYRoxteh8d1jbN42
5vVgs7Az1mairg3rOosVxXbzzTc37fvpT3/qfsduZvkzmz7ERj0UwtiY1T/o
1nXvbestZsU9O+KII1LrbeuLt5qvUSc/yFs7t0xcDjZ8Z8I2oaWZMcMQ6hf2
0dbMaktamzacX8YYoN0Xex3GT6FOsLqHsWx/3AI43sYffC3LP9/awGnj/6NH
j3b7Qh3aOOWUU9z+Kjp01bQxBs5vaeMF1Nn0ferq0HXKFu0Yvy9BP9eHWMq2
Ly1mIT477KOdmNbmxAfHxgd6TYem7WN+COa3bFCWzXchzBP0TCsLoX5LfuK/
Zm2kEHxgGBdPix3jr/WX9t1aGyZm3HfTbOjDVoX8sXTjD+RjPjL4N2TBPEg7
H504i6o6NPMhsAnmo0Eb0Z/X2QobW/Db7nWoayexJXY+9oPrcQ7Hhv3i/mjP
y9pM+mDWFkgbW7C55L5vYzfsVt02URnQ1ywGOv1CH+Y18DvtGfITbQXfH8P6
efgch/045qiyDzsblpc69qvqPf31SG2dVdPfqcvpY0PdvG8VlwNNPG3/xIkT
3e/ozz7kDX6VVgZDvbNT7UXOtzozVpvH6HR9VsfWgcXlYA51LIr2DwzflzZs
d/jvNWyLVbGBVWEcEr9av90YboyfZM0fKlM+uZcdm1X/4mPI/jQduq6d74Yt
LFtm0qjan62KzYfL6ntVJUY9nWWbq/TNypTdMu20vHQapkPTpg7j3QDv3K4d
+ulD3W8pVr0CdWx13T5rFYp+k3XrTCHE5/g6NPNwae/6G/UqY62s3ZT2rYHF
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
MWx1neeoQpFvMkadKYT4nBg6tNlUNuw86/oa+He0aveX9Yf269Qq98ZvhXk4
BnH3aF8QT9/GvNnCuPdZ9onxMObIxMiPLPvP72njblXbQBbXlnosj5NOOqmR
HtYTMKr4z1lcb9pL9hvrTefButwcF8acbfXc6Iut+j1pdWedtOGXZholGgDt
EdJBzCubS1l3nZ6631rVOp313+zarA2RRa/q0My5W2CBBdzx9PfDNifviH1Z
OrQ//k0bBLtJn4Xrsia6tf2ZB0s7mvedNb8TuqFDm88PczaLgm8C+bzOOus0
1i43KAf+fE+L2UCcvyyYy2n56K8vHVJUh8aWE5ubdu6oUaNSj/F9LdJ8tnx2
2203d1zaerlVqGMnw/Mpg1n0V3texmYyj9buw3zPInTLbtW102Wx+o6N75x1
cZjrwd/EHEpbR2y11VZz+9FJy1LVftW5p7UTs+JbGHXzPoYOTf1p9wnnCzMW
6q891cn2Yuw2j9HJ+qyurYNO6tBh/8Co0harYgOrQF3PPYg93ArinqbVXVC2
fLbKE+ufxW6fdsMWQtkyk0bV/mwVrI3nzwuMQax6Oss2V+mblSm7RdtprdJp
FNFEeA7rd6SNM1T9liBGvQIxbHWv6ND+NxmjzhRCfE5dHfrFF19s6EFpMeax
YX47mvH5vffeu2meUBGbi2Zh1znqqKNq3XvSpElOuwp1FeA3840M4/5k2Sd8
H20Mr25+ZNl/9J608bSqbaCdd965cZ9XX3019VywdYbxRffzq6huYWuqML/U
1nhDp7P6E10jCzQ+Ow5/VB/r52U9N/5Erfo9aXVnnbRRLvAXTIP4Z+iW5GPW
2uKtiPGtVa3T0eXs2nnzznpVhzafHd4B33+IxT42HRpfz3Atetaj4Jj111/f
+YX4c+HM15i+ITEs8JXOoxs69E477eSuGa4LngUaCP7fzEkN45YC66b7fpYW
W5n3koU99zTTTJN6TaOoDu37JbCF/lhgMerYiMGSx1ZbbeWO47oxqGMnw/Pz
+jf91Z6XsZnMZ7AY5K20SI4lfd2wWzHsdFlWWWUVN95CnrHWKrFjWR8vLwYP
8QqLlC3SFcZsrGq/6tyziA4dI+/r6tDYKyunjAmE75WxMNZFi5Hesu3F2G0e
o5P1WV1bB53Uof3+gU+VtlgVG1gF06Gz0uZjPkLks2l9RtnySfnIui/PYjFZ
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
9009H1+QDTfc0B0zfPjwJt8Q+ndck7Y87VmjSr6D6dDLLbecuyd9CfMpwfdh
pplmcvvxo6gCPjJHHXVUMv300zf6WbRTab/Th6CdjA8NGhz7R44cGS1PgHJB
vyZsvz/wwAMuTTyfn4cnnniie/ehdozPjuWj9bXQm/z8pa9Z9FrnnXdesvXW
WzfeFeXwpJNOavI3mzhxouubsZ9+Plql9cvaWX6rfI/ocsccc4wb+zB9d4cd
dihdnljXke+Vd0nZMV8p8pNrW/+sat8yRjpfffVVp7Gyf5999nG+XYB/F/1O
fj/kkEOazuE5KC92Dj515Om2227rfkOH4Pukv8b3seWWWzbOLfs+ypZV/PIo
j5aWUIemr0zZpO9t+7fbbjvnX+nfc+edd27oCyuttFJyyimnVM6voqB10m/m
GuSZ6Tfk72677dakNaZpdlW+I+qRUKfEBpkeTd7ATjvt5N4raaIso+dbeqgj
sEvYCOoBS6OloWrayp5Txj6WgbLBN4yuhD5hYO+32GILlxa0PR/89SibVg7R
tqy84oNo5aYV+OvZeX5+22/oY3xr5AnfveU9dRKaGr6L6DT8tskmmzSuW6Uc
VzmnbpmuUleSnnPOOceNf9m1WWcCO0n7xbQ2noF9jIsyn4PyQZmzMQVrf6C7
tWtORRp5OnRZewixvwvKG/mLL4Slk/dAPtL+YQwEX3XeN/vQCrM0x6rlo8h3
UQbab3wn6Jt+Gbv66qudDaKu5pv2KVvOGDtJ03mh3W0F4HuhLFOvHXzwwY1y
znfMmDLXZxzZp873G8sGGlXacp2qq4QQQggh2gFtaN/fIQvar+Y3inbhQ3vO
xuVp26aRpUMz35DfGZf35+oB7SRro/paioHPAPuq+If4aaJdduutt/bZj9aI
zwbHpPlDoR9bfyrNH5N2trXtwhgCRfPdMB3afFjC+1m/CN+UOlh7mI3+Qwh+
MvZO0K1DquQJ+cxv6L1pHHHEEan9SdrgoXbsY3lSZG5v3rVop+OHzn7fd9SH
9ezZ7/fn2ll+636P1n/MKk+mQaXFI8dPnn30Lenvh6DR2pyCuj5OddJpfWj6
mmEfmbnf7KN/7n+b5ptFP833+afvjFbn2wL0AktP3fdRpqySLtPf0uZOMBfd
8uzKK69MvQbjJvh7+s9YJb+KwLXwUeR87pE2l8LyPa3PX+U74t0wJsTvaPc+
+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
Os/pa1DeXSBOfbf0tetC3e+OeMehg+0T9Xvk5T5x+g1L35e7w+kXUb/XfWUW
O27Xrp0dn76erepoKG8qnGU5VN/AeU5dv+fVP+Gnn37qd9pYHr/Rfh4jPZ50
fa68QY0L1H+7KM8okXFo9U3kHItPP/10wOUrN0h1ER2KW2pZqjsZjmjfj3CO
VQk1Du3EAhRL1Oc2UPsi3V+hUB9ZTixNcU1/lC8X6Jo/0s+R6hqnv78ZqlCu
7SNtW7jzRHp+zIzOv5pPuaOBqN835/hJ/74kYxw6kuM4knmiPaaj/f0gsYxD
K16n+KvOL+n7totGqHHoUM6HsfpciO/x5u/8K8olcPIo0ueqRnt8OKKNQ/v2
1+rvd4r6Z/GNQ+sZEf3fNw4Z6XEWr98K+i51zlG++fG+VHdZzzM552Cv3h8v
zoFeXVvF4rsKAAAgVvQcuvNbceLEie7r6lvb9/pE/b5oGtXQSM/32T4nN1R1
11SDzuHk/6Tv40vPVjr1GfU8vG+unfIRnOcrVYfPH/2+rVKlSoa6HqFwfr9p
+3Utmp5+uzo19fxdnzr91tWuXdvvM9763a7xypXZtGlTmnGh7neHnikPlvMx
ZswYO171a6Phu09UcyI9/c538iq82ifO9aSuMf3lYTjPkKevY6r+2fW6rtX9
cfrJ0XHl0DW1cmH03oazLF99+vRxj3ddIwTqCymWx2+0n8dojqeRI0faccpD
Uo2W9Jw8NU2TWZ3xzETTzn79+tlx5cuX91ufUvWB9Fz8pEmT3NdUR1PzKO9O
1+26/tTz8Do/rF+/Ps0zzb6ifT/COVbF6V9KccJgNK9T3z79uSa9SPZXKNRn
ouoxBTpn6DPvxCI0pM8/jPRzpH64VAv7pZdess8lK/anc43OYcHqlYrzfeUv
hzDatoU7T6Tnx8zoWZ9SpUrZed96660M4/fv32/vy2m8nrFPb/jw4SGfMzNT
tGjRoMez6h45x4c+T8FEchyHO0+0x7RE8/tBnO/hQP3HqR8OjQ/UT6E+Hxqv
/Nf0Ro0a5bZdtUG84ht/D9avXCjnw1h9LsQ3Dq3aY/6+4++++247Xm1KH8v0
4viQzD4XmdHx6qxj3rx5Gcbr+8gZr+dk9MyM4s6+2xvqceb7bJwjHr8VFDvV
M4TBYtl6D/Rb/sSJE/Zvr94fL86BXl1bxeK7CgAAIJac39O6LtHzjKqzp99s
6sfE8cQTT7i/hxT7cXJkVBNPuQDOeP1u1m82/bbSs2PKf9FzZE48V//qb70u
ur5q0KCBu2zFpMeOHevWk1OOhvMMnX47qW2ieFCvXr3sb9hAuQqZcWKuuo7R
Onzrsuka3ckXUp6Bv5wg/VZv3bq1+xtyy5Yt9nXtQ/3+VyxX7VOfUJHud10b
KEdabXTyN7T/Fy5caPeB9o/ydZy6xRpUA1A1ERVHiHSfOO+lb6629o+Tn+Pl
PnGuJzWorxbfWJ/yxrV/lDNy8OBB+5ry4bR9Wr4zn67Z0+fTqw+b7Nmzp4mz
KN/1kksucacJdVm+tE3OcpWvG0ysjt9IP49eHU+qb6BxNWrUsDEah+paOLm6
GnRNO3r06KDPNvvjVTtV21njtE90nDnX1zqude142223pVmv4kFOrUZ/g3KJ
br75ZjN16lRP3g9HKMeqjn9tv173jeUoXh4op0uc555V5zdQHD3S/RUqXQMr
xqdl69rduc5VXpZqn/juY+VJfvLJJ2bz5s3u/JF8jnz7ePM36H1WDM437pj+
+0rr1HlL75nORf5E0rZw5gn3/BgO3WvUMx36fCl3UveFRf3xOZ8t1U/2XbaO
aR27zve25tV7+tlnn9njOFR673U8K6fQqf2hOge6F6TziL4zdFwrr1WfbWcf
6HjR59zfvWNHJMdxuPNEe0xH8l2pc5v2me5XO8tW7E3nQh1TOjY0Xudc53xy
6aWX2nOp3lO1Uft2ypQp9lym8fpO1zqc+sbiW9v3zjvvDPk99UcxXa3z448/
ThP31HGnc6WOm/R9n4ZyPozl58I3Dq1Bfbs5nw2d253Yn3Js/cV3JdLjI5TP
Rah0/0bPhWgZl112mdsnuOKxuveiHFzVL9J41adR/F/TRXKc6Z688ufT92cQ
698KonO406+DPlPObwC9V3rWTfeQ0ueDR/P59eocKF5dW8XquwoAACBW9JvN
uR7S7xD9blVNMt84o/IDlJvo1CTQbxn9hlW+mdOvnp51c34363e7rrN0ra9c
Rf3e1Dxatq5/FF8S3dfX9ZauSfSbXstTPTvfHB7lr+kaUMvW7z3laClHSHlE
q1evjni7FYPQ9Z/aqW1Tu3S9qd9+2gb9rvWXJ+ZL+0i/1Z39oms6ba+24YYb
bnB/90e639UHtn6fa79o/2ga/abWa8pdUW1Prct3vPaNclj81YHNjG99aOVB
6T3Te+ibs+71PlFNPL23ffv2NRdffLHdBv2+V20Qbaeuf/QMrENxQN99on/1
t+4bpKff6047dM2hfed7nRPOsnxpPi3LX45PerE4fiP9PHp5PCkuoFworaNm
zZp2/2rQdZ8T+/QdwuFVO7XNyod1craU/6nPuOZTXnv6vB8dL05+kmorK+6h
eIaOf52jfLfHN48q0vcj/bqDHau6vtW5Utup7dV1qf6vY8r33lV6+nxpmaHU
gQ13f4VD9xadz4Haru8Anff0+da1b/rjRXESX+F8jnQ/wYkral/p86zpFAtR
bMqJnWjQPnf6GdW5TseY0y+lYvd6H3RcBcsLjeQzHuo84Z4fw6WcO/XbqHXo
O9Cpt6pjQPmM6Y9THbv67Dnf2c5nT8em4oGh0j1ozaP9q/3snH/1XaHXFfPR
d432ve8xr/Vqu/V6IJEcx5HME+0xHe53pd4r3/3h+5tJsWPF+bRvtE99x+s1
3bNSjE3z6n129rmOda1T5znf7dJ3vc6F6g8iGnoP1T7nN6COL22n/tU+0/7y
V9cgs/NhLD8XvnFoPUOi5eq407L1r/af8qQz+/6P5PgI5XMRDt2v0bGkNmjQ
uVD7U99t+i7VvSin9oPeF92Dj+Y4S9+fqcTyt4JDnxW9Jzq3a19pPTrG9D2e
vo9PR6SfX6/OgRLNtVW8vqsAAABiSXkMypsJVn9R1036raLplA+hZ+J86T68
ftvGgvrPUD9+ymtw7uN7SXkzem5Uyw+3Ly7llyinRzkTetbQyZ0JRSj7PV7S
91Oo37u6jonlPlEuhva7Q7+TNY/eaz0/GS29r7oOUS5PJDni/ugYD1SLMJBY
HL+J/Dw669d+UBzUeYZBdEzruWhdz+qaNbM83FjTsag4ro4rxan9PcetHEtd
w+n6PH2f9Q5d6zq5cLqG27t3b5rx0b4fsThWRTmlzjPJoQhlf0VKOa6KbSmm
5OT26TyjvEJtu+qf6HMfaJ2ZfY4UL1T/U3qPVLPUXy1M1f9WDqgTf/Gqr7ZI
PuOZzRPr86NDy1LsRfE/Jy6f6iI5jiOZJ9pjOprfD1lZsPNhLD8X/vop1Llc
nw19p4VzLpVojw8vqD9M7Rvlpaf/7eI8Y6R+CmMlXr8VnPOYjplQj4NkeH/i
/Vsu1tdTAAAAQKjSx6GB04XyuHTsB3ve36FnlzVtoD6skDiKG+i9CaWGiOJK
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
WN95n332WVzi0KVKlTK9e/eOybLVH6Par5pZOneo1pbOJ3fccYfp3r27Wb9+
fUzWu3v3bttnYcOGDd06G7ovlVk/E3ruSu194403YtKuaOgeYK9evUytWrXs
MSW+/Q8qBl21alWzYcOGRDURAAAAAFKK8nac6+5QazSqXrNypr3umzAYXdsq
rqA+04CsbtmyZWlyGJWLt2/fvqiX60UcWrGl9M/2q261Pp+R1nklDg0vqRaF
jifVSQhHvOLQio8//PDDni/X6TNPw+jRoz1ffiDKZb744otNixYt0sT9dZ9K
tXyCUb662qs+j5OJ6lerT1Y9j+Wc73Tu0+8fh2p1DBw4MFFNBAAAAICUoxxL
XQOqlmMovvzySzu9+jWMJ6f/+njlYAOJppocTkzpP//5jyfL9CIOrfqoRYsW
tZ9J1YJ14kht2rSJeJnEoeGlRo0a2eNpwIABYc2XynFo3aN12n7rrbd6uuxg
1J+w+oN86KGH0tTlUf0u1dt+9NFHg87v9P+n/O1gz2HFk+LOt9xyi60Xolh0
u3bt7L833nijrf/sUL0k3SPfsWNHAlsLAAAAAKnDeSZW11yhUBxY04ebA7R1
61Z7vZmeas36PucayIoVK9x6ucDpQH0U6pjPnz+/2bVrlyfL1P0jL+pyKF6s
PEHdv6pQoYLp0aNHps/fB6N6tsSh4QXFP/WZ0fGkuHI4UjkOPWzYMLft6fvS
C1W439OHDh0yV111lRtH9h2ctowdOzboOlX7wqnL/f7770fUbq899thjGepq
O0OnTp3c6caMGWOfA9HzYcq9199enasBAAAAIKvQM8vqV0f9iinfx4l16W8N
wa6PGzRoYKefN29eSOt6++23bc5Q2bJlbd9r1atXtznVf/31l633rPUrjlWs
WLGgfcw7sQX1V3jgwIGwtxlINYrrqq81xTa8ovtOihslG/XbpvPK/PnzE90U
pDjnnqViocrVDUcqx6FV/9lpe7j9mUb6Pf3SSy8FjNc6g2ooZ0b51JpWv01S
jZ4Juf/++02RIkXsNug3impKAwAAAAD+H103TZkyxYwaNcq9VtR1k56v1+sa
H8iZZ55p839C6dt+xIgR9tpsxowZ9m89N6y8J/XRpHi2rm+1HOUXqQ2aNhgn
72rRokXhbfD/7+TJk1EPvs8dA6lGz4//9ttviW6GX19//bXNjQSi8dprr9nv
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
qlW2DniBAgUi3t9675s3b262bdvmcevCo3q1ilOkqvXr19uYlY7/kydPhjRP
qm6zclfffPNN2w/orbfeamNfw4cPt3VsA9m/f7/N57zwwgs9z9lXPqjiqGpH
Mtf/iNUxEs2+VTuuu+46e87u2bNnWPN6QbFVrTtZ45NexqHl6NGj5vnnnzcV
K1bM0K/ueeedZ0aOHOl3Pq+/pyOh74hANalDQRwaAAAAAJKPcqacGEWfPn3s
Nd8DDzwQ0bKeffZZO7+e442H1atX2/VdeeWVcVnf6UzxpipVqtj9PWXKlLDm
1T2K7777zsadlJsZ676+QqE4imJSyu+eOnWqvQfz888/J7RNodL+VE0U5SmG
0wdZKm7z8uXLbZuVi6o6t3reQvmoOoZ0T2Ty5MkB59UxlzNnTtO1a1dP2+TU
J9CgGjXJKNbHSDT7VjWFy5UrZ/ef1hNP//nPf+x6O3bsGNf1hkrHufoK9pri
ynpv77zzTnuv2DcePW7cOM/X54VPPvnEjZcHot8uuk/lb9D31YgRI/yOO3z4
cBy3BAAAAAAgDz30kK2Vedddd9m/FbfQdZ9iP5FQrLJMmTK2ZkM8+q5TPqLa
G+wZY3ijVatWdl+3bt065Hn0HLxqyebLl88eZ8qjdmIfiYpDKwYxbNgwv/mB
Gnbt2pWQdoXD6fPtlVdeCWn6VN3mX375xR4zN998c5q6tjrPKB9ZbVeNgAkT
JgRcRsuWLW0tc8VNvXLFFVe4++7zzz/3bLleiscxEs2+Vb0QLVf1LTZv3hz2
/JFy+hNQHDwZ+1f99NNPzZYtW2K6Dj1H8PLLL9t7FNoXzvd/snG+33V/PBDV
Gvd3vIYyxPseCAAAAACczhQjVD6brscuueQSs2HDBhvT0TPT0VCurJb54osv
etRS/5QLnTdvXhsLQWw5MS3VA1X+fKj0TLhy7ZRTqZzMzz77LKFx6O3bt7s5
3eeff77N91St1GbNmtn4uvpgS3bHjh0zZcuWtbVp9+3bl+n0qbzN6g9O2+rv
mFPc1OlTVfc4AuX8fvPNN3aa66+/3rN2qSaNaickax5pvI6RaPft/fffb+dv
2LBhRPNHqkaNGiHXiM5K0vdR6PStoHo3yUb1P/Tcg36jBKvh9Mcff9h7C/4G
3Q9/8skn/Y778ccf416fHAAAAABOZ4pVKE6h61D1S6R+6VWbcuvWrVEvW8/O
q/7Cl19+6UFLM1IMqmrVqjZ3L5X7yksFimPpWXEvaqomMg6tWIYTa9Oxoxq3
qWjatGl2G7p06ZLptKm8zTo/OTVcAvVBqted40n1owNRnFOx6njm3SZSPI+R
aPatvmtUW0XrVuw7Xl577TW7znbt2sVtnclAdcJ1b0e56LqPq/dONTrWrVuX
6KZl8PHHH0edq019aAAAAABILvPnzzc33nijfTb63//+t/n+++89Wa7ixBdd
dJGtyRBKPl64VCc2f/78tt88xFavXr1sPKB69epRP8eeyDh027Zt3XWn8nGj
z6u2QX2IZSaVt1nnIt9n6P3VKlDs2RkfLKY4dOhQO81TTz0VyyYnjXgeI9Hu
227dutn5y5cvH7eavaopfPHFF9t6QV7cd00Vqseh/GD1p6B7zvp36dKliW6W
X5dddpm9vxHNvWzi0AAAAABw+lA90Tp16pj77rvP0+VOmjTJxs2pCR176p/M
6dPqjTfeiHp5iYpDq48up2875QSmqiNHjtj3Q/Vo9Nx6MKm+zbp/5dQNKl26
tK3xkp5yaJ3jSbHXQFR/wak/FIj2p/JClYep+LYT/9J55tdff00zrfataoWs
XbvW/P3330G3Q7WslXvq+9yGcr3Vv+GAAQNsPWBfuoen3GLVxnZo21ULRPUz
MhPvYySUfRuM6qmorVqGYqTxovOPb98ISB6zZs2yx4Nq30SDODQAAAAAnF4U
b1EdRi8pf23Hjh2eLhP+KUajeIBiVZnF20KRqDj0mjVr3PUqvztVLVy40G6D
+snLTFbY5v/97382VhsoT7dfv37uNvbo0SPgclQHVs9PqE89xYXTmzlzpjn7
7LNNtWrVbH6was6fddZZ5txzz7U181XHQRR7LlasmH3NWa9qn/szd+5c+wyB
Yp1O/aOrr77ajB492tZgVv9qBQsWtMtSjLlFixZujQoNTZo0sTHljh072riy
8oXVfn0W+/bta3N6/Yn3MZLZvg2F3junz0IvzjOhUg1srVf7DMlB92H0WTzv
vPPs8R8N4tAAAAAAAKSG3377zc1HVdzLC4mKQyu25eRcKvaUql566aVMY66O
rLLNwShu7BxPmT0fcdVVV9npFi1alOZ1xbh1nPfs2dPmBztUg+aBBx6w84wc
OdK+pn2quJZvLQt/cejx48e7tSa+/vpr+5ra58SjnRoi7du3t3Fo5WErbj1k
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
88/NW2+9Zb788ktz6NChTOc5ePCg2bx5s/nll1/c144ePWp++ukns3379rDb
oGVt27bN/Zs4NAAAAAAAAACkvmPHjpmuXbua/Pnzmzp16phbbrnFlCxZ0uTO
ndsMGDDAHD9+PMM8LVq0MHny5LExYg1NmjQxR44cMR07drTzlS9f3uTIkcMU
L17c9O3b15w8eTLg+teuXWvXWaxYMZM3b177b6VKlczgwYPNE088QRwaAAAA
AAAAAFLc/fffb2O9M2fOdF/bt2+fueaaawLGgOfOnWuGDBliypQp48ahH3jg
AXPDDTe4+czKbS5RooQdrxxrf1599VUbey5SpIh5//33zeHDh+3ry5cvt8vO
mTMncWgAAAAAAAAASGGqoZEvXz4b673qqqvSjPvtt99Mrly57LiPPvrI7/y9
e/d2c6IvueSSDHnPrVq1suMuvfTSDPPOmzfPjlMcetWqVRnGb9myxZQqVYo4
NAAAAAAAAACkMNWAdnKOa9asmWF89erV7bhu3br5nf+FF15w49ALFiwIOL5o
0aJpXj9w4ICt3aFxd9xxR8D23XXXXcShAQAAAAAAACDFTZ061daH/uabbzKM
u/XWW20c+J577vE7rxNnzpYtm99+DcePH2/HFyhQIM3rs2bNcuPX06dPD9g2
p2YIcWgAAAAAAAAASH2qCT1t2jQb+73yyivNueee68aKlZfsjxOHLleunN/x
ThxatT989e/f3122+ikMhDg0AAAAAAAAAKS+3bt32z4GVZ9Dec2q6Txu3Djz
5Zdf2vhvKHHos846y+/4QHFop96Ghu3btwdsG3FoAAAAAAAAAEhtO3fuNOed
d56N9VauXNl89dVXacY3bdo0JnHozp07u3HoDRs2BGwfcWgAAAAAAAAASG0d
O3a0cV7lQq9cuTLD+CZNmqSJQ8+YMcPMmTPHHR9pHPrVV19149Cff/55wPYR
hwYAAAAAAACA1FaxYkUb561Xr57f8eecc06aOHTPnj3NU0895Y6PNA69a9cu
kytXLjuuW7duAdunGiHEoQEAAAAAAAAgdVWqVMnGea+44ooM47777js3Z/n2
22+3r7Vv3948//zz7jQDBw4M2k/hmDFj7Pi8efNmGDdy5Eg7rkSJEmbHjh0Z
xn/99dfmjDPOsNPUr18/0k0EAAAAAAAAACTQE0884caaFTM+fvy4ff3HH380
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
pOmjjfd27tzZHuv58uUzs2fPNhMmTDDDhw83r7/+uu0LLVLEoZGMnLiicnB1
HyZaxKGjE8t7YdE4cOCAeeaZZ9wa4uqPDUBgPXr0cPss9OLcCgAAAJwuiEMj
kR544AFbk0N5gqGINt6r5+Jr1qzpHvManFqPGrZv3x7RcolDI9n89ttvJmfO
nPa47tu3ryfLJA4dvVjdC4u0LWeddZbJnj27G1PLrEY/AGN27Nhh8ufPbz83
U6ZMSXRzAAAAgJRBHBpeiKQ/K8XJ1F9W06ZNQ54nmnjv8ePHbQ1qxeb69Olj
Yz/du3c3Xbp0sX+/9957ES032nYBsfD444/b87o+Y5HeX0mPOHT0YnUvLBKq
L/DNN9/YutBPPPGEPTcqH1rnw5MnT8atHUAq0u8HfWbr16+f6KYAAAAAKYM4
NKK1dOlSU65cObNu3bqw5nP6+vnqq69CnifSeK/6Z2vZsqV9Jn7JkiVhzx+r
dgGxcOTIERtP1Ocr1Jo3ocgqcWg9R//999+bVatWBRycvOVFixYFnW7jxo0h
rzeW98K88MEHH7i/B9QmAIGtWLHC/bxQTx0AAAAIDXFoRGPo0KHus/8PPfRQ
yPPt3LnTPpd+7bXXhrW+SOO9em5WbZw4cWLY84aCODSSiXO8a1i5cqVny80q
cehBgwalyUeOZlB9+927d2e6zljfC/NKrVq13G176623Et0cIGnpM122bFn7
WenZs2eimwMAAACkBOLQiMT+/ftNs2bNTIUKFUyxYsXs8XPGGWfY10OhZ8Cd
XMNwRBLvPXbsmKlUqZKpXbt2WPOFgzg0kolyoPX5Uu1fL2WVOLRqbcycOdN8
9NFHAQf1I6h1TJ48Oeh0oZ7DYn0vzCtOPRcNLVq0SHRzgKDU1/G0adPMhx9+
GPYzWV5wnpvQ76CjR4/Gff0AAABAqiEOjUh8/PHHtq7zn3/+aXOinWNINVUz
s3fvXlOwYEEbSwpXJPHeOXPm2LYNGTIk7PWFijg0koVy9EqVKmWP+Xbt2nm6
7KwShw6Fl/Wh43EvLNR23HTTTaZ48eLm0Ucf9TvNsGHD3PN56dKl49zCrEm1
pxQnhXfUn6Y+/2XKlDF33HGH/Ww5tZr99bU5btw4s2XLFs/bMW/ePPfz8s47
73i+fAAAACCrIQ6NaCmuXKBAAXsMnXvuuTYOFsyAAQPstLNmzQp7XZHEewcP
HhzzeqfEoZEsvv32W/ecrhxcLxGHjkw87oWFQvWnfWuK7NixI8M0zz77rDte
53NEZ8aMGbYfypEjRya6KVmG+kWuW7euuffee9O87hy7VapUsbW/fLVp08be
n/vxxx89bYtqvhcuXNiu97rrrvN02QAAAEBWRBwaXujUqZN7HH3yyScBpzt0
6JB9fvXiiy+OaD2RxHuVB6V2FSpUKOw6ILFsFxALzn0XDdu3b/d02cShIxOP
e2GhePfdd91jI1AdAeXQO9Okj/MhPIsXL7Yx6Ntuuy3RTclSdA/bX/1y9T/q
3BN/9dVX04w7fPiwqVmzpq3n/Ouvv3raHn1OnNpkp06d8nTZAAAASF7pcx+i
pXjZkSNHPF1mMpo9e7Z7zbl06dJENwcpSjlGznEULCfopZdestMoLy8SkcR7
N2/ebHLlymXXmy1bNtO2bVubM+ol4tBIFtdcc4091qtWrer5si+99FK7bK0j
keLRDi/j0PG4FxYK5T+rHfnz5zfLly/PMF6xuvLly9tpsmfPntC2prp9+/bZ
/hM0/PXXX4luTpbi3NcpUqRIhnHqt0Ljbr/99gzjNm3aZHOXdR8rs+e2wuHb
L6zX+dYAAABIPooV33LLLaZJkyaeLnfUqFG2nmMi+j2JtRUrVpgFCxbYWGCj
Ro3c38+qG/nBBx/YcStXrkx0M5FiGjdu7MZ6165dm2G8cu9Uy7FatWoR5wxF
Gu8dP368G4t2Bi1nxIgRnsSZiEMjGSiOqPxLHd/qPytaf/zxh83pVF0J1YHP
nTu3G8dUvuHcuXPt+F27dnnQ+uRqh5dx6HjcCwuV9p9izM8991yafGidkx9+
+GH3/Ni37//H3lmAXVGm/39tXbsVce3CZu0Ea23FbsXGxOZnYysoYiEW2IHd
Cit2rS0mJhiIibVrzv/6PPu/z847zMyZPHPO+34/1zUXvOfMmXmmnrmf73PH
cZW0r71AHgjOI/elKJZXXnnF69Kli3fsscdO9N2uu+7qznuUD/oFF1zgvh8y
ZEhh7fHnQmr2OqRCCCGEEB2BH374wcXAZVnGjh3r/f7775HbJi9b9+7dvdln
n73w+GN8JfCnYNv4ULQn0AGJH5xllllcvSKOcY455nD/x7+E76SpibRQu9DG
YmHx58zt5B3/5dF7qRXF2HTyySdvo0ej222//fbee++9V0m7RGtS5rstK5aH
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
ccbC8lU0KmaxLKRDCyGaDfppq2Nbzx+vqHdbkTr0ueeeW2sTuUeEaEbaqw6N
P689fw8++GCq30Kr6dCWJ49c8kVAPmm2h79IkOuuu85d16Kh9jf7LEpLn3/+
+d32sHGFEEIIIUQ1YOdjkzHuIPdmXshFZ2OYb7/9NnI9fCn69u3r9evXr/bZ
4MGDa2OEYA0q8h927tw5tDa7H+r18HtyZ6aFMQr+MnkXdAv8UFoZ6dCei3HF
F0eIjgpx4v379w/NrVwFgwYNcv37oosuWjdXaFHvtiJ1aIsxZ7n55ptzb69I
eLeOGDHCtauIemAdHWouo+NWHRtFrjRyaKXJrdtedWiYbbbZMuepSKNDY8PS
zmCejEZi+Y3Qj9NC37///vvX2k+fYNe9V69ebdalDiL2eVQ+8TxYLiPyxBUB
9WfZHnp0FtRPCiGEEELkw18XBf22KKiTwjYZ/0Sxzz771Pb9/vvvO3tuwQUX
dH9PMcUUbfRm9GFsxksvvTR2v3/88YfLIZe1xqH4Hx1dh+Ze4z4qauwjRCty
4403uudgo402qlyL5n1F/44WUk/bK/LdVqQOfeutt9badcUVV+TeXpFQr9Ha
dvTRR1fdnJYGXW6OOeZw5xLdK0utziKwnAYszCclhdy5/CZKV+zUqZP7PqpO
4XLLLee+P+yww0K/x/8gLn+b+cBG1Sm87LLL3PdZas11797d/fbII49M/duV
VlrJ/XbdddeNXQ971vRO+qygX0WjsHkvYv3S+GaMGTPGm3TSSd1viSsBf56j
0047rc365513notTKcKXJQi1ZNln7969C9ne9NNP77a35pprZvq9+kkhhBBC
iPSgz2KPUtPEfIdZGDcQ58x3zz//fK59HHXUUXVjAU2rZhyCzX7WWWc5W9li
5kzDHjt2rFt3s802czpzHK+//rr77VJLLZWr/aJj69D4XKK94YuFT5sQHRk0
BvpVtGj0tSqgHio6B37Q7733Xug6Zb3bitSh8aOzdpURw54Hi7mP81MVybB7
xpZHHnmkknbsvvvuiedjJkyY4PLXoFfbb9Zbbz2XvwKfWHKj8T1xa6ZRosuS
X4Zan/hb84xRFw8/Zb5HiydH2htvvOH2gY12//33e6uttlptH/hcP/vss+57
6giyvRVXXNF9N9lkkznNmf2yf9pBe9CB7ffHHHOM2ybtT4L512644YZ11/38
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
SfHnht5qq63qro+/9BRTTOHWJ3b9s88+S73Pu+66q6ZDP/7441maXYN81WwD
bXvkyJHSjCrmsssu8x599NHYdcaMGSPf3QKxunD77bdf1U1pVxx22GHuvK63
3nquBp9IDvk4jj/+eDdnOdNMM7l/n3jiiaqbJYQoAWp+YA+uuuqq3g8//FB1
c4QQQgghhBBNzH333VfThAcOHBi77i+//OItt9xytfVPPfXUTPt85JFHatvA
Xy4rxHrPOuus3mqrreZtscUWTu9gqXcc8MUXX7j8hW+99Vbm/Yu2oD+Tz4B6
e3FQO3LZZZf17rjjDu/WW29VLaOckM+YZ6lPnz5VN6XdceSRRyaeoxNCiI7G
3Xff7eoSUqfgu+++q7o5QgghhBBCiCZn//33r2nCr7zySuR6xFOvssoqtXV3
3HHHzPtEh7TtDBs2LNM27rzzTm+66aZztQMN/GwXXHBBt90BAwZE/va3337z
5pxzTrce20CTFvnAL91qkUXp0Jz3E044oaab2jLLLLM0uLXtB/LokO+A80hc
tCieSy65xNVmFUII0Zarr77aO/jgg72vv/666qYIIYQQQgghmhT8T4cPH+5d
fvnl3lRTTVXTA++//36X48KWESNGeOeff7638847e9NMM41bBw2R3At//PFH
5v1/+OGHiX2woyBvK7r4+PHj23yOj3a9XNfkEsF/x9pw++23Z2qD+B89e/as
5YcI06HJF7nJJpu47/n3888/d/cb9+Enn3xSQYvbB+PGjavdx8QHCCGEEEII
IYQQQgjRLCywwAJt/FHjFvTaJZdc0ttpp528fv36ed9++23u/aMPTzvttG77
+NFkwXTxoI5NTSxr+6uvvhr5+6OPPtqbeuqpnQ/vSSedlKkN4r+Q73vppZd2
flFROvQpp5zivqN+2e+//15BK9sn/tiC2267rermCCGEEEIIIYQQQgjRVODP
jHa24YYbZvr9AQcc4HJVv/vuu20+f//992u6nD9nRxTkJUEjFdnAH71z584u
p8tNN90UqUNbXvErr7yygla2X9Ce7X5/4403qm6OEEIIIYQQQgghhBBNxR57
7OG0s4UWWqjQ7ZKbgO1SBy8J6KNZc1QLz+vRo4d3xhlnuP/H6dBdunRx35Hv
RRTH2Wef7c4r9Tmj8tAIIYQQQgghhBBCCNFR6d+/v9PPJptsMu/XX38tZJv/
/ve/vfnmm89t95prrqm7Pnmiyc0xduzYQvbf0Rg6dKi32mqr1fJsxOnQ5513
nvuuW7du3lFHHeXtueeeLifLSy+91Ohmtyu22267XHEFQgghhBBCCCGEEEK0
Zx566KFaPgFy3BbB7rvv7rZ34oknJlqfenm77LJLIfvuaHz88cdep06dvNGj
R9c+i9Oh33rrLZcTfJ555mmTf1x5OvJhud779u1bdVOEEEIIIYQQQgghhGg6
fv7551qtwtNPPz339s4888xUetzgwYO92Wef3RszZkzufXc0yP/QvXt3b9Cg
QW0+j9Khn332WW/66ad3Ob3/+OMP9/vffvutkU1ul3z11Vc1Pf/hhx+uujlC
CCGEEEIIIYQQQjQl2267bS1XQx4uvvhil1/jxhtvrH1Gjo440ExfeOGFXPvt
qAwZMsSbcsopvfPPP7/NYv7o6623nvv73nvvdfMNCy+8sNerV6+qm93uuPnm
m935nnTSSb0JEyZU3RwhhBBCCCGEEEIIIZoS09HQNH/88cdM20ATpUbbyJEj
23yOv+7LL79cQCtFEM718ccfP9Gy9tpru+u50korub/JuXHHHXe4z957772q
m93u2GmnnWrnWwghhBBCCCGEEEIIEQ7a8zTTTOO0NHxn03LDDTe4fMOvvPJK
m88/+eQTt93vv/++qKaKBJATJZiX49BDD/UmmWQS7/PPP6+wZe0Pansy/8L5
vuyyy6pujhBCCCGEEEIIIYQQTU2PHj2clrb99tun+t2tt97qTT755LW8BLZY
vtzOnTuX1GIRBnmfuYac++222879DQMGDHCfLbHEEt4DDzxQ+1zk47bbbnPn
lbzbP/zwQ9XNEUIIIYQQQgghhBCiqUGbRE+bbLLJvI8++ijx79DfTHMOWzbY
YIMSWy387Lnnnt50003nzTDDDM5Hl3/5u2fPnt63337rLbXUUrXrMu+883p9
+vTxRo0aVXWzW5quXbu687nffvtV3RQhhBBCCCGEEEIIIVoCcjmjqR122GFV
N0WUwE8//eSdccYZ3vzzz99mroC8xm+99VbVzWs57rnnHnf+yHcSzEkjhBBC
CCGEEEIIIYQI5/nnn3eaGj7OEyZMqLo5oiT+/PNP74knnvB69epVy22Mz7RI
B/o9527nnXeuuilCCCGEEEIIIYQQQrQU5BRGW8NvVrRPfv75Z++zzz5z/2e+
gVqSRx99dMWtai0efPBB95xw7saMGVN1c4QQQgghhBBCCCGEaClGjx7tTTHF
FN60007rjR07turmiBJ4/fXXvQUXXNDbfPPNXX3K2Wef3fvggw+qblZLsdpq
qzkd+oQTTqi6KUIIIYQQQgghhBBCtCRHHXVUrcYgORxE++PXX3/1XnrpJe/e
e+/1vv7666qb01KcddZZ7vlYeumlnW+5EEIIIYQQQgghhBAiPWiUq666qtPa
0NyEEP/loYce8iaddFKXQ/2dd96pujlCCCGEEEIIIYQQQrQ05A/u3LmzN/nk
k7uadkJ0dN5//31vlllmcfMzt9xyS9XNEUIIIYQQQgghhBCiXfDaa6853W3m
mWf2Xn311aqbI0Rl/PTTT94yyyzjTTLJJN7FF19cdXOEEEIIIYQQQgghhGhX
jBo1yuvUqZO3wAILVN0UISqjT58+ToO+5JJLqm6KEEIIIYQQQgghhBDtEurY
ffjhh1U3Q4jK+Oqrr7yPPvqo6mYIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCiA7OhRde6G299dZez549m2a59NJLqz4tQgghhBBC
CCGEEEKIFuTnn3/2vv/++6qbUZdWaWcR3Hfffd5f/vIXr3v37t4RRxzRNMt1
111X9akRosMxbty4qpuQiFZppxBCCCHaD1988UXVTfDGjx9fdROEEEKIlmGn
nXby1ltvvaqbUZdWaWcRrLrqqt60007rffnll1U3RQhRIe+88443ySSTeE8+
+WTVTYmlVdophBBCiPYBPkqbbbaZt+mmm1bajj///NObe+65vf/7v/+rtB1C
CNGs/Pjjj94///lP7+abb/YuueQS75RTTvHee++9qpsVyeOPP+7tvPPO3rLL
Luttt9123m233VZ1k9odm2yyibfCCitU3Yy6tEo78/LII484X+jDDz+8sjZc
e+213osvvtjQff7www9e3759vXXXXddd55NOOskbM2ZM7u1WcSwiPy+//LJ3
1113eVdddZV3zjnndNi+/1//+pfrD+69996qmxJLq7RThFOGrfXNN994p556
agGtE0Xx+uuve3fffbc3ZMgQr1+/ft4NN9xQdZNEB0R2WccA/2BsgyQLfVPa
mNdff/3VxY3OPvvs3qefflrSUSTnueee86acckoXPyqEEM0C83WHHXaY161b
N+/++++vrB3PP/+8Gyv6l9tvv72y9sRx3HHHufbhGzps2LBae2+55ZaqmxYJ
/qvnnXeeG8+hmx500EFOV2xmWkXfbZV25mWdddbxpppqKu+zzz6rrA0rrrhi
Ic9Z0n7vww8/9Dp37uxNMcUUbmy8+eabu2e9S5cuudtQ1LE0AyNHjvQOPvhg
b4sttvC2335779xzz/W++uqrqptVCjzr/vdUUbEQrdZHt4q+2yrt7Ejgc7D+
+ut7++67r+uLoyjL1iK/VBF9eDPQav1GFMzz+vvVlVZaqeomiQ5Ie7LLRDS7
7rrrRJpDvWWhhRbyBgwY4P3+++91t9+rVy9v0kkn9R5++OEGHE0yLr74Yncc
+FAIIUTZkJPozTffjF1n6NChtT52iSWWaFDLJuaPP/7wvv32W++OO+5oah3a
8uPONddczof70UcfrbX3hBNOqLp5oaCzzTDDDE5PQx/C53ybbbZxbd5yyy0r
y21MnHSPHj28PffcM/T7VtF3y2rnhAkTvDPPPNPr2rWr98ILLxS+/TQ888wz
7n7BtqqS1VZbzfkjM05gQc+I0zGiSNLvEcu28soru3X69+/vPkO35u/JJ5/c
+89//tMUx1Il9IH0IZwT9GeOA72+U6dO3owzzujdc889VTexcH766ScXq8N4
tSgduhn76Hr9T6vou63Szo7E/PPPX+t/udfDKNPWQhtAUyCu4aabbnK25ujR
o1Ntg/lY+vDjjz++stybzdhvZIV3H/O+a6+9tnRoURntwS4T9UFz4L3y2GOP
1d4ryy+/vPOf+Pe//11bsIPwJd5ll11q66FhMz6IAlujWTWBbbfd1vvrX//q
ffzxx1U3RQjRzmHerl5eIuxx61vXWmutBrUsHvrIZtWhyQUcfL/07NnTaZFp
xzGN4KWXXvImm2wylxvqo48+avMdx2DjlUbC+HLNNdes6XnHHnts6HodVYdm
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
7ks/vFs5Vq4PbcQfZtppp3VxP6effvpE9nDw/iJvBfYzx2KfkccwLdbeOB3N
Xys4LldjPdDzsGusxiTnHc0o6fxKGEXo0DwTO+64o3u+WLgOtJN2kf+Xfsbq
qfFeZv0y2ondT+1t7kvOD/1Or169cukrZcM4jPOyxRZbVLJ/cvPZvVlkftS4
fg/oU3h2zJ+Nvtrfh2bRnco6lnrYfW7vhemmm87V18sbMzhkyJDa8cTpRPTz
rEO/nwVsffpX+hWeMXx2eY6nnHJK75RTTnHzSEHIF8I1s/YxF2vvXX6H7cA7
G22Kvjauj2Kszj7pu3lm+Zf3PLEdjB3z6tCN6qPL6H+K0ne5P3lfdOrUyT1z
vL+Za6Av/sc//uGuGfcP5/6qq65qeDvLeoaSkFeHxsai/7Z5YRZilLj2cf7b
aExnnHGGs+cstw7XAXsTP4essE+uIzE21h6/nZfW1koCeWdsW1y3RkPdT+q4
2jXAJuQ+Duu7ktJI2y4IdoHZ2YwNGAd16dLFfcYzwf9Z6Gv4jnEE9w3w7vPb
6Dz3fO+3u/w6NLqw5aynD6B/qNdvpxljZbW9s4xrmoFm6w+SwDvqgAMOqNUt
wCf1zjvvrJtDIQlV2WVQ5nHVI68OjWbLM2z3As8a+erx5YsDrWKjjTaqjfFZ
eO/z3OXpD7NitaZZ4nxtsHfNpuS4o+anmOdknaLjX8oALYK2Kk+4EBND/0w+
eJuvYTnxxBOdrohNyfuPz3iHGMxrMrbEHjDfHvpzyyuPtuyfr0ZLxp4Jagr0
k7PMMouLJzbwYTjrrLPc52wLmwb7gzYxTmWsfPfdd9fe7YcffnjoceHXY/5h
PPs2h4idSt/G53379m3zG8aP+CTyHbYdx29wnHyOXc+8Nu9R5lFZrB45Np59
xoLGb+DTRo0Tqx3u12PY1hVXXOFqrtg14NwyLvLbK/gHoQ/zPRrfYYcd5sYS
Wa6JEaZD41dMngfzkWGhbf48lrSZ97p9j41Ur/5tEnjn2Pmz+RH2Y59Rx82g
PcxlTD/99M5WNbhHrP47NrIf7i90dv+2uTe5NkcffXTteNL6rJlPfJwvot+v
kdocaeH+5/40W3711VcvbH41rw5tzxX5EXk+uPeoLUE7icFC2+K5xR/adMks
90tcO7nuPEeWm5JrjA7KnEmzs//++7s2U0e8Ck4++eTaven3Q81LXL8H+E7x
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
hBBCCCGEEEIIIVqRr7/+2vv1118Tr//jjz96P//8c4ktEkIIIURWvvjii6qb
IHyMHz++6iYIUTlpxxtx6JkSQgghhGhN7r//fm+GGWbwnn/++cS/GTRokLfA
Agt4b7/9doktE0IIIUQamCPebLPNvE033bTqpoj/z59//unNPffc3v/93/9V
3RQhKiPLeCMKPVNCCCGEaEZefvll76677vKuuuoq75xzzvFuu+22qpvUdDzw
wAPeFFNM4R133HGpfof916NHD2/22Wf33n///ZJaJ4rm22+/9YYPH+7ddNNN
3kUXXeSdcsop3jfffFP4fn755Rfv2muv9XbddVdv9dVX9/7+9797Rx11lPfP
f/6z8H2VQaPOU6N54403vGOPPdb7xz/+4S255JLeBhts4B1//PHemDFj3Pev
vPKKt9FGG1XcSiHS0UzPK+/GTz/91Pv4448zLXnbjZ9h9+7d3buZdlQJ5+KJ
J55w12XgwIHeiSee6N13332VtqlKnnvuOW/KKaf0jjjiiKqbUjiyLZJRxHn6
8ssvvYcffti74YYbvAsvvNA7+eSTvXHjxpXU4uLIOt6Io+pn6t///nchi/H6
6697d999tzdkyBCvX79+7hqLjgOxxvRlN998s3fJJZe4/uG9996rulkigh9+
+MHr27evt+6663orrLCCd9JJJ9XGU0KIjg19wl/+8pfast566zVkv7xD1l9/
fW/fffdt6twV77zzjjfTTDN5a6+9tvf777+n/v2ECRO8hRde2OlZ33//fQkt
FEVz7733tnkmWJ588slC98EYa6655nLjjf3339+Nl5555hlnU7O/Pn36FLq/
MijyPDVLf8Bc3FRTTeXiGNCDGOecdtpp3jLLLOP8k26//XZv5ZVXdv5FrQDn
8rDDDvO6devmfKxalRdeeMFdm+23394txxxzjPfoo48Wug98z7beemvvk08+
KXS7zUIj+rWkPPLIIxO1Jc2S9/nr1auXN+mkk7p+t2o++OADb5JJJmlzfK3Q
/5fJxRdf7M4D/hF5aaY+ULZFMoo4T9dff/1E20C/bGbSjjeYT2PO/Lzzzqu7
bpHPVBrQm/L09f7FciihZ/k/X2mllRp6TB2RZrHRAVsteG9gm4vm48MPP/Q6
d+7s3ke8gzbffHN3vbp06VJ104QQTcBPP/3k5hFXXHHFhurQ888/f+39wZxm
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
PWixJyrjk1IIIYToVdgTJm/PyHbb2k2ePNmtYcdWkb/2bw50WfwpFoGtIzrx
3Xff3Xj4aPPZd4n93NsF8/Do/eyj107Yl4m+Vqfs243TTz+9Y/5ThAiBJmz7
c+KzlH20GHu0k7rjjTxUptoP+8Phd5t9Aaw9ZC/UnXbaqdF9LYUQQgjRXlhr
yx5h7CXN/q22zzD/Z3/39D6q7YJ963n38ccfX/le7A/Yaxf9XAghhBDdBa14
qaWWShZYYIHknXfeafzZ+KGuusd8FdDaDz/88Lb7ykDzxy6gk7A/Er5dtH5M
dJOnnnoq2XHHHd3YY4kllmjbuss0dcYbWahMdYaxY8cmO+ywg/PLwZ6Tu+22
m8tDW2+9tXRoIYQQQkSBD0b6ceznWhb6k9hnySe0EEII0Tuwvmr55ZdPttlm
m24HRfw/0NXx3c26duk2YmolZryRhcqUEEIIIcTA5oknnqjki5E9tV999dU2
hkgIIYQQMXz44Yfyldpj3Hvvvd0OghBdp+p4Iw+VKSGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEL0Ev/973+Tl156qdvBEEIIIYQQQgghhBBC
CDFImThxYvKZz3wm+fvf/97toAghhBBCCCGEKOCtt95KDj300G4HQzTIe++9
l9x0003JL3/5y2TSpEnJhAkTkldeeaXbwcrk0UcfTfbff/9kzTXXTBZffPFk
jTXWSA488MDkL3/5izv/4IMPJmuvvXaXQ5nNAw88kFx55ZXJWWedlRx55JHJ
ZZdd1u0gVeZf//pXct555yU///nPk3fffbfbwWkrgyG9ynDvvfcmV1xxRXLm
mWcmP/vZz5KLLrqo20ESPcAjjzySXHXVVcnZZ5+dHHXUUQM+X3zta19LvvKV
r5S6tlP9namljhnsMLdxyCGHJKuvvnqy/PLLJwcffHCrX9ILz+sWyt/5fPTR
R8k///nP2gfPgV7v07///vvJ7373Oxe+k08+2YXv6aef7nawhCjN7bffnmy5
5ZbJ0ksvnWyyySYDsk47//zzk/vuu6/bwRBCiNJcc801yWKLLdbtYDTOLbfc
kuyxxx7J97///WTTTTdNjjnmmOSNN95o5Nn0t0aMGJGMHj06+eCDDxp5ZpNM
mTIl+cQnPtHnuPbaa7sdrCCMYaaZZppkgQUWSA466CCnjRx22GHJUkstlUw/
/fTJr3/962SFFVZI5pxzzm4HNRPGk35cf+c73+l2kCpz+OGHt8K/+eabdzs4
baVMelGu995772T48OE9W3YgL5wLL7xwn+/ccMMNuxTK8gyUeO8GTbU7aGB+
vvjGN77RYCjLcc8997j8WNefxh//+Ef3DePHjy91faf6O4OhTZjaee6555J5
5pkn+exnP+vma9Zdd12XlrH5p+nndRPl73xGjRrVrw8ec+yyyy7ueb3ep6c+
T4ePvnuabo+dmuxfqK8yeDjggANcnl1ppZWSSy+9tJWHL7nkkm4HrRJDhw4d
cGGuw9Ss8wgxWLjhhhuShRZayNk2XHzxxa7v8NRTT3U7WNEwL7/eeuu5NoR6
iTqZPv9cc82VzDDDDMnVV19d+x3zzz9/q51i/r/T/O1vf0v+/Oc/Z57/z3/+
k7z99tsubL3YZzWwvyVs2D+H1lT/5Cc/aYU/T4dGiyDdu8U//vEPZ/tBH6AX
x2Rl4meHHXZoxfUss8zSoZD1B10K2/h22tKUSa9zzjmnFR/YWzZF03k1L5y8
54knnnA6Ry/o0GW+vV3xPhgo2+4UxTN9ajSxYcOGdVSHxo8za1vGjBnjtDje
/Yc//KHWM/fcc0/3nGeeeabU9Z3q7/R6myDyIa8y/03aHX300e439Cb+jw8Y
1g9183ndRvk7n+9973suXrClYG0fa05uvPHG5K677nI25L5eyzl+5/yFF17o
+j9f+tKX+rTZvd6nt/BdfvnluTp0t8dOZfsXRWOsKs8SvQ1z06ThHHPM4fpN
t956aytdx40b1+3gVeKb3/ymW2OD7sGBljoYNdSpQecRYrCD7nf88ccn8847
b3Ae/rXXXut2EKPYYIMNXPjpy/mw9nHuued2fX7G6XWgrrd4uvnmm2s9KwZ8
J3z3u98tdS3fSzhpa3sJ+qwzzjhj8vnPfz7XJm7XXXct1KFpd+qmaROMHTu2
J8dkZeLn4YcfTpZZZplkySWXdHnm5Zdf7lDo+kK+Jg7RqtpNXnqhV1kZ/9a3
vtXYO5vOq2XCudNOO/WEDl3m29sV74OBsu1O2TyGfwqehZbUTvCFwXqXL3zh
C8knP/nJZNppp219Rx0dmjXrs802W7LyyisXXtut/k6vtgkinyeffNKlG2u1
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
sHFBaF6hqB6xvFBFh8769qzvWWWVVVp9vDyOO+641vvSPuQ6qUMDNjs8D10G
sNG1PQjZ655ztr6YebasNdNGjA4dWx/2mg7NuIN7suzkjE70d+rWMXXaWGun
OLAZY60qvl/4/7rrrptrY1SmXolpr2LuaVdfyfe/znx3HkOGDHHXoff4dFOH
xg4vi06lTd383Qt1tXTozvbpjcGqQ4fGWO3UoaFOXV8G30fYbbfdVvo++24O
tLgPPvigdQ77aDvn69BVxxJ1xk1VyNKhm2hHqvTjy4LtHs+88sorG3tmu3nm
mWfcfgOU7ZAf7rJMLTqPEIMN9ngrU5e2G/b/xfbR9p/FDpo6lfapLmjYVv7z
9iww+7SJEyfWel9W/UTfJcvOFx9bzO3iSyq2/5DVR8IXadqeBGL6dPjttn3J
itpPro3xv4QOjVZQxqeD7b/MGjKfLN0Fu8L0vDTwjXl9QubzQ33CE088sfWe
vDWzWWMyfIaVGWMSF2kfie3QobPiJwT3MVYKrVHgN1v/lOc/LQ/sbrJ8Q++8
885Rc+Z108vIGmPElPGqadFpHdr3Dx2qG22dXqgeofxbvVpFh8769qzvwdev
PSdrHz+wvaxJg3S+7bQO7dsGoQWgy2BrAuzXwu/TTTed27OGdrHIJ1WMDp0V
zwNNh8Z2i3yGnXkenejv1K1j6rSx2BJhW0Rdw5wGcxcHH3ywGzcXUaZeiWmv
Yu5pV18J+12bU0uvofLBf6Ndh59in17VoTuVNnXzdy/U1dKhO9unNwarDh0a
Y7Vbh65T15dh0qRJrXJaNL9rdmL4Drb8G9pflL6Hr0PTx8dnsfmSKDuWqDNu
qkKWDt1EO9IOHZr9xonHuv4QOwW+6FhjSd837V+mKlOLziPEYMP0N+rEbvDi
iy+6PQ3MbxR1EuvE6vR1QphvesarIR599NFWu5be17YqWfUT+7Tm7a1rtp95
ffM8zIYu7Q9r6NChbm45TWyfjv6F9Y+y1v6wbyBtOHvhVgUdOq8v6mP7fKf3
laI/FNIzaAdYl5PGxlbMvYfYYostgn1C+jjMyXPObBnz7k+PychrFs6s/XUB
OxV89PnU6cdWjZ8Qth9K1p73Nj+NZhwDmpyFkfAaaEl8E3NXVambXkbWGCOm
jFdNi3bo0Hlpbvtu0H8K9flnnnlmd545/zTYy9m3hcaGVb8963vwX2jPCYXD
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
OKMPHBs/adCG+FZ8c+NPh/sZU7POn7CQt+uuax03blxL4yS9WW/VVL8qJr0o
w37cW9mgvrTzMWW8TFowrrC5Gd6NHQrvIF3Z08mnKJwG4xTyOfkPWwHGaeQ7
+vXWlw3ZeqQhDxAO+tSMM7gPfYJ60bRsv99W9dvLfg/3UK9bHUj5xZ6I8sA+
8jYuMpqsD2Mg3hlfZe1bQhwyXsmiTLtjlInnpuqWKiy66KIuPISd/ENbTLrx
b57PuXQ6G+jKlN88/wBpOtHfMeq0CVCljcWu1MblxBvfxHXkIfKY6Sc2RrK1
u1XqFaNKexVzTyf6SpR99DDilnrP5qEJH/a+aXsp5izI++gOft4nL6GdVKXo
edS7ft1E+eBa0orfs2h32vjUyd+drKtpc+g3cC9pTR7nPHmed6Jz+aC78hzG
C+2EuUfLA+n6j79WB1q6U9+l6fU+fbqN4v18D7/tt99+hW1YJ9K9bP8CisZY
Rc9qoo2NretjQfM2nyd8M3tKEIfYMaTHC8yRUX7JQxyEjXsYt/F9aLfMg1iZ
R5+PHUvE1lt5sP6C/EiaWH7heeQXfk+XwartSEx7WxZ8qdj6RDsoa+jT2Mv3
EpR9ynjaXqIuU4POI8RghLlE+h+27sm3Zdh0001r237ho4k6mrbTbB+6Be8/
5ZRT3DiA8DAu7YTPeNpfszFgvMsexOib6J9lbLnKwpwd9nPMqcfaqFWBto81
1MwJ2vfVgblif08u4gpbBvZ5wD8bf5mbfvvtt0s9j7zL3Gueb0WDPgPX0ddk
7tv6WPhy4jfKCeOjrHjlevrytEm+fSNhwKaFPgv95qy1nuQD2jq+nz5nJ9qr
KvHjwzf4fRu+m3CTF2J8NxeFr2x6V6FueqWpW8Zj06IpqDtIU8py1f1d7Hsp
v6zzNShHHMQz5ShrnqPJbyeuiXPinrUTTex32y6wycqaryFP+vvKN0G381iT
4P+RfkrVPUvb3d/xaaKOKWpjGW+b30F8o4bm6vBdhQ2gaQBN7NEW016VuadT
fSWgrWJOmfZ9oPjVLEO70iZNE32egVJXTy003acfbHR6jOXTzbqevgjllDJd
VDfQ1yMPXXXVVf1szszu29Y11h1LdGPclKZX2hHiFBt2mzdI28ijjfcC6P3t
9I022HUeIQYrtB34DrO11HYwl1OnbkdDatrWSAghhBBTJ9jtY28SS7v6O50G
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
jg5t5ZZva4q///3vrnySHw3imb302BM1q9xQ/orybZqm8nyT9TzwjeylSV1I
nZ9Xr+TFV166VE3/spSpc4gr6nbasiuvvNLVq3zHb37zm8bCIYQQQgghhBCi
vRx77LFOZzGdimPOOedM5ptvvtbx61//ut99vs7CPkOLLbZYMt100zltgz26
2APsoYceynzvbbfd5tb2fvazn03WWGON5Mtf/rKzK/z2t79dSv9Kc88997jx
Mc/wNbcbb7zR+W+tEra//OUvLkxcu8giiySrrbZaMu2007r194cffni/8f1K
K63kvsPee8ABBzg9YMEFF2z9tuOOO1YKJ78TF6Zb/uEPf0iWW245F47ZZ589
+dSnPuX0L8blIdAkdtttN7fH2vLLL59873vfc3uSoa1NmDDB6aBZNKlDo2Xx
buLu85//vPuLX96f/exnzjdvSIfed999ky984Qut+AmF4+qrr07mn39+F2fb
bbddsvnmm7u8Sp4ibk4++WR3XdX8XSUty4QTfB2a9Bo9erSLiznmmMOlB8fW
W2/t9DKfUF4577zzWuefeeYZF598r50nXo2q3172e4D4JT+RHykflBPuGTFi
RPLAAw8Ufkds2ewkZXToLHqtfkyDBhqam0AvZa840pU0W2ihhVz+ZZ6D/ODn
JfKKn5dCe8z5OjRzOtRJ5H2+h3ggPihjRXMxWWy88catuDZtlPlC5l5Iv3nm
mSf59Kc/7fbo/OlPf+p0dfRW6h6+ce6553bXDRkyJNljjz1y5wjakefr1vNg
30s8kGeGDx/u4pawpucYysZXOl1i07+IMnXOW2+9lYwaNcrlG2z3Ceuqq67q
4nfeeed13ymEEEIIIYQQYmBw5513Om3rqKOOao0FDzzwQPebHb7NlGFj2fHj
x7sx6znnnNOyLfzRj37kzjFOD9kbHn/88W6sixZh42/0gVNPPdXdx9iyqu0f
NmennXZastlmm7W+A5+46G5VwoaNG+NbdAK0IANdd4sttnD3Mg72+dWvfpUc
dthhyfTTT+/O77rrri5O0HN//OMf97GFrRrOpZde2tm5zjrrrC7eTBew9EKr
wOY1DeN2zqPXGtj4rr766oW+MJrSodl7Cu2A+CSOzLaPPMf3opWEwsJ5wkA+
CIXj/vvvd/eOGTOmTxqSh3bYYQd3z6RJk1rPqpK/q6RlUTgNX4dmXmDkyJFO
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
na106P+jW/Uj5cXmbtgbE5jTYZ87fiuzX2CWDkleevrpp/v8NtB16F7I81n1
/GqrreZ+Z9/ZqrRDhw6lf1my6pwPP/zQ+Vky3nzzTaer4yvb6jyOXtjXVAgh
hBBCCCFEebK0Knwvpu1+IWZsjY2u7bdWpO9xLZpJDDFhw27XbK1+8IMfZD4b
jdeuwyeoT6/o0DvvvHPLTu7ee+/tdx/6ga9DY3vr759XV4c+8cQTW3kpvUbd
J1aHJvwTJkwI3oNvar4bH97sl2hUzd/d0KHNPzQ+WdN5Hz0oK69wrfk2r6JD
Z3171veMHj269ZxXXnkl8zvwS841pAE+j32kQ/8f3aof2Vs1lBfwuctvzOPY
HA91YmjfvSwdcvXVV+9nCzzQdeheyPNZ9Tz7E1jY8CuVBX4r0j6r26FDh9K/
LFl1DnmU8peOU+A3W9uTt6eDEEIIIYQQQoje44UXXmiNaX2/o+h6K664Yr/r
Y8fWZovL+DZr36e33normW222YJ77JUhNmwjRoxwv2NnlYXpNWjRv//97/uc
6xUd2u7DxjHEggsu2EeHHjNmjPNNbNTVodE8sNHjGXvssUfmdfgKidGh2Vtt
6aWXznwuPp3TulHV/N0uHRpbvhBof/ig9dPFZ+aZZ3bnsPtOg825PT+UV6p+
e9b33HHHHa3nhMJhmA9yylOaOnkePQ0dn70v2Z+s3XRah4Z214/YrPJ88trH
H3/c+v3cc89tvdf07YkTJzp74DTbb7+9uzbtc3jo0KH98vdA16G7nechq573
5xRYS5EFtvX4FfepE19V0r8sWXUOa3n4/fLLLw/exzwn55l7FUIIIYQQQggx
cECTMO3wnHPOaf1+9NFHB/0Pm91e1t5Lc801lzuPluHzl7/8pbWeNsumFe1y
4YUX7qOTVCE2bKwpnn322d25Cy+8sN997777rhsncx7fE2nMdi5kQ1gnnFn7
V33961935/fee+8+v7N/E7/jTzPNgw8+2NIu1l9/fffbTjvtlPz0pz9tXXPU
UUe58/hGjWXSpEnuGbPOOmvy6quv9jtvdm5cs+qqqwafYeFA4/FBh+b3q6++
Ongf2lnan2vV/F0lLbPCafg6NL5MQ/tqmQ054cbmPg3+Ejgf8hmz++67t57P
HpFpqn573vdwPeeWXXbZPvbmBlob57HpfuaZZ/qdjy2bcMopp7S+Ez8I7YQ0
wraVd2FrXpVerR/XXXfdoC2r7QW35JJLtn7Dtw9+j9PYPqTzzz9/6zfmBci7
7CHqc+ihh7prs/bDO+2006LjOOY9WT4srrjiilbeop736VSer1rPw/jx4925
eeaZJ+iL/8UXX3Q+RZhn8KmTLlXSvyxZdY7p0GjcIft/86dVtKeDEEIIIYQQ
QojeY7PNNnNjOsa9rHnFFyP+hU3vY3x+yy23OP3KxuzYsmID9dhjjyUffPCB
Oz958uSWn15sb7Ff9P1Gci1jVtNaeA9w/9ixY50+mbY1LqKpsN1///3JdNNN
5zQobMLwTwns88S6Y+7DL6dvM8fef/i2IK5MS2Tcj+0mtqh1w4mvY2xXCQPa
06233pqcf/75LV8N2Eayz6L5FN5vv/1az0ZPMNtRzi+yyCKt8zPNNJMLI7o1
fjlY242fTfRrzmPHx3fwvhj704MPPrilbaGHGDxvhhlmaIWR9/C95rMiHQ6z
JbzrrrvcedOh2V8Nn7oG2qHpuSeccEK/8BTl76ppWRROw3RotCLCjMZte8zx
9+STT3Zpjc3zDTfcEIxLfPnyDOzAfa2HeGO+AF2S86QveQEf2lW/vcz3EMdb
b711a57j+eefd7/zTOIJnY/ySxiMpsqm73d8k002CcZTLNgek5fQtbC9xDeP
vYsDrZ/fOc91IT8BvVw/Ajqe+bZP+wXnnfzO3nfAPBx+pP16ziBvWfhtvu74
4493+x4aDz30kKuz0A+5jvqUuojv5zt4H/FidSoH+46S/9I6cB4x76EscZ73
EO+UOfYjtfOkPc+0MtqpPF+1njdsHoqyj25r81ysfUDX/f73v99oupRJ/7IU
1TmmQ3Ow7y5hNKiPqc+wJw/lUyGEEEIIIYQQvQ3jTBtvM65Gh8BuzjRIbGmx
7cLui3PoZqzvZv06GhFaI5oi9lf+eX5L7+nH3kOMj/FvwVgYO2Oei80Z+85V
pcmw8SzsBgkbGgA2vcQJdmvY+abtWbEb5DloqzwXrYf3EJ603WadcLLmG72M
ewkX7+E878VujTE5oDdh74bmaVoqPjp4julPe+21V8vP9Xbbbee+CX2X93Cd
fQfvISyxdm7oE8Qb70JDRYvlYB22+Yf2Dxg5cmSfcNj3sz7dzpNf8AlK2NDO
0HhYY861aNAh27mi/F01LYvCabAPHN9//fXXOw0J22bilb+WlthJh+zGfQ44
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
WPqddcpSk/FwwAEHuGeNGzeu3znsxPfdd99kxhln7Kdz4ucHO2afPB0arXKN
NdZw57G7NfDlYLauW221VWY4TYeeb775gueLdOiyZaxTcZtHN8pjr+THLNiv
0PbZPfroo9v2HiGEEEIIIYQQQsTDXmKmL+D/og6mM80wwwxOPwI0RHv+dddd
10SQgwxm/9DmM+CCCy4ofc/NN9/sbAOxcceXq8+TTz6ZTJkypelgtoWy34HG
u8ACCyTLLrtsN4LZOLFlqel42H333d37TjzxxD6/Y7/MnoFA+LDTPfPMM5P1
1luvpQem9wTM06GB++37yPOHHnposvLKK/9/7N0J3A3l///xX75ERLJFZKlQ
KdokItJCUchWKGnxr+SLVBQVikhRlkqbrFm+ikqKRIlKsmarLMmSpVJZEr7X
//G+fo+Z37nv+9z32eacOfc5r+fjMY9yZuaaa+bM3Oecz3zmc9l/33TTTXYc
vOzEGocO5xpL1LFNRslyPuZEtaqdZyYAAAAAAEDyadasmf3trpq7XrWlOr6B
nLofjz76qPuaYkzZ1XqNRirHoe+55x67Xd0zCIdyF4sUKWJatWpl67Jm1q9f
vxxzS5NFJPuhOJiO0bPPPpvobsZFtNeS18fhtttus+1lrt+rfg0YMCDoOrNn
z7Z1gFW7ITB2HCoOrXrDGgtP63ft2tXWcnjyySfDqkcTaxw6nGssUcc2GSXL
+ZiToUOHun+jlyxZEvftAQAAAACA8Kn2suJ8+t2uOEwslCPnPJ+veEAg5cPp
9UGDBtl/K49Sy0ZT7zg7qRyHdurIdu/ePeSyqiGhccTatWtnjh07FnQZxfvU
ZjKLdD+GDBlij5HGPcvtYrmWvD4OV155pW1v4cKFGV6/4YYbTI0aNUKup3oJ
jlBxaO1H//79o+pnrHHocK6xRB3bZJNM52NOfvzxR/dvtLYLAAAAAACSh2oa
OL/b33777ZjaWr58udvWsmXLMszT2GF6fcaMGfbfkyZNMuXKlcs2vhiNeMeh
Vd/X2b9E17TQ+HbarmrY5kS1k/VMupa977777HP/ztSlSxfTuXNnt27CO++8
k6DeRy6a/XBqOqhuQLLH9UKJ5Vry8jgo/qgxQlUHOPN4dIpD51RPuW7duqZE
iRIZXnPyVZVDG8yFF15o74tpTEqNZ7d48WJbY/q7774zO3bsyLGvysFV29mN
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
IfPbb78lZFuBtaFbtWqV47LKZS5RooRdtkyZMmbv3r0Rb2/nzp3u7/QWLVpE
221X3bp1bXw83aeVK1fGfCwdb7zxhu/7w8TExOTHpLrc0Xr33Xfdz7dhw4Z5
9jcZAAAAAIB4UTz4gQceSMi2AmtDjxo1KuTyXbp0cZefMGFCxNvbtm2bu/4t
t9wSTZczmD59upk0aVLaT9HcE8iOct393h8mJiYmP6bff/896r+dH3/8sfv5
NnjwYM/+JgMAAAAAEEixu4suusjWrChQoICZOHFiVO0oXzhv3rw2PpyZ8pE/
//xz27bGDjxw4ECs3TYPP/yw+7t5zZo1IZfv3r27u7z+P1LK83bWb9asWTRd
BgAg6QTe13366af97g4AAAAAIEX9888/ZunSpaZy5cr2N+jq1aujakc5VKef
fro5duxYhtdff/11U7x4cVOnTh0bvy1atKidXnzxxZj6XbNmTdtf1dv473//
G3L5K664wv2d/dZbb0W8Pe3XCSecYNdv2LBhNF0GACDpTJs2zf18fPbZZ/3u
DgAAAAAghf399982F1rx4nBiusFUrVrVPProoxlemzlzpjn55JPNihUr3NdU
3+LMM8+0v3eHDx8e1bYCa0PffPPNIZdXvnS+fPns8oolK3c7GoULF7ZtKAYO
AEAq0L1ZJw79wgsv+N0dAAAAAEh5v/zyi99dCCoR/Vq4cGFM4+998cUXdv3v
v/8+w+uK115++eVmz549GV5/6qmnIsplzmz27Nnub+ZQedVHjhwxF154obu8
th0t1S5RG+eee27UbSA0nROffPKJmTp1qjl69Kjf3QGAlPbyyy/H9LwQAAAA
ACB8GmdeebKKpyaTRPWrX79+YcV0s3PnnXeaevXqZXn9pJNOCtquan84v3lX
rVoV8fbuvfded/2VK1dmu9yGDRtsHNxZ9tZbb414W4HOP/982065cuViagc5
GzFihPuePfLII353BwBS2vPPP+/+zZ0/f77f3QEAAACAlPbNN9/Y31/BxtiL
1oQJE8y3334bUxvx6FcwV111VYaYrvJRFy9ebHr27GlrZxw/fjzbdf/66y9b
e2Ps2LFZ5t1///02FzlznvSmTZvc37yBNTtysm7dOjNv3jzz2muvmfz587vr
f/jhh3YMRGdSHq2eK27fvr0bBy9ZsqR59dVXc9yPcNStW9e2d8opp8TUDnKm
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
Hz/e7mPJkiXNkSNHPOyh/4hD/5/du3f73YWQ9uzZE/E6zjMBL774YlTbTIY4
tJ5n1Xrt27dPi/rQyOjHH390c8rGjh3rd3eypbohqlmrft53333mgQcecCfF
Izp37myaN29un7F55513/O4ukNQ6duxoryXVt8ks3p8JQKw0xkyhQoXsearv
2gAAAIjdgw8+aL9flS9f3u+uBPXZZ5/Z/ul3v0P5CGPGjDFdu3YNO0da+TZO
vF3jTqUS4tDGHDp0yNx4442madOmfnclR7qXojzLRx99NKL1NL6b3mPVCnDa
Wbx4senZs6cZPny4OX78eI7rJ0Mc+u6773avwYoVK5rXX3/d09gDcejkp2tU
79GZZ56ZlDU2dY+ydu3aYde5Xb9+vd9dBpLOjh07bG11jalbtmxZ93rReNga
70210iTenwlArIYOHWrPz4IFC5rt27f73R0AAADPqTbzTz/9FPW0f//+iLep
+nz6jqU8r2go/vXtt9/a+NiGDRvM5s2bbQ1mjc+1YsWKLON0Kfag5RU/1vL6
PaLaa1o/2G96/W5R/1544QX77zlz5phKlSqZHj162LqCVapUCbuvF1xwgW2r
devWUe1rskr3OLRqtypOq1x3/f5Ndl9//bXNDVMMORyZnwnQeGnNmjUz11xz
jbnlllvsez958uQc20iGOPTevXvdvzfOVLhwYRuLUEzdr34hcTS2n859vU8a
lyDZrFmzJuwYdL58+ZIylg74TfdGdZ2fcsoppkSJEvazWf/VZ5hqG+hej8T7
MwGIhWoyKUdH56WeSQMAAEhFV155ZcTjjgdO5557bkTbO3z4sP0trXU15nk0
Qv1u12+PQAsWLMh2WeXIZebkgSqm/corr5jzzz/fxq4Vj9brl1xySdh9VdzP
ybtJJdHGoRW/VU3wYcOGxalniaFn5/WM/Ny5c33tRyTHc/To0fY9e/PNN0Mu
6zwToNjzrl27zGWXXebWpXV+w7///vs5tpEMcWhRTH3QoEHub7vASfeUdFz8
6BcSp1evXvZ9qlChQtDx/wCkj3h+JgCxUB00nYflypWz9/8BAABSkeqQKV9M
cSzne7jq5ynWmzn3WXnGik8999xz9ve8lr3ooosi2t6iRYvc7SiHOVqqiaA+
XXvttW57ylWeOXNm0O9uyn124t/67aHn3r766qssdZudPFA9D6f6IXXr1nXH
CFEe2ssvv2zzr8P14Ycfuv1THk6qiDQO/ccff5gJEyaYiy++2K7XqFGjOPcw
fhRz1D48/vjjvvUh2uOpvHyd27p2cuI8E3DbbbfZ3+Wqde5QbvW0adNyRV2O
QOqv7hu0adPGzY91pjfeeMO3fiH+9NzP6aefbt+rkSNH+t0dAEkgHp8JQLT0
bF2RIkXs+Td16lS/uwMAABB3+s7tfP9WfmUoGv9J8aybbropou0MGTLEbkPP
Snph3bp1GZ5Zzm4M9Pnz59v81dtvv93GJLLj5IFq0pjqI0aMsLH6aG3dutVt
TzHpVBFuHFrPFZYuXdoue+qpp7rHIp5xaOXcKz4YD8qlVFy2VKlSvow9Gevx
VB0ajdvWsmXLHJdzngnQpFocun8UqWSLQwfSuHC696b3Ue22bds2KfqF+Pno
o4/sua9n8Lds2eJ3dwAkEa8+E4Bo6XuZzr1OnTr53RUAAICEUN6jE3eaN29e
WOvUqVPHPPDAAxFtR8/5axsNGjSIpptBKU7m9P3JJ5/MMn/ZsmU2x0D1/1Tr
NidOHqhqV+tZbsXLNW614tPRUL6N8qvVptpOFeHGoZcsWWLzdlV3UXXvrrji
irjHoZWzrm3E45lG5VL6mQvtxfF0xm378ssvg853nglQnHvs2LHu9aV7TqGu
n0DJGIfOPB6VxqhSu926dfO1X0iMPn36uJ8/ofL5AaQ+rz8TgGg4551qHVKP
AwAApAvV4nByisP9DtS8eXOb3xwJJ5ezY8eOUfQyONXicOLQaj+w/qfyP1Uv
Wrkt4cQdnDxQjWkoTg0GZ5xB1UOItK71eeedZ9to2rRpROsls2jrQyciDq3x
JbWN3377zfO2q1WrZq+RZBmbMJrjuXDhQrvOHXfcEXS+80xAixYt7L8Ve65Z
s6Z9zRkD9D//+Y/Zs2dPjttJxjh0/fr1zQ033GBrva9evdrGI/U8tsYv9bNf
SAzdu9E5EO5zPwBSm9efCUCkdN5pLE1NqokIAACQDjQGnxPHVY5zMG+//bat
yRxIMTC9Hi7FgfVctNf5pIotOPWqNTl9Ug1cxdcbN24c1thUTh6ocqCdvM/P
P/88Q9xcY9uobnQknBxw1aVOFekYh1ZdZLWr36zJIprjqetQzweors6ff/6Z
Zb7zTICOo6Nhw4b2NdUz0H0q3dsJdXy9jEMvXbrUk3ivnr3u27evPW5Fixa1
/42m5ojX/ULiqHaT83kxZcoUv7sDwEdefyYAkfjll19MpUqVTN68ec2sWbP8
7g4AAEDChKoNrXiuaiXv378/w+tdu3Y1GzduDHs7Gu/P2c5rr70Wc78DDR48
2G1bvyN2795t6/jWrl077PxuJ+YcWPNauQl6rWfPnjZmV7FixYj2WbSuM45i
qkjHOLTunajdp556ytN2YxHt8dS9Ga33/vvvZ5nnxJyXL1/uvtaqVSv7mp5h
1nju7dq1C7kNL+PQznX4ySefeNKeV5K1X8iZ/obr/NSzDcqDBAAgkfSbQt+R
9PuKcQkBAEC6CawNrbHDM3v00UdNjRo1Yt7ODz/8ELcx+5TT4tRh1lSmTBnb
50hikZMnT7brvvnmmxleb9++vc2TUVw7WP3pUJRD7fRLudupIB3j0M7z/MGu
Eb9EezwHDhxo13v44YezzNN5rvycwDo2ygXXNVC9enU7X+NvhuJlHFpU5z2S
+tSJkqz9Qs703H3ZsmXtcwFfffWV390BAKQJjXNdr149+4zouHHj/O4OAABA
wqlehGJSefLkMdu2bbN5y7t27bI1khV31b36f//73zFvx6lroCnacf9yojGm
nfZLlixpc6IjcfToUfP9998HnafjoufnoqH8UadfOraxUBw71smL8bnSMQ5d
uHBh+5vh999/97TdWER7PJW/m914oXpPg9XrUN2a7777Luzzx+s4NOA11Znp
3LlzUt1bAgCkNn2PvPPOO8306dP97goAAEDCbd682Y2R5jRpXLJY6flnpz3V
VfWactqc9pUbHY9x6qLhjIOtSbW4o6EYuTPGoxdTrGN0pVscWrXR1eapp57q
WZteiPZ4alwcrac6ufFCHBoAAAAAAAAO1aBwYpNdunQxa9eutZNqw6p27GWX
XWbn7dmzJ+ZtTZo0yd2W8iq9pBxN1awNjLUOHz7c021ES2NhOX369ttvo27n
rbfesrWJY52efvpps2LFipj2Kd3i0MqbVJuqV5FMoj2e27dvt+vpWYd41ZQg
Dg0AAAAAAADH7bff7sZI582bl2X+yJEjzbnnnuvJtkaPHu1u68cff/SkTcf9
999v6yY88MAD7jYqV66cFHVb33vvPbdPixcv9rs7nvArDn348GFbL0b3SbKb
7rvvPruNhQsX5rhcJOegU1PmwgsvDGv59evX57jtUJPuE4Rz7yfa4+nkd2sK
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
/Yz0GovnsU1WyXA+Zqdbt2627Xr16sXUDgAAABLvqquust/levTo4XdXPOf8
dlXedyoiDo1QiEP/n8CcSdW8ROrQM+J6XxUT2bhxoydt+hmHVixV2x03blzU
baTK+R7ufsyePdtdzpmcGJly5XMDp8514cKFbX2RJk2a2LoRgeMf9O/f3z7D
phhhZspTrlGjRoZjEFjDIpy6ycpd1bLaTiDn+bknnngi6Hoa8+/ll1/O8rpq
NwSLQ6u+tNOvzNes8oVDXXvPPPOMu8z8+fOznV+sWLGg60d6jcXz2CarZDgf
s+PU29ak+uMAAADIPZTjoN9q+p75xx9/+N0dzyj3Qt9P9RypagqmIuLQCIU4
9P/Sb1b9LdD1ovgEUovq0+q9VZzEK37GoRXT03ZnzpwZ1fqxnu+qa6K8Y9Vi
iHbS+GWxCnc/lFupOg2qw6W44mOPPWbuv/9+e39d623bti2i7fq1/06sV/ty
0UUXmQYNGtjx+MKh+sOKt+t4af+Vd6qcUR0H/XvatGlhtePkCSvfONDAgQPd
66Fy5co2Hv3555/bHFlRPeDAMQYd2cWhnZocmjI/j6fvpc48xauDceLM+v4a
bKxtp33lXAcTyTUW72MbSjqfj9lRrr1qgah/qhUDAACA3KVNmzb2u9ygQYP8
7opnLr/8crtPDzzwgN9diRvi0AiFOPT/jmWpMSJ1raiuKFLLDz/84MasvHze
3c84tPP59cknn0S8rhfnu1M/INZJtXyjFe5+qO6+6gkrZubERGPlx/4rrqbc
XWdd1RPT+RxOTRGtqzEDVY9XseFYOPHmzLFS5cCqJnDmfdQ2W7ZsmW1tt+zi
0MoPcNrQtRZo+vTp7rydO3cGbdeJQ5ctWzbofCcOrZoQwYR7jSXi2IaSzudj
Tpy6H6ph7dW1DwAAgMTQ7/h8+fLZvJFUiGl+/PHH9rtp0aJFbQ27VEUcGqGk
exxaeXKqD6qcrLfeesvv7iAOVJPWiZX89NNPnrXrZxxaNU+13ffffz+i9bw6
3xVT1PgKyhWNdtIzSRpDNhrh7odqAletWtVUq1YtaE5stPzY/5UrV7rnm/Jm
NR6jcn0VRw2V066x2rSeF3/j+vTpY9t6/PHHs8xTXm6vXr3cWtyBk+qzK485
s+zi0IpVXnfddXZeYO001XJQDWK93qFDh2z76cShK1SoEHR+qDh0uNdYoo5t
TtL5fMzJ3Llz3T6+/fbbcd0WAAAAvOeM+aLfBfp9kFsph+qMM86w+zJx4kS/
uxNXxKERSjrHoTW2lZ69VnxEv8EzmzJliq15idytWbNm9u/gWWed5Wm7yVCX
I5LPsFQ53yPZj1dffdUeJ8Xocrvhw4fbfVHcVrFY0b4656DGlQ5GscVKlSqZ
iy++2JN+6BkybS9zLW7lL2vMQFH/Vq9ebd544w3TvHlzkydPHrtOsDEBs4tD
i9Z39k/v+VNPPWWuuOIK+++bbrrJjoOXnVjj0OFcY4k6tskoWc7HnKj2h/JN
nN8uAAAAyF30fa527dr2+5zGfMqN9PtV9eu0D4rRpjri0AglnePQd9xxh617
H+y5YP29O/HEE82PP/7oQ8/gFf3NL1KkiP07eM8993jatp9xaO2Ltqtc73Cl
yvkeyX7UqlXL1uTIzffOHc79lKZNm2Z43al9/uijj7qvKV7r1E1WPDBU7ZJI
3Hbbbba9zPV71a8BAwYEXUdjRCp3XbUbMseOc4pD6/uaxsLT+l27drW1HJ58
8smw6tHEGocO5xpL1LFNRslyPoainHltT38HnHg5AAAAcg/V4StXrpz9PbFo
0SK/uxOx7t272++jysNIh1pxxKERSrrGoTUOkuIf2cUPFy5caGtX8rs1d9Pn
VLyey/YzDu3UkdVnWjhS5XyPdD8UY1TsM7sawrmF9sepdTF06NAM85Rbqted
8TuUk6xlnVjtkCFD7HyN/+aFK6+80ranYx3ohhtuMDVq1Ai53q5duzK8nlMc
WvvRv3//qPoZaxw6nGssUcc22STT+RiKUwNE09q1axOyTQAAAHhLz1pqbBJ9
r1y1apXf3Qmb8130/PPPt7U50oETh9b3fdVsDJxU2w/pQ3XQM58DmvRse7rF
oUeNGmWvC41DpeegAyddKx07djSVK1c21atX97uriJHqrDoxiN27d3vatmpC
OG0n+r6sxhPTdlXDNpRUOd+j2Q+nBlf79u09rQ+daMuXL3fPtWXLlmWYp3H4
9PqMGTPsvydNmmTzBVQbW5zaFor3xhrfVPxReaWqA5x5PDrFoXOqp1y3bl1T
okSJLK9r3JHs6l9ceOGF9nmG559/3ua/L1682NaY/u6778yOHTty7KtycNVu
duMUOjVbdN8imHCusUQd22STLOdjOFasWOH2lTEgAAAAci/9Bjj99NNt3kNu
oLFzlPNywQUXpE0MWpw4dLCJMVvSy+bNm7M9F9IpDq3xmJxapaGmtm3b+t1d
xEh1GfReapw6L3z11Vdm/vz59rn5hg0buueKYnCKu2jeN99848m2cqLaBsrz
DfWseaqc79Hux9133+2+XrFiRfP666/nynj0sGHD7D6o1m3m91v7q3lTp061
dbEVu1Uur2PLli12nGktoxin6pooNheNNWvWuPfzM3Pi0KVLl85QM0U1UVTv
WPNGjBhhX/vrr7/MggULbM0N5/3ROHcaQzrwftErr7yS43tdpUoV06NHjwwx
aeVHqI5HzZo17TK6ThRz1vYOHTpk1q9fb2PMV199tduO7snqvtIff/zhthPO
NZaoY5tskuV8DIfysZ2/HbpnBQAAgNxL+Rr6Pplb6LeHfoOkE71HumcQbNq/
f7/f3UOCbdiwIei5sGnTJr+7ljAtW7YMK5alqV+/fn53N2Xo/p/is+FMisfk
NP5YuBRTcuIPbdq08WAvjDnnnHNsXErPBCm3s2TJkqZUqVL2//WMkOYl6r6O
8ku1bzk925Iq53u0+7F37173XoQzqba04tPKrc0ttE/q+1133ZVlnv6uK8au
c1H5302aNLF10QOpBoUT+wu8/6gc899++y3sfiiOr3U1bnVm2q5y0R955BH7
nM25555rrrnmGlsXQznNikE7MUuNaaj+KBda142uJ/2/4r5OPrX+Bjjj9mkZ
9Vc11ZRPUL58+Qz3JRT7dmqv3HzzzSZ//vx2m8WLF7frqj96bfv27ebee++1
NcQD52vbqjeX+Rm/cK6xRBzbZJMs52O49JyEtqG/BQAAAAAAILU5429FMp11
1llm+PDh7vPckVLsyGmrd+/eHu+R/5z6tt26dfO7K0lNY0GoVq1il8HyaSMZ
69Evismqvm524y0681UvITuqZ6Gx5RRvDTwGis8qhzWcMSrr169v11EcOTNt
26knoVjiZ599Zj744AMbl8wchwxF17xTK1n1hIPlsCvPVc8lnHnmmXa5nj17
RrSNcIR7jcX72CabZDkfw9W8eXPbtmqwaCxTAAAAAACQupQHqViSYlNOvOGi
iy6ydcsVT3Im5TB//fXXpkOHDu5yimFnF+/IifIqnTbGjBkTh73yl46naqwq
nzPdnvWJhs7BuXPn2tx45cMGxr5UszZdaJzAwYMHuzmizqS85ZxqvGhsEC13
xRVXxL2PS5YssdtSnDKUOXPm2GVVN9xrkV5jueHYJptoj1kk+vTp47abU2wc
AAAAAACkjsDYsGrD5uS6665zl33nnXci3tZLL73krj9v3rxou5zUhg4daveP
8bcio/sfqnGrmio6fslcGzuedF/IyRXVpPpl2encubNdJhH1TFTfWdtSjY1Q
1q5da5etU6dOXPoS7TWWrMc2mUVyzCIxefLklL4nCQAAAAAAstKz8048QDmA
OQkcoyya8aUeffRRd/1UrYGuZ8xVs1p1WJ2aCMhe5voOTk3edKptohzTzLm9
5cqVs2PGZVebV9eqahrceuutieiifS6ibNmytobwu+++m+1yej+d8QZVWzge
IrnGcsOxTTbRHLNIaRxE57Ogb9++nrQJAAAAAACS2yWXXGJjARofLFStDcUL
nNhBNHFCp7aHxj6LtD5tbvLVV1/Zmqrh1DBId6rBe8MNN9haDor/NWjQwNbo
UA3jdLFgwQI7LuBzzz1nj8H48ePtddKxY8egy//111+matWqtr727t27E9ZP
9U11KjQeocapVI607idpzFPVVlD/NR6e4pUDBgyIa1/CvcZyy7FNJpEes2hs
27YtpnuaAAAAAAAgd9m/f7+NCYf7vH2tWrXc2IHGO4uUM+6X8hhT3bhx48Kq
dZLuVI9D9zcU3yxatKj976JFi/zuVsLpelL+reKfuj66d+9ux3MMpn379qZg
wYK+1dVVLZ9OnTqZunXrmtNOO82e54o/69/9+/c3mzdvTkg/wr3GctOxTRaR
HLNo/P777+5nie5PAgAAAACA1KZYgxMLGDFiRI7Ljhw50l22Xr165siRIxFv
78wzz7Trn3feedF2OVdRjYmTTjoprXJ7EV+KvWqMvnSvW+zw8hrj2CaOnodx
Pk9uvPFGv7sDAAAAAADi7KGHHgqrNvTYsWPtM/Ba7vzzz7c5rJFSzQ+njUsv
vTSWbucqGzduNAcPHvS7G0gRP//8s/nll1/87kZS8eoa49gmlu4fOPc1AQAA
AABAalM8OFhtaI1TpfzCt99+21xzzTV2GcUMnnrqqajyoOXPP//MkE8NAEhf
JUuWtJ8HF1xwgd9dAQAAAAAAcfTHH3+4taE15cuXz53y5s1rxxpz5jVs2ND8
+OOPMW1POdROe40aNfJoLwAAuZFTp0k1qAEAAAAAQOoKrA09evToLPOVH71+
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
Vd3Z52zb9lBDAAB4Hx+VhHhn
    "], {{0, 436.}, {721., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{721., 436.},
  PlotRange->{{0, 721.}, {0, 436.}}]], "Input",ExpressionUUID->"028a91a3-927e-\
4d39-959d-80ac3343484b"],

Cell["Examine expression in the Beta Function", "Text",
 CellChangeTimes->{{3.9007110620691423`*^9, 
  3.9007110726095*^9}},ExpressionUUID->"af5b3e70-80f2-41fe-a76d-c8799a21cd78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Kappa]", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Kappa]", "-", "2"}], ")"}], 
      RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], 
    RowBox[{"4", "\[Kappa]"}]], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Kappa]", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900711077266938*^9, 3.900711151117489*^9}, {
  3.900711194605558*^9, 3.9007112152613173`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"c363ad00-338f-402e-b852-18a82073f65e"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", "\[Kappa]"}]]], "Output",
 CellChangeTimes->{3.9007112186590853`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"948bb520-bc69-4112-a6c9-d28a288c63f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Kappa]", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Kappa]", "-", "2"}], ")"}], 
      RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], 
    RowBox[{"4", "\[Kappa]"}]], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Kappa]", "<", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90071125241186*^9, 3.900711253809573*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"af27f213-a802-4a62-a674-5dca022f665c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
  RowBox[{"2", " ", "\[Kappa]"}]]], "Output",
 CellChangeTimes->{3.900711255397729*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"20a6e601-da12-4ca1-8358-245d57d63e12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"\[Kappa]", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Kappa]", "-", "2"}], ")"}], 
     RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], 
   RowBox[{"4", "\[Kappa]"}]], "]"}]], "Input",
 CellChangeTimes->{3.900711283763598*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"34ad2494-8160-4ee9-9e6d-8b00a4336ccf"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Kappa]", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], 
  RowBox[{"4", " ", "\[Kappa]"}]]], "Output",
 CellChangeTimes->{3.900711284721752*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"1858a28e-25b7-4157-9a95-48b9ac367af7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "4"], "-", 
     RowBox[{
      FractionBox["1", "4"], 
      RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], ")"}], "+", 
   FractionBox["1", 
    RowBox[{"2", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9007113634379053`*^9, 3.900711408910223*^9}, {
  3.9007114703267*^9, 3.900711488854772*^9}, {3.900711538136435*^9, 
  3.900711549132329*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"269d3131-4e85-492c-9aa0-514abdf0f4d6"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "-", "\[Kappa]", "+", 
   RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
  RowBox[{"4", " ", 
   RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]], "Output",
 CellChangeTimes->{3.9007115500645514`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"f96503ee-023c-483d-a52c-9c1008adec63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "-", "\[Kappa]", "+", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Kappa]", "<", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.900718375488864*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"6e1d3fc2-431b-41ba-87e0-84bab1e23d7a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
  RowBox[{"2", " ", "\[Kappa]"}]]], "Output",
 CellChangeTimes->{3.9007183769898367`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"7d88b0b8-2a95-4f7e-9237-b40d3ce5c2dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "-", "\[Kappa]", "+", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Kappa]", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9007937059406567`*^9, 3.900793707180373*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"a31b4516-3cc6-4948-9897-3bdfb7b73b7e"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", "\[Kappa]"}]]], "Output",
 CellChangeTimes->{3.9007937090607767`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"2023d2d7-2e72-495d-be4c-512ba8758b50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Alpha]"}]], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Alpha]"}]], 
      RowBox[{"Sign", "[", "\[Kappa]", "]"}]}]}], ")"}], "+", 
   FractionBox["1", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9007113634379053`*^9, 3.900711408910223*^9}, {
  3.9007114703267*^9, 3.900711488854772*^9}, {3.900711538136435*^9, 
  3.900711549132329*^9}, {3.900793929946444*^9, 3.9007939543424664`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"907aa1e1-a091-49c8-96f9-6f0a85c43404"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "-", "\[Kappa]", "+", 
   RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
  RowBox[{"2", " ", "\[Alpha]", " ", 
   RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]], "Output",
 CellChangeTimes->{3.9007115500645514`*^9, 3.900793957232717*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"2a2733e9-ed8c-48b0-82dd-64f279410b4b"]
}, Open  ]],

Cell["\<\
So the normalization of the Coupled Gaussian Distribution can be defined more \
simply to be\
\>", "Text",
 CellChangeTimes->{{3.9007116770455647`*^9, 3.9007116952426367`*^9}, {
  3.9007117362865763`*^9, 
  3.9007117412941628`*^9}},ExpressionUUID->"0cb84ca8-4da8-42fa-b5e2-\
7c68e6688792"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZCG", "[", 
   RowBox[{"\[Sigma]_", ",", "\[Kappa]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]},
        {
         RowBox[{"\[Sigma]", " ", 
          FractionBox[
           RowBox[{"Beta", "[", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             FractionBox[
              RowBox[{"2", "-", "\[Kappa]", "+", 
               RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
              RowBox[{"4", " ", 
               RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}], 
           SqrtBox[
            RowBox[{"Abs", "[", "\[Kappa]", "]"}]]]}], "True"}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}]], "Input",
 CellChangeTimes->{{3.900711719513818*^9, 3.900711719905691*^9}, {
  3.9007117581681423`*^9, 3.900711783214587*^9}, {3.900711818113537*^9, 
  3.900711861710246*^9}, {3.900711977221773*^9, 3.900711992165928*^9}, {
  3.900712075004537*^9, 3.900712152112599*^9}, {3.9007122036506767`*^9, 
  3.900712206089093*^9}, {3.900717115218515*^9, 3.900717120414794*^9}, {
  3.90071719736769*^9, 3.90071721309264*^9}, {3.900717500946576*^9, 
  3.900717509683704*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"637db5c4-29c3-4ce6-a635-357b843c3c9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"CoupledExponential", "[", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", "x", ")"}], "2"], 
             SuperscriptBox["\[Sigma]", "2"]], ",", "\[Kappa]"}], "]"}], 
          ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], 
        RowBox[{"ZCG", "[", 
         RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "->", 
        RowBox[{
         RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.90071233452488*^9, 3.9007123779340963`*^9}, {
  3.900712409680501*^9, 3.9007124993785877`*^9}, {3.9007168238736553`*^9, 
  3.9007168322581987`*^9}, {3.900716964365011*^9, 3.900716967584632*^9}, {
  3.900717245360351*^9, 3.9007172571330223`*^9}, {3.90071753107347*^9, 
  3.900717534758707*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"01503527-6912-4f9e-847c-363b8253c05d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9007168187211246`*^9, 3.900717085025461*^9, 
  3.9007171747148733`*^9, 3.9007173052559357`*^9, 3.900717551857593*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"d4b632f7-f9ad-4f56-a472-b560d5e360e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["\[Sigma]", "2"], 
        RowBox[{"Abs", "[", "\[Kappa]", "]"}]]]}], 
     RowBox[{"+", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["\[Sigma]", "2"], 
        RowBox[{"Abs", "[", "\[Kappa]", "]"}]]]}]], 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"CoupledExponential", "[", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", "x", ")"}], "2"], 
             SuperscriptBox["\[Sigma]", "2"]], ",", "\[Kappa]"}], "]"}], 
          ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], 
        RowBox[{"ZCG", "[", 
         RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "->", 
        RowBox[{
         RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{
      RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900712527346136*^9, 3.900712537224249*^9}, {
  3.9007125682516193`*^9, 3.900712570734934*^9}, {3.900712606344831*^9, 
  3.9007126259786177`*^9}, {3.900716836583644*^9, 3.9007168540730963`*^9}, {
  3.9007168894177713`*^9, 3.900716944447032*^9}, {3.90071726427873*^9, 
  3.9007172766516953`*^9}, {3.900717543536325*^9, 3.900717548210547*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"d56b943b-2ade-4237-b4a5-0795c1501827"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "pwrl", 
   "\"Unable to prove that integration limits \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \
FractionBox[SqrtBox[SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"]], \
SqrtBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Kappa]\\\", \\\"]\\\"}]]]}], \\\
\",\\\", FractionBox[SqrtBox[SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"]], \
SqrtBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Kappa]\\\", \\\"]\\\"}]]]}], \\\
\"}\\\"}]\\) are real. Adding assumptions may help.\"", 2, 149, 62, 
   31783508982185986633, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9007168578933067`*^9, 3.900716947105948*^9, 
  3.90071712682305*^9, 3.900717279169726*^9, 3.900717553318042*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"6adbdd65-3cd8-4a60-80fe-e0f82af07616"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.900716877758087*^9, 3.9007169825151463`*^9, 
  3.900717157850774*^9, 3.900717289162818*^9, 3.900717579733758*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"908a308b-8121-4703-85d5-6e12e12fe2ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"CoupledExponential", "[", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", "x", ")"}], "2"], 
             SuperscriptBox["\[Sigma]", "2"]], ",", "\[Kappa]"}], "]"}], 
          ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], 
        RowBox[{"ZCG", "[", 
         RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "->", 
        RowBox[{
         RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9007173477414017`*^9, 3.9007173631749763`*^9}, 
   3.900717466368334*^9, {3.9007175705424347`*^9, 3.900717575927039*^9}, {
   3.900717610809194*^9, 3.900717636332115*^9}, 3.900717786620975*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"ba902729-64bf-41bb-8834-2025c92a2429"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"ComplexInfinity", 
        RowBox[{
         RowBox[{"\[Kappa]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"\[Kappa]", "\[GreaterEqual]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{"x", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
             RowBox[{"1", "+", 
              FractionBox["1", "\[Kappa]"]}]]}]], " ", 
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], ",", 
            FractionBox["3", "2"], ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
              SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}]},
       {
        FractionBox[
         RowBox[{"x", " ", 
          SqrtBox[
           RowBox[{"-", "\[Kappa]"}]], " ", 
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], ",", 
            FractionBox["3", "2"], ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
              SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9007173673576603`*^9, 3.900717580676416*^9, 
  3.9007176485274982`*^9, 3.900717797676949*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"d6caa4a7-ac0c-42cb-b597-88fcfc365636"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"x", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " "}]], " ", 
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], ",", 
            FractionBox["3", "2"], ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
              SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}]},
       {
        FractionBox[
         RowBox[{"x", " ", 
          SqrtBox[
           RowBox[{"-", "\[Kappa]"}]], " ", 
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], ",", 
            FractionBox["3", "2"], ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}], 
              SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "2"], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{
         RowBox[{"-", "1"}], "<=", "\[Kappa]", "<", "0"}]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Input",
 CellChangeTimes->{{3.900718068620104*^9, 3.900718078675562*^9}, {
  3.9007181139330683`*^9, 
  3.900718160837079*^9}},ExpressionUUID->"e75c6063-41c5-49ea-804a-\
7145b49950a1"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   SqrtBox[
    RowBox[{"Abs", "[", "\[Kappa]", "]"}]], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"2", " ", "\[Kappa]"}]], ",", 
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], " ", "\[Kappa]"}], 
       SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
  RowBox[{"\[Sigma]", " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      RowBox[{"2", "-", "\[Kappa]", "+", 
       RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
      RowBox[{"4", " ", 
       RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{{3.900718255336557*^9, 3.900718262391605*^9}, 
   3.900718444158496*^9, {3.9007186503981323`*^9, 
   3.900718656261634*^9}},ExpressionUUID->"15a69e15-1183-4b59-bf0d-\
857f5f03303a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       SqrtBox[
        RowBox[{"Abs", "[", "\[Kappa]", "]"}]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"2", " ", "\[Kappa]"}]], ",", 
         FractionBox["3", "2"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], " ", "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "2"]]}]}], "]"}]}], 
      RowBox[{"\[Sigma]", " ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"2", "-", "\[Kappa]", "+", 
           RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
          RowBox[{"4", " ", 
           RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "->", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
       RowBox[{"\[Kappa]", ">", "0"}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
       RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900720200527684*^9, 3.9007202299943047`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"275079b6-51bf-4524-9f65-4f11bb9fdd7a"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.900720223236252*^9, 3.900720246425572*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"8f445f58-f87e-4c43-9a42-73f12d8f5ba9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Determine generalization with \[Alpha] ", "Subsubsection",
 CellChangeTimes->{{3.900718862327075*^9, 3.900718884552556*^9}, {
  3.900719052226459*^9, 
  3.9007190654543743`*^9}},ExpressionUUID->"42070032-7d37-445b-86e4-\
be6bc2593e09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"x", " ", 
     SqrtBox[
      RowBox[{"Abs", "[", "\[Kappa]", "]"}]], " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
       FractionBox["3", "\[Alpha]"], ",", 
       RowBox[{"-", "\[Infinity]"}]}], "]"}]}], 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"Beta", "[", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox[
        RowBox[{"2", "-", "\[Kappa]", "+", 
         RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
        RowBox[{"2", "\[Alpha]", " ", 
         RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900718898531801*^9, 3.900718905656929*^9}, {
  3.900718975467218*^9, 3.900718989371751*^9}, {3.900719139425024*^9, 
  3.9007191666193132`*^9}, {3.900719263543066*^9, 3.900719282538241*^9}, {
  3.90071931665611*^9, 3.900719340981097*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"7533308c-9db3-47a2-bc27-df0e6bbc2b35"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   SqrtBox[
    RowBox[{"Abs", "[", "\[Kappa]", "]"}]], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
     FractionBox["3", "\[Alpha]"], ",", 
     RowBox[{"-", "\[Infinity]"}]}], "]"}]}], 
  RowBox[{"\[Sigma]", " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      RowBox[{"2", "-", "\[Kappa]", "+", 
       RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
      RowBox[{"2", " ", "\[Alpha]", " ", 
       RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.900719168766583*^9, {3.900719273848467*^9, 3.900719283822567*^9}, {
   3.900719327081656*^9, 3.900719343334239*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"8b42c565-4b78-4763-b612-ae720ca038a3"]
}, Open  ]],

Cell["\<\
Leave out the Beta function since I don\[CloseCurlyQuote]t know how that \
generalizes\
\>", "Text",
 CellChangeTimes->{{3.900719976058028*^9, 
  3.9007199905896473`*^9}},ExpressionUUID->"5d94671f-a148-471a-a782-\
707554b6ee57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Kappa]", "]"}], 
        FractionBox["1", "\[Alpha]"]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
         FractionBox["3", "2"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Alpha]"], " ", 
            "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], "]"}]}], 
      RowBox[{"\[Sigma]", " "}]], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "->", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
       RowBox[{"\[Kappa]", ">", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
       RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900718898531801*^9, 3.900718905656929*^9}, {
   3.900718975467218*^9, 3.900718989371751*^9}, {3.900719139425024*^9, 
   3.9007191666193132`*^9}, {3.900719263543066*^9, 3.900719282538241*^9}, {
   3.90071931665611*^9, 3.9007193866421547`*^9}, {3.90071955242179*^9, 
   3.900719608445039*^9}, {3.900719658706552*^9, 3.900719659689329*^9}, 
   3.9007200194323387`*^9, {3.900720075839993*^9, 3.900720087053953*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"ca3293b3-d084-44a5-8aa9-55a3e3d36d3a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", "\[Infinity]"}], 
   RowBox[{
     RowBox[{"\[Mu]", "\[Element]", 
       TemplateBox[{}, "Reals"]}], "&&", 
     RowBox[{"\[Kappa]", "<", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.900719168766583*^9, {3.900719273848467*^9, 3.900719283822567*^9}, {
   3.900719327081656*^9, 3.900719343334239*^9}, 3.900719388752138*^9, 
   3.9007196319552526`*^9, 3.900719968708262*^9, 3.9007201472398653`*^9, 
   3.900722089742696*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"012aa89c-118a-4e95-8c28-e3f80ecb853d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Kappa]", "]"}], 
        FractionBox["1", "\[Alpha]"]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
         FractionBox["3", "\[Alpha]"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Alpha]"], " ", 
            "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], "]"}]}], 
      RowBox[{"\[Sigma]", " "}]], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "->", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
       RowBox[{"\[Kappa]", ">", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
       RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9007201155572033`*^9, 3.900720117252849*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"d1f6d159-d453-42ae-9744-197ad83fab46"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", "\[Infinity]"}], 
   RowBox[{
     RowBox[{"\[Mu]", "\[Element]", 
       TemplateBox[{}, "Reals"]}], "&&", 
     RowBox[{"\[Kappa]", "<", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.900726095638317*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"64cd28a6-c743-42a2-9c54-f3aa6345b643"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Kappa]", "]"}], 
        FractionBox["1", "\[Alpha]"]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
         FractionBox["3", "2"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Alpha]"], " ", 
            "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], "]"}]}], 
      RowBox[{"\[Sigma]", " ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"2", "-", "\[Kappa]", "+", 
           RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
          RowBox[{"2", " ", "\[Alpha]", " ", 
           RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "->", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
       RowBox[{"\[Kappa]", ">", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
       RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900718898531801*^9, 3.900718905656929*^9}, {
   3.900718975467218*^9, 3.900718989371751*^9}, {3.900719139425024*^9, 
   3.9007191666193132`*^9}, {3.900719263543066*^9, 3.900719282538241*^9}, {
   3.90071931665611*^9, 3.9007193866421547`*^9}, {3.90071955242179*^9, 
   3.900719608445039*^9}, {3.900719658706552*^9, 3.900719659689329*^9}, 
   3.9007200194323387`*^9, {3.900720075839993*^9, 3.900720087053953*^9}, 
   3.900737973551793*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"58d34ce3-aef8-4932-a28b-b516a008d96d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", "\[Infinity]"}], 
   RowBox[{
     RowBox[{"\[Mu]", "\[Element]", 
       TemplateBox[{}, "Reals"]}], "&&", 
     RowBox[{"\[Kappa]", "<", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9007380222675447`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"f10a213b-6bcc-4876-8142-3fe05b1f91de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Kappa]", "]"}], 
        FractionBox["1", "\[Alpha]"]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
         FractionBox["3", "2"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Alpha]"], " ", 
            "\[Kappa]"}], 
           SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], "]"}]}], 
      RowBox[{"\[Sigma]", " ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          RowBox[{"\[Alpha]", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", "1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], "+", 
              RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], ")"}]}]}], 
          RowBox[{"2", " ", "\[Alpha]", " ", 
           RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "->", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
       RowBox[{"\[Kappa]", ">", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
       RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900718898531801*^9, 3.900718905656929*^9}, {
   3.900718975467218*^9, 3.900718989371751*^9}, {3.900719139425024*^9, 
   3.9007191666193132`*^9}, {3.900719263543066*^9, 3.900719282538241*^9}, {
   3.90071931665611*^9, 3.9007193866421547`*^9}, {3.90071955242179*^9, 
   3.900719608445039*^9}, {3.900719658706552*^9, 3.900719659689329*^9}, 
   3.9007200194323387`*^9, {3.900720075839993*^9, 3.900720087053953*^9}, 
   3.900737973551793*^9, {3.90074047105928*^9, 3.900740472215394*^9}, {
   3.900740566224215*^9, 3.900740642833929*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"cfd7b3d2-9bf7-4a52-a995-bde4043a70ab"],

Cell[BoxData["Undefined"], "Output",
 CellChangeTimes->{3.900740479535262*^9, 3.90074065232885*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"147cf428-5c1a-4239-9f5c-33f15f1252e2"]
}, Open  ]],

Cell["\<\
Try using Regularized Incomplete Beta function as a starting point\
\>", "Text",
 CellChangeTimes->{{3.900770159761365*^9, 
  3.900770182219212*^9}},ExpressionUUID->"50077d32-233c-4f7b-9b92-\
db52be839436"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", "\[Alpha]_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ProbabilityDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<CDF\>\"", ",", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"BetaRegularized", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}]}]], ",", 
                   FractionBox["1", 
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
                   FractionBox["1", "\[Alpha]"]}], "]"}]}], 
                RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
               {
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"BetaRegularized", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}]}]], ",", 
                    FractionBox["1", "\[Alpha]"], ",", 
                    FractionBox["1", 
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], 
                  ")"}]}], 
                TagBox["True",
                 "PiecewiseDefault",
                 AutoDelete->True]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}},
              Selectable->True]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "->", 
        RowBox[{
         RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
         RowBox[{"\[Kappa]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Sigma]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"x", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Mu]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Alpha]", "\[Element]", "Reals"}]}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.900307370048066*^9, 3.9003075459438457`*^9}, 
   3.90069374425983*^9, {3.900696209256369*^9, 3.9006962162855186`*^9}, {
   3.900771181199758*^9, 3.900771196360791*^9}, {3.9007715131916523`*^9, 
   3.900771565219775*^9}, {3.9007716294294853`*^9, 3.900771656291593*^9}, {
   3.900792321604969*^9, 3.900792363962439*^9}, {3.900793274558592*^9, 
   3.900793307195891*^9}, {3.900794381283154*^9, 3.900794382401894*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"b553a386-dc4e-4e1f-a920-4ffbfc29e4c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "0.5"}], ",", "1.5"}], "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9007706366773443`*^9, 3.900770677145747*^9}, {
  3.900771237972796*^9, 3.9007712389920588`*^9}, {3.900771591612906*^9, 
  3.90077159292763*^9}, {3.900771677963319*^9, 3.900771678574312*^9}, {
  3.90079238575688*^9, 3.900792387723948*^9}, {3.9007935456707697`*^9, 
  3.9007935717676783`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"20b0faac-83fd-4c16-a411-6ec4b34183d9"],

Cell[BoxData[
 RowBox[{"0.144949408370491`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.25105973982474`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.900770684173366*^9, 3.900770935149507*^9, 3.900771202251992*^9, 
   3.9007712400045853`*^9, {3.900771572799596*^9, 3.900771595454075*^9}, {
   3.9007716702422657`*^9, 3.900771679444831*^9}, 3.900792373158435*^9, 
   3.9007934964179773`*^9, {3.900793546746099*^9, 3.900793572757092*^9}, 
   3.900794389959449*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"ccc96c1e-ef6d-4908-87d8-899410fc5c4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "0.5"}], ",", "1.5"}], "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.9007706366773443`*^9, 3.900770677145747*^9}, {
   3.900771237972796*^9, 3.9007712389920588`*^9}, {3.900771591612906*^9, 
   3.90077159292763*^9}, {3.900771677963319*^9, 3.900771678574312*^9}, {
   3.90079238575688*^9, 3.900792387723948*^9}, {3.9007935456707697`*^9, 
   3.9007935717676783`*^9}, {3.9007945901972427`*^9, 3.900794594136895*^9}, 
   3.9007946473087463`*^9, {3.90079471896243*^9, 
   3.900794733316078*^9}},ExpressionUUID->"54ea9c7e-e270-43eb-b223-\
f3211ab50da2"],

Cell[BoxData[
 RowBox[{"7.031666035750242`", "\[VeryThinSpace]", "-", 
  RowBox[{"12.179202835775854`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.900770684173366*^9, 3.900770935149507*^9, 3.900771202251992*^9, 
   3.9007712400045853`*^9, {3.900771572799596*^9, 3.900771595454075*^9}, {
   3.9007716702422657`*^9, 3.900771679444831*^9}, 3.900792373158435*^9, 
   3.9007934964179773`*^9, {3.900793546746099*^9, 3.900793572757092*^9}, 
   3.900794389959449*^9, 3.9007946295422077`*^9, 3.900794699360923*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"2eb23d43-176b-413e-8552-8a27c2a1c272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"CoupledDistribution", "[", 
     RowBox[{"0", ",", "\[Sigma]", ",", 
      RowBox[{"-", "0.5"}], ",", "\[Alpha]"}], "]"}], ",", 
    FractionBox["\[Sigma]", 
     SuperscriptBox["0.5", 
      FractionBox["1", "\[Alpha]"]]]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9007947604121428`*^9, 3.90079485859301*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"6c740166-a058-414e-b558-b49a6ffc2cc9"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.900794848455805*^9, 3.9007957790332947`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"f87336ac-6ff2-4995-9930-0723a498f7c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Abs", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.900795790640031*^9, 3.9007957995681467`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"4412b385-ff68-4be5-afdb-48b126d456a7"],

Cell[BoxData[
 SqrtBox[
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{3.900795801732589*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"33c1d89f-cbd9-494f-a8e1-77b7a73f6f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CoupledDistribution", "[", 
      RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
      ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"x", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Mu]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900792403441307*^9, 3.900792419038026*^9}, {
  3.9007933383459187`*^9, 3.90079335624284*^9}, {3.9007944252328653`*^9, 
  3.900794426348081*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"d54dfa54-fae7-4d59-82e6-53dde2c89c16"],

Cell[BoxData[
 TemplateBox[{
  "ProbabilityDistribution", "ignjmps", 
   "\"The distribution function of \
\\!\\(\\*RowBox[{\\\"ProbabilityDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"\\\\\\\"CDF\\\\\\\"\\\", \\\",\\\", \
TagBox[GridBox[{{\\\"\[Piecewise]\\\", \
GridBox[{{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
RowBox[{\\\"BetaRegularized\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Times\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
RowBox[{\\\"x$3279636\\\", \\\"\[LessEqual]\\\", \\\"0\\\"}]}, \
{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", RowBox[{\\\"BetaRegularized\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[Kappa]\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\",\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\"]\\\"}]}], \\\")\\\"}]}], \
TagBox[\\\"True\\\", \\\"PiecewiseDefault\\\", Rule[AutoDelete, True]]}}, \
Rule[ColumnAlignments, List[Left]], Rule[ColumnSpacings, 1.2`], \
Rule[ColumnWidths, Automatic], Rule[AllowedDimensions, List[2, Automatic]], \
Rule[Selectable, True], Rule[Editable, True]]}}, Rule[ColumnAlignments, \
List[Left]], Rule[ColumnSpacings, 0.5`], Rule[ColumnWidths, Automatic]], \
\\\"Piecewise\\\", Rule[SyntaxForm, Equal], Rule[SelectWithContents, True], \
Rule[StripWrapperBoxes, True], Rule[Selectable, False], Rule[Editable, \
False], Rule[DeleteWithContents, True]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"x$3279636\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Assumptions\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"0\\\", \
\\\"<\\\", \\\"\[Alpha]\\\", \\\"<\\\", \\\"\[Infinity]\\\"}], \\\"&&\\\", \
RowBox[{\\\"\[Kappa]\\\", \\\"\[NotEqual]\\\", \\\"0\\\"}], \\\"&&\\\", \
RowBox[{\\\"\[Kappa]\\\", \\\">\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"&&\
\\\", RowBox[{\\\"0\\\", \\\"<\\\", \\\"\[Sigma]\\\", \\\"<\\\", \\\"\
\[Infinity]\\\"}], \\\"&&\\\", RowBox[{\\\"\[Kappa]\\\", \\\"\[Element]\\\", \
TemplateBox[List[], \\\"Reals\\\"]}], \\\"&&\\\", RowBox[{\\\"\[Sigma]\\\", \
\\\"\[Element]\\\", TemplateBox[List[], \\\"Reals\\\"]}], \\\"&&\\\", \
RowBox[{\\\"x$3279636\\\", \\\"\[Element]\\\", TemplateBox[List[], \
\\\"Reals\\\"]}], \\\"&&\\\", RowBox[{\\\"\[Alpha]\\\", \\\"\[Element]\\\", \
TemplateBox[List[], \\\"Reals\\\"]}]}]}]}], \\\"]\\\"}]\\) has negative \
atomic weight. Proceeding by ignoring the discontinuities, which may result \
in non-normalized density function.\"", 2, 213, 63, 31783508982185986633, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.900794429155877*^9},
 CellLabel->
  "During evaluation of \
In[213]:=",ExpressionUUID->"2820710b-c409-4cfd-aa7e-4595628b6f96"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Kappa]", 
             RowBox[{
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[Sigma]", "\[Alpha]"], 
             RowBox[{
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]]}], 
         RowBox[{"2", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "\[Alpha]"], ",", 
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{"x", ">", "0"}]},
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox["\[Sigma]", 
           FractionBox["1", "\[Kappa]"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "x"}], ")"}], "\[Alpha]"], " ", "\[Kappa]"}], 
              "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Kappa]", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "x"}], ")"}], "\[Alpha]"], " ", "\[Kappa]"}], 
              "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]]}], 
         RowBox[{"2", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
            FractionBox["1", "\[Alpha]"]}], "]"}]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.900792420256357*^9, 3.900793314634718*^9, 
  3.900793360474489*^9, 3.900794432607246*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"d0a47f12-fe14-4950-84a1-98d9505ed716"]
}, Open  ]],

Cell["Attempt at CDF definition for negative values of \[Kappa]", "Text",
 CellChangeTimes->{{3.900793821563827*^9, 
  3.9007938400782146`*^9}},ExpressionUUID->"b4a90d2d-4227-400f-9cd9-\
cf88719e8337"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", "\[Alpha]_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ProbabilityDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<CDF\>\"", ",", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"BetaRegularized", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}]}]], ",", 
                   FractionBox[
                    RowBox[{"2", "-", "\[Kappa]", "+", 
                    RowBox[{"ComplexExpand", "[", 
                    RowBox[{"Abs", "[", "\[Kappa]", "]"}], "]"}]}], 
                    RowBox[{"2", " ", "\[Alpha]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    RowBox[{"Abs", "[", "\[Kappa]", "]"}], "]"}]}]], ",", 
                   FractionBox["1", "\[Alpha]"]}], "]"}]}], 
                RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
               {
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"BetaRegularized", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"], "]"}]}]}]], ",", 
                    FractionBox["1", "\[Alpha]"], ",", 
                    FractionBox[
                    RowBox[{"2", "-", "\[Kappa]", "+", 
                    RowBox[{"ComplexExpand", "[", 
                    RowBox[{"Abs", "[", "\[Kappa]", "]"}], "]"}]}], 
                    RowBox[{"2", " ", "\[Alpha]", " ", 
                    RowBox[{"ComplexExpand", "[", 
                    RowBox[{"Abs", "[", "\[Kappa]", "]"}], "]"}]}]]}], 
                    "]"}]}], ")"}]}], 
                TagBox["True",
                 "PiecewiseDefault",
                 AutoDelete->True]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}},
              Selectable->True]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "->", 
        RowBox[{
         RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
         RowBox[{"\[Kappa]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
         RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Sigma]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"x", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Mu]", "\[Element]", "Reals"}], "&&", 
         RowBox[{"\[Alpha]", "\[Element]", "Reals"}]}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.900307370048066*^9, 3.9003075459438457`*^9}, 
   3.90069374425983*^9, {3.900696209256369*^9, 3.9006962162855186`*^9}, {
   3.900771181199758*^9, 3.900771196360791*^9}, {3.9007715131916523`*^9, 
   3.900771565219775*^9}, {3.9007716294294853`*^9, 3.900771656291593*^9}, {
   3.900792321604969*^9, 3.900792363962439*^9}, {3.900793274558592*^9, 
   3.900793307195891*^9}, {3.900794029667437*^9, 3.9007940502713957`*^9}, {
   3.900794085164356*^9, 3.9007941083159723`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"c4cb734e-42b9-40ff-b7b4-f3a6c7e92140"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"CoupledDistribution", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "0.5"}], ",", "1.5"}], "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9007706366773443`*^9, 3.900770677145747*^9}, {
  3.900771237972796*^9, 3.9007712389920588`*^9}, {3.900771591612906*^9, 
  3.90077159292763*^9}, {3.900771677963319*^9, 3.900771678574312*^9}, {
  3.90079238575688*^9, 3.900792387723948*^9}, {3.9007935456707697`*^9, 
  3.9007935717676783`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"56ebb634-8834-49f1-bd10-a5bce5efb8b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.6666666666666656`"}], "+", 
  RowBox[{"2.886751345948128`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.900770684173366*^9, 3.900770935149507*^9, 3.900771202251992*^9, 
   3.9007712400045853`*^9, {3.900771572799596*^9, 3.900771595454075*^9}, {
   3.9007716702422657`*^9, 3.900771679444831*^9}, 3.900792373158435*^9, 
   3.9007934964179773`*^9, {3.900793546746099*^9, 3.900793572757092*^9}, 
   3.90079415805614*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"4f715030-5c23-47bc-8fc7-46574212876a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "0.5"}]}], "]"}], ","}], "]"}]], "Input",
 CellChangeTimes->{{3.900771119322076*^9, 3.900771132547724*^9}, {
  3.900793509900859*^9, 3.9007935234507303`*^9}, {3.900794174053269*^9, 
  3.9007941834983673`*^9}},ExpressionUUID->"53714d9b-28b0-49a6-96b2-\
7b371a9fdc5c"],

Cell[BoxData["0.9091549430912117`"], "Output",
 CellChangeTimes->{{3.900771127306756*^9, 3.900771133420121*^9}, {
  3.900793501635202*^9, 3.900793524603154*^9}, {3.900794164270296*^9, 
  3.900794179865918*^9}},
 CellLabel->
  "Out[206]=",ExpressionUUID->"a35ec471-c89c-4fd3-b71c-9fa74cf33f75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CoupledDistribution", "[", 
      RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
      ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "!=", "0"}], "&&", 
     RowBox[{"\[Kappa]", ">", 
      RowBox[{"-", "1"}]}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Sigma]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"x", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Mu]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]", "\[Element]", "Reals"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900792403441307*^9, 3.900792419038026*^9}, {
  3.9007933383459187`*^9, 3.90079335624284*^9}, {3.9007942184954643`*^9, 
  3.900794219408498*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"8c3cc907-479f-445e-8888-09c1d8ff7305"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Kappa]", 
             RowBox[{
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[Sigma]", "\[Alpha]"], 
             RowBox[{
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox[
            RowBox[{"2", "-", "\[Kappa]", "+", 
             RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
            RowBox[{"2", " ", "\[Alpha]", " ", 
             RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]]}], 
         RowBox[{"2", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "\[Alpha]"], ",", 
            FractionBox[
             RowBox[{"2", "-", "\[Kappa]", "+", 
              RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
             RowBox[{"2", " ", "\[Alpha]", " ", 
              RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]}], "]"}]}]], 
        RowBox[{"x", ">", "0"}]},
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Kappa]", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "x"}], ")"}], "\[Alpha]"], " ", "\[Kappa]"}], 
              "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[Sigma]", "\[Alpha]"], 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "x"}], ")"}], "\[Alpha]"], " ", "\[Kappa]"}], 
              "+", 
              SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], ")"}], 
           FractionBox[
            RowBox[{"2", "-", "\[Kappa]", "+", 
             RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
            RowBox[{"2", " ", "\[Alpha]", " ", 
             RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]]]}], 
         RowBox[{"2", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "-", "\[Kappa]", "+", 
              RowBox[{"Abs", "[", "\[Kappa]", "]"}]}], 
             RowBox[{"2", " ", "\[Alpha]", " ", 
              RowBox[{"Abs", "[", "\[Kappa]", "]"}]}]], ",", 
            FractionBox["1", "\[Alpha]"]}], "]"}]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.900792420256357*^9, 3.900793314634718*^9, 
  3.900793360474489*^9, 3.900794235859227*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"f2dbd23e-ee8b-4d90-9b3d-ae37f0755b63"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Maximum 2nd Derivative of Log-Log Plot of Coupled Distribution\
\>", "Subsection",
 CellChangeTimes->{{3.900617900293548*^9, 
  3.900617922646264*^9}},ExpressionUUID->"33342a90-eb8a-45ca-b3c5-\
963c878b58a5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"f", "[", 
      SuperscriptBox["\[ExponentialE]", "u"], "]"}], "]"}], " "}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "24611af4-206d-49cd-88f0-cc648ffea32f"],
 "is the Log-Log function of f[x]; where u = Log[x]"
}], "Text",
 CellChangeTimes->{{3.900617995545291*^9, 3.900618043210885*^9}, {
  3.900618214542685*^9, 
  3.900618234788727*^9}},ExpressionUUID->"4860bf06-5ab6-43cc-8326-\
5cf1768cae8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"f", "[", 
       SuperscriptBox["\[ExponentialE]", "u"], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1"}], "}"}]}], "]"}], "/.", 
   RowBox[{"u", "->", 
    RowBox[{"Log", "[", "x", "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900618047549983*^9, 3.9006180846096354`*^9}, {
  3.900618201411016*^9, 3.900618205387191*^9}, {3.900618279159223*^9, 
  3.900618311980282*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"fcd22963-608d-4a1a-ba81-1e1e0c64bbb5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], 
  RowBox[{"f", "[", "x", "]"}]]], "Output",
 CellChangeTimes->{3.9006180857036343`*^9, 3.900618206380237*^9, 
  3.900618315577396*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"d85cd8a1-a29d-4db3-a438-a881bc73675d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"f", "[", 
       SuperscriptBox["\[ExponentialE]", "u"], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "2"}], "}"}]}], "]"}], "/.", 
   RowBox[{"u", "->", 
    RowBox[{"Log", "[", "x", "]"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9006182481165752`*^9, 3.9006182590337343`*^9}, {
  3.9006183308408623`*^9, 3.900618333854422*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"09f4d70a-601a-43c5-887e-0919adbcfe16"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], 
  
  SuperscriptBox[
   RowBox[{"f", "[", "x", "]"}], "2"]]], "Output",
 CellChangeTimes->{3.900618260989237*^9, 3.900618335607049*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"115b877a-df1e-47f7-9a8b-2e34a6ae9205"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Log", "[", "\[IndentingNewLine]", 
         RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"CoupledDistribution", "[", 
              RowBox[{
              "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
              ",", 
             SuperscriptBox["\[ExponentialE]", "u"]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Assumptions", "->", 
            RowBox[{
             RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
             RowBox[{"u", "\[Element]", "Reals"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Assumptions", "->", 
         RowBox[{
          RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
          RowBox[{"u", "\[Element]", "Reals"}]}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "2"}], "}"}]}], "]"}], "/.", 
    RowBox[{"u", "->", 
     RowBox[{"Log", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
     RowBox[{"u", "\[Element]", "Reals"}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.900618659194501*^9, 3.900618662751422*^9}, {
  3.900618769234251*^9, 3.900618814311591*^9}, {3.9006188540418577`*^9, 
  3.900618864153223*^9}, {3.900618900611079*^9, 3.900618903835081*^9}, {
  3.9006189360750647`*^9, 3.900618936625249*^9}, {3.900618968390655*^9, 
  3.900619006462318*^9}, {3.900619086916436*^9, 3.90061909729806*^9}, {
  3.900619344808447*^9, 3.900619375459462*^9}, {3.9006194850585947`*^9, 
  3.9006195127201853`*^9}, {3.9006207751562138`*^9, 3.900620782623643*^9}, {
  3.900620840726137*^9, 3.900620844532078*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"28820d6c-2bbb-483f-85bd-2ebbcaf3f5e5"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
      SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.900619016517021*^9, 3.900619106963869*^9, 
  3.900619387649942*^9, 3.900619520286128*^9, 3.900620792887969*^9, 
  3.9006208511155*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"cbe1eab4-da86-47da-8965-5e7a864e05e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
        SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "2"]]}], "/.", 
   RowBox[{"\[Alpha]", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900619809297222*^9, 3.90061982830455*^9}, 
   3.900620811622594*^9, 3.900620878191351*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"62c0cfd8-7d96-4dad-9eb0-d7c1d1f44a9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", "\[Sigma]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}], "2"]]}], 
   ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox["\[Sigma]", "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"]]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.90061982914874*^9, 3.900620812905072*^9, 
  3.900620879378895*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"2df1b7cc-9b5d-47ac-b34a-c10cbc457425"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
        SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "2"]]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900620926028668*^9, 3.900620933187199*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"2a45a8bf-4b70-431a-b624-70b0ca7ab923"],

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
        SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "2"]]}], ",", "x"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.9006209345234833`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"daf18b5d-4b3b-4058-9294-643d5ab2c81c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", "\[Sigma]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}], "2"]]}],
        ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], " ", "\[Kappa]"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0.1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0.1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9006199319706163`*^9, 3.900619973513755*^9}, {
   3.900620011787415*^9, 3.9006200305684843`*^9}, 3.900620890257571*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"e2cc9ed0-bb57-4b6f-a9a9-cfd4f72dea67"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Kappa]$$ = 0.1, $CellContext`\[Sigma]$$ = 
    0.1, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Sigma]$$], 0.1, 5}, {
      Hold[$CellContext`\[Kappa]$$], 0.1, 5}}, Typeset`size$$ = {
    450., {133., 140.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Kappa]$$ = 0.1, $CellContext`\[Sigma]$$ = 
        0.1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{-(($CellContext`x (
            1 + $CellContext`\[Kappa]$$)) \
($CellContext`\[Sigma]$$/($CellContext`x $CellContext`\[Kappa]$$ + \
$CellContext`\[Sigma]$$)^2)), -(((2 $CellContext`x^2) (
            1 + $CellContext`\[Kappa]$$)) \
($CellContext`\[Sigma]$$^2/($CellContext`x^2 $CellContext`\[Kappa]$$ + \
$CellContext`\[Sigma]$$^2)^2))}, {$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`\[Sigma]$$, 0.1, 
         5}, {$CellContext`\[Kappa]$$, 0.1, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{504., {206., 214.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.900620031918613*^9, 3.900620048103738*^9}, 
   3.900620891498481*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"21f7ee5a-f443-4cf4-a66a-148972bdf6ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Log", "[", "\[IndentingNewLine]", 
         RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"CoupledDistribution", "[", 
              RowBox[{
              "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], "]"}],
              ",", 
             SuperscriptBox["\[ExponentialE]", "u"]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Assumptions", "->", 
            RowBox[{
             RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
             RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
             RowBox[{"u", "\[Element]", "Reals"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Assumptions", "->", 
         RowBox[{
          RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
          RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
          RowBox[{"u", "\[Element]", "Reals"}]}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "3"}], "}"}]}], "]"}], "/.", 
    RowBox[{"u", "->", 
     RowBox[{"Log", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
     RowBox[{"u", "\[Element]", "Reals"}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.900620458386269*^9, 3.9006204584121428`*^9}, {
  3.9006209748333397`*^9, 3.900620981963146*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"1053b92d-1546-4f1f-9702-32d26b33875a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "-", 
     SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
     SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{3.9006204652097807`*^9, 3.900620984553409*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"fc23ce56-9036-4edf-a1bb-4e2f7402098c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", " ", "\[Sigma]"}], ")"}], "\[Alpha]"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "-", 
          SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "+", 
          SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}], "3"]], "==", "0"}],
      ",", "x", ",", "\[IndentingNewLine]", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
       RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
       RowBox[{"u", "\[Element]", "Reals"}], "&&", 
       RowBox[{"x", "\[Element]", "Reals"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "x", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}], "&&", 
    RowBox[{"x", "\[Element]", "Reals"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9006204746137247`*^9, 3.900620518404944*^9}, {
  3.9006205911660233`*^9, 3.90062059363027*^9}, {3.900620702680441*^9, 
  3.9006207126503687`*^9}, {3.9006210613493433`*^9, 3.900621074563023*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"5f64b446-8c09-4165-8fe2-af4b80243d9c"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.900620484935404*^9, 3.9006205210018682`*^9, 
  3.90062059516405*^9, 3.9006207577758617`*^9, 3.900621565947845*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"2e1a90d3-4632-4efd-9e1f-716fa7b5dab6"]
}, Open  ]],

Cell[TextData[{
 "From observation ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], "-", 
    SuperscriptBox["\[Sigma]", "\[Alpha]"]}], ")"}]],
  CellChangeTimes->{{3.9006204746137247`*^9, 3.900620518404944*^9}, {
   3.9006205911660233`*^9, 3.90062059363027*^9}, {3.900620702680441*^9, 
   3.9006207126503687`*^9}, {3.9006210613493433`*^9, 3.900621074563023*^9}},
  ExpressionUUID->"18d8d1d1-c744-44b0-b124-95b05037230f"],
 "determines where the third derivative is zero and therefore the minimum 2nd \
derivative.\nSo x = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Sigma]", 
    SuperscriptBox["\[Kappa]", 
     FractionBox["1", "\[Alpha]"]]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "99226af1-aeb4-4116-90b9-2cfa8dd64b18"],
 "is the maximum curvature and therefore the \[OpenCurlyDoubleQuote]knee of \
the curve\[CloseCurlyDoubleQuote].  This is also the point where the \
derivative is halve the minimum, where the minimum is at limit x -> \
\[Infinity]."
}], "Text",
 CellChangeTimes->{{3.900621573079054*^9, 3.9006215768752203`*^9}, {
  3.900621626863731*^9, 
  3.900621810158147*^9}},ExpressionUUID->"56856981-e841-4cca-a37e-\
71df457c10d1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.900621974617425*^9, 3.900621980906172*^9}, 
   3.900622013448435*^9},ExpressionUUID->"18b5d2c7-df66-4495-a9a7-\
80af940df0bb"]
}, Open  ]]
},
WindowSize->{1119, 837},
WindowMargins->{{Automatic, 23}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3acfa6d5-cd3a-4cf1-99ec-98df29263d22"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 3, 67, "Subsection",ExpressionUUID->"f9ac21f0-fdab-401b-b0d3-b9117ac59fb3"],
Cell[767, 27, 3653, 97, 381, "Text",ExpressionUUID->"6b252861-82a5-47cf-90f5-8aecb2d36e04"],
Cell[4423, 126, 162982, 2678, 461, "Input",ExpressionUUID->"5490e667-0570-494f-a47d-2b385bb02658"],
Cell[CellGroupData[{
Cell[167430, 2808, 213, 4, 56, "Subsubsection",ExpressionUUID->"769843b4-94f7-4512-81a0-856e427bbfa7"],
Cell[167646, 2814, 1290, 32, 116, "Input",ExpressionUUID->"d22f3db4-81de-41de-a4e5-361c0ca936d4"],
Cell[168939, 2848, 460, 14, 94, "Input",ExpressionUUID->"29cb402c-f0d1-4d18-b3c7-06aefaf30f03"],
Cell[CellGroupData[{
Cell[169424, 2866, 545, 15, 64, "Input",ExpressionUUID->"e015e916-8715-49e6-b9ba-8ce6c5321709"],
Cell[169972, 2883, 247, 5, 59, "Output",ExpressionUUID->"50661378-8dd8-4215-846a-eeafc04e4178"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170256, 2893, 1046, 30, 64, "Input",ExpressionUUID->"9225f0c1-d0d9-42e2-ad08-0f36bc076777"],
Cell[171305, 2925, 515, 15, 61, "Output",ExpressionUUID->"7437d584-d0db-4682-bfa9-dd362ec7791a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171857, 2945, 1108, 32, 64, "Input",ExpressionUUID->"46f4802e-8818-4a41-827b-7ac009d46714"],
Cell[172968, 2979, 794, 23, 60, "Output",ExpressionUUID->"727ce72c-c04a-42b3-b0b3-6c5127070346"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173799, 3007, 410, 10, 57, "Input",ExpressionUUID->"451f4961-24ee-4069-9f4b-680dd8a743a1"],
Cell[174212, 3019, 224, 5, 42, "Output",ExpressionUUID->"74f35a92-a6bf-45ba-8005-7d3a24ee0229"]
}, Open  ]],
Cell[174451, 3027, 168, 3, 44, "Text",ExpressionUUID->"32002940-9ebe-4ecb-abf5-cd09c161bb32"],
Cell[CellGroupData[{
Cell[174644, 3034, 357, 10, 68, "Input",ExpressionUUID->"2b1a3779-9d86-4625-a4d4-44deb607d684"],
Cell[175004, 3046, 493, 16, 112, "Output",ExpressionUUID->"2bbc6948-c045-42ba-9353-502279fb53c7"]
}, Open  ]],
Cell[175512, 3065, 380, 13, 112, "Input",ExpressionUUID->"2dcc3e42-73c2-4d24-b068-a66543f15251"],
Cell[175895, 3080, 271, 8, 75, "Input",ExpressionUUID->"dac92908-e8cd-49cf-902b-bfbcab6011e0"],
Cell[CellGroupData[{
Cell[176191, 3092, 460, 13, 69, "Input",ExpressionUUID->"356dbe62-2965-4190-ac3a-e16e6fbf0d62"],
Cell[176654, 3107, 423, 13, 88, "Output",ExpressionUUID->"3db5479e-665f-4694-8909-5062af285203"]
}, Open  ]],
Cell[177092, 3123, 348, 11, 75, "Input",ExpressionUUID->"dc3888b6-078b-404d-8702-4cb0320de5a5"],
Cell[CellGroupData[{
Cell[177465, 3138, 15884, 324, 1202, "Input",ExpressionUUID->"6dccbd69-ca5a-4d6d-82b9-48d95933335c"],
Cell[193352, 3464, 5172, 99, 478, "Output",ExpressionUUID->"ccac4643-183f-4370-86a5-ab5ef1a3b726"]
}, Open  ]],
Cell[198539, 3566, 206, 4, 37, "Input",ExpressionUUID->"f569a3dc-3c8a-432c-be23-12685c7ffe73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198782, 3575, 185, 3, 56, "Subsubsection",ExpressionUUID->"9980e58b-0d70-4e1d-9d08-faa83790730d"],
Cell[CellGroupData[{
Cell[198992, 3582, 21891, 478, 1535, "Input",ExpressionUUID->"3604adca-5eaa-491e-84ac-1b58c51bac9a"],
Cell[220886, 4062, 7667, 157, 489, "Output",ExpressionUUID->"5599e840-d457-48f2-9137-1a3ec503910d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228590, 4224, 22564, 503, 1790, "Input",ExpressionUUID->"cf08c984-3c8f-4fe4-844d-b24ad9746a8b"],
Cell[251157, 4729, 7092, 142, 442, "Output",ExpressionUUID->"420b7a15-626e-4818-add0-b8f4bdff92d1"]
}, Open  ]],
Cell[258264, 4874, 177, 3, 44, "Text",ExpressionUUID->"7c9382ba-ffbf-4082-9348-e1d61fe6d993"],
Cell[CellGroupData[{
Cell[258466, 4881, 741, 19, 90, "Input",ExpressionUUID->"7bbb939c-c1b8-49fc-8df0-17f357b11ac4"],
Cell[259210, 4902, 1065, 33, 120, "Output",ExpressionUUID->"8e7c61fd-8de7-4fe5-afbd-3a4bf5a4e3ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260312, 4940, 367, 10, 46, "Input",ExpressionUUID->"0d523bae-2a65-4d7a-9b02-63d88c81f1ce"],
Cell[260682, 4952, 1071, 34, 112, "Output",ExpressionUUID->"47a00552-d09a-483e-b46d-27892c09d81b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261790, 4991, 1170, 35, 127, "Input",ExpressionUUID->"d01244af-a802-4d8d-a717-c31cb5b08062"],
Cell[262963, 5028, 151, 2, 42, "Output",ExpressionUUID->"ef4f8563-8049-48a8-95bc-66c108e877be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263151, 5035, 806, 20, 90, "Input",ExpressionUUID->"65664d9f-2580-4036-9249-949d09f5f4eb"],
Cell[263960, 5057, 1278, 41, 120, "Output",ExpressionUUID->"1fd9a70d-36cd-48ac-a6e6-c115a787a55e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265275, 5103, 297, 9, 46, "Input",ExpressionUUID->"9f44568d-f35c-4eee-9693-ecd2ea295a88"],
Cell[265575, 5114, 153, 3, 42, "Output",ExpressionUUID->"93a7e740-7550-4e88-848a-e9c77c927f81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265765, 5122, 1466, 44, 127, "Input",ExpressionUUID->"5a6d4d7a-6157-4f85-85b9-0989e5bf8a0f"],
Cell[267234, 5168, 705, 21, 80, "Output",ExpressionUUID->"ce3eee0a-96b8-48a7-b3ae-23b485749128"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267976, 5194, 831, 24, 87, "Input",ExpressionUUID->"18d5c856-791c-498a-9e63-26b3d14b31ef"],
Cell[268810, 5220, 786, 24, 80, "Output",ExpressionUUID->"4e0a796f-9888-4223-9f43-8ff767b289f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269633, 5249, 1540, 45, 127, "Input",ExpressionUUID->"5425a507-9c77-41d7-b75f-1576c9810d2d"],
Cell[271176, 5296, 1399, 43, 120, "Output",ExpressionUUID->"e0516494-b812-4383-ad74-d79a07038baa"]
}, Open  ]],
Cell[272590, 5342, 230, 4, 44, "Text",ExpressionUUID->"e62e67f3-06ba-4410-bc21-a15579a04655"],
Cell[CellGroupData[{
Cell[272845, 5350, 457, 12, 37, "Input",ExpressionUUID->"b2490b6d-de0f-4f9a-aad9-77b20523ba57"],
Cell[273305, 5364, 585, 18, 88, "Output",ExpressionUUID->"b617fcb2-911a-4986-8681-036cf70e5b86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273927, 5387, 723, 21, 87, "Input",ExpressionUUID->"3f836993-c40c-49cf-b6b4-2699d26c3c0b"],
Cell[274653, 5410, 288, 8, 65, "Output",ExpressionUUID->"0a07262b-ff8e-43f4-bbc5-3330f5a83668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274978, 5423, 1493, 44, 127, "Input",ExpressionUUID->"ff690cd4-f999-4e6d-a31c-6d06f514b9b1"],
Cell[276474, 5469, 454, 11, 35, "Message",ExpressionUUID->"14b46e2a-f8bc-4896-b32b-a9f023cd6163"],
Cell[276931, 5482, 551, 17, 61, "Output",ExpressionUUID->"cd129d06-16c1-4ab2-9ea6-9190fb6b1f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277519, 5504, 809, 20, 90, "Input",ExpressionUUID->"77d936d7-63e1-44ee-9033-0bf801073816"],
Cell[278331, 5526, 1397, 44, 120, "Output",ExpressionUUID->"c6eda9bf-1e33-497f-8012-25d2499a8a36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279765, 5575, 393, 11, 46, "Input",ExpressionUUID->"cc6e2b1a-c8b6-4400-8408-94be3a6aeeb1"],
Cell[280161, 5588, 1305, 41, 122, "Output",ExpressionUUID->"5ed4a159-ca3b-4cf1-ad03-1cefe82ed60b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281503, 5634, 1612, 49, 130, "Input",ExpressionUUID->"51943ee0-bff2-4dae-9bff-10dc26e31a9a"],
Cell[283118, 5685, 101056, 1729, 479, "Output",ExpressionUUID->"92f086a5-b745-45eb-86d5-b5c39f06e38a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384211, 7419, 1629, 48, 127, "Input",ExpressionUUID->"91d3082c-5d43-4edf-83f4-8f953c0444b3"],
Cell[385843, 7469, 452, 11, 35, "Message",ExpressionUUID->"6f64884a-f456-4b5b-aa62-be97efbf5fa7"],
Cell[386298, 7482, 708, 23, 70, "Output",ExpressionUUID->"701e9052-5eeb-4d3b-a8bc-c1c1af1ad3a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387043, 7510, 483, 13, 37, "Input",ExpressionUUID->"fe00d830-918d-4e15-bd5e-9e66f5eccfad"],
Cell[387529, 7525, 927, 33, 99, "Output",ExpressionUUID->"6c421b10-1bc0-4268-8356-eb5db80a9f15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388493, 7563, 719, 19, 64, "Input",ExpressionUUID->"9df472b8-1c7f-47dc-80b8-f829424bf8da"],
Cell[389215, 7584, 1202, 41, 99, "Output",ExpressionUUID->"962fca82-bafc-491b-a293-facf3351d1ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390454, 7630, 1504, 46, 98, "Input",ExpressionUUID->"35976ee7-e520-4ab1-b24f-6bcf85567386"],
Cell[391961, 7678, 1091, 35, 100, "Output",ExpressionUUID->"b0896657-09ea-4d52-9992-6453f9128251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393089, 7718, 819, 22, 64, "Input",ExpressionUUID->"64417795-128a-49fb-9fff-dc5753ff1f58"],
Cell[393911, 7742, 1361, 45, 99, "Output",ExpressionUUID->"cc4db2ce-22cd-491d-99d9-54c8870bed5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395309, 7792, 1612, 48, 98, "Input",ExpressionUUID->"025aa577-34c9-46c9-8170-3ace986ccbbc"],
Cell[396924, 7842, 1111, 36, 100, "Output",ExpressionUUID->"76b936e2-7049-46f6-9f50-0921a6bd97c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398072, 7883, 434, 11, 72, "Input",ExpressionUUID->"08aff83e-5a48-4b98-b02e-b44d916705fe"],
Cell[398509, 7896, 972, 34, 99, "Output",ExpressionUUID->"57a2c952-dbee-444f-ab9d-7e0344dc7708"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399518, 7935, 1506, 47, 140, "Input",ExpressionUUID->"d9ac8792-fc0b-4c32-9517-6c8be885ed23"],
Cell[401027, 7984, 11358, 213, 292, "Output",ExpressionUUID->"4fe967ae-1e56-4e0e-af52-2d61e35c8756"]
}, Open  ]],
Cell[412400, 8200, 226, 5, 44, "Text",ExpressionUUID->"7d9f7566-959c-400f-8c58-0b7204d03181"],
Cell[CellGroupData[{
Cell[412651, 8209, 995, 34, 105, "Input",ExpressionUUID->"06251c6e-e862-4be9-b51f-fa741fe6bce7"],
Cell[413649, 8245, 904, 32, 114, "Output",ExpressionUUID->"b06a5981-47a1-4916-8f69-cc21ca2d25fb"]
}, Open  ]],
Cell[414568, 8280, 829, 26, 75, "Input",ExpressionUUID->"c010d63d-344f-4770-a44a-d2ad088fbe5d"],
Cell[415400, 8308, 332, 10, 67, "Input",ExpressionUUID->"605d6e80-5861-4969-96dc-8b696fb6617b"],
Cell[CellGroupData[{
Cell[415757, 8322, 1162, 40, 105, "Input",ExpressionUUID->"28640a6c-e8a3-4aad-bd3a-7cd2a7c082ae"],
Cell[416922, 8364, 1102, 38, 114, "Output",ExpressionUUID->"9c0cc83d-3774-4de4-a4e1-ba026c7a5c69"]
}, Open  ]],
Cell[418039, 8405, 199, 3, 44, "Text",ExpressionUUID->"255d13c0-a30c-4fb2-90ca-a1122ded896e"],
Cell[418241, 8410, 855, 31, 105, "Input",ExpressionUUID->"2f2eff6f-771b-44dd-997f-713ff998fc1e"],
Cell[419099, 8443, 356, 11, 73, "Input",ExpressionUUID->"bdf341a2-00bc-4c01-b523-f6f65f30751f"]
}, Open  ]],
Cell[419470, 8457, 190, 3, 56, "Subsubsection",ExpressionUUID->"6e3b62f7-955a-4462-8130-3d2c2b376db6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419697, 8465, 181, 3, 67, "Subsection",ExpressionUUID->"72a8e02c-2b93-4847-8ec9-b0c047305e42"],
Cell[CellGroupData[{
Cell[419903, 8472, 16225, 325, 1318, "Input",ExpressionUUID->"8e875cf2-46a3-42c0-9f94-9e2ce96b97ce"],
Cell[436131, 8799, 6188, 121, 429, "Output",ExpressionUUID->"24439b25-3064-41ba-8113-e6d699879a93"]
}, Open  ]],
Cell[442334, 8923, 58691, 970, 649, "Text",ExpressionUUID->"ac0b44a7-af11-4809-879f-dd7c4b268fc7"],
Cell[501028, 9895, 247, 6, 44, "Text",ExpressionUUID->"a4bc7671-a06f-42b9-bd40-91a9be3df2aa"],
Cell[CellGroupData[{
Cell[501300, 9905, 895, 22, 69, "Input",ExpressionUUID->"7f1242fa-3e95-4a93-a2e4-ee3299727e20"],
Cell[502198, 9929, 471, 14, 62, "Output",ExpressionUUID->"326374af-b3fb-4525-8181-68415dab78af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502706, 9948, 592, 18, 60, "Input",ExpressionUUID->"6fc8137a-80fa-4072-9303-ec21ab4cfa0c"],
Cell[503301, 9968, 172, 4, 42, "Output",ExpressionUUID->"03be4c6d-e0c6-43f2-9019-67b1c1aa0a6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503510, 9977, 1153, 29, 110, "Input",ExpressionUUID->"462ea6a8-b310-41a6-97a0-d4fb0acca4c7"],
Cell[504666, 10008, 471, 14, 62, "Output",ExpressionUUID->"fa28730d-c12b-4ad3-b4a8-7770ef9035f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505174, 10027, 641, 20, 60, "Input",ExpressionUUID->"79ba3a89-8e8f-43d5-9ec7-1e5603b4c419"],
Cell[505818, 10049, 192, 4, 42, "Output",ExpressionUUID->"1b23c5c1-7484-4a25-a913-faf04a7f6b7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506047, 10058, 785, 20, 69, "Input",ExpressionUUID->"f1e095e9-d073-49f9-99a7-792f8c9dca05"],
Cell[506835, 10080, 601, 19, 53, "Output",ExpressionUUID->"6f63f220-4859-42b8-a44a-e9da5df5c060"]
}, Open  ]],
Cell[507451, 10102, 427, 12, 44, "Text",ExpressionUUID->"f353dc70-f6a8-4b2f-bc85-d0bb4af0c602"],
Cell[CellGroupData[{
Cell[507903, 10118, 953, 25, 100, "Input",ExpressionUUID->"7bf191b6-5a12-44c2-bc0d-12d7dfa321ae"],
Cell[508859, 10145, 336, 10, 60, "Output",ExpressionUUID->"58e5b7ab-46c8-4789-a31c-a1263e2956a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509232, 10160, 463, 13, 58, "Input",ExpressionUUID->"1f44c304-5579-4e97-a5a9-ef882c604e44"],
Cell[509698, 10175, 195, 4, 42, "Output",ExpressionUUID->"a419dbbe-70e3-46a3-82c9-6e2762565ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509930, 10184, 462, 13, 58, "Input",ExpressionUUID->"94d8b228-8685-4477-b96a-368251eafdda"],
Cell[510395, 10199, 229, 6, 59, "Output",ExpressionUUID->"90ab7aff-4edd-418c-9dbc-24ca6ddd6431"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510661, 10210, 570, 18, 58, "Input",ExpressionUUID->"f530d11e-b4b3-4ef8-82b9-00c054a50b73"],
Cell[511234, 10230, 267, 7, 55, "Output",ExpressionUUID->"6c3e095f-0656-4132-937f-be3f4c999915"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511538, 10242, 500, 15, 58, "Input",ExpressionUUID->"7b4b5290-4d2e-4262-9c45-1a0392ebdcb1"],
Cell[512041, 10259, 253, 7, 59, "Output",ExpressionUUID->"eecda3ef-4149-4469-ad29-c57ad94a6ebf"]
}, Open  ]],
Cell[512309, 10269, 195, 3, 44, "Text",ExpressionUUID->"e925ac01-ba68-4b67-ac74-f110286fb348"],
Cell[CellGroupData[{
Cell[512529, 10276, 492, 14, 37, "Input",ExpressionUUID->"eb897fd3-19c7-477d-bbee-dcfc0e0f8555"],
Cell[513024, 10292, 2820, 84, 137, "Output",ExpressionUUID->"975f5c5b-20e4-4c1f-a7f1-7e7704923b01"]
}, Open  ]],
Cell[515859, 10379, 1936, 51, 127, "Input",ExpressionUUID->"99f4f149-6dc6-4b00-a67c-def906da1c7b"],
Cell[CellGroupData[{
Cell[517820, 10434, 560, 15, 64, "Input",ExpressionUUID->"0751fbb5-3150-45db-ac94-3164c04558c5"],
Cell[518383, 10451, 3284, 96, 131, "Output",ExpressionUUID->"2ff42157-2adf-4086-92c9-ef234678a22c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521704, 10552, 876, 26, 103, "Input",ExpressionUUID->"53979462-a51c-43ac-8e7a-e93c31d6bc65"],
Cell[522583, 10580, 1971, 58, 89, "Output",ExpressionUUID->"d442e523-72ff-484d-abd9-b14fc8aad122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524591, 10643, 1806, 49, 148, "Input",ExpressionUUID->"cd22a1e3-6a9f-4de6-b15c-494ab948cac6"],
Cell[526400, 10694, 1656, 46, 111, "Output",ExpressionUUID->"03963278-1291-481e-be0f-cb4980a3443c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528093, 10745, 721, 16, 37, "Input",ExpressionUUID->"ad0706ca-bfca-4247-bbe8-4b41b454d7aa"],
Cell[528817, 10763, 418, 10, 48, "Message",ExpressionUUID->"45bde5e4-811c-4aa3-b597-0efb24333620"],
Cell[529238, 10775, 238, 4, 42, "Output",ExpressionUUID->"4548f877-d2ab-473f-a7bf-5a3b86a91785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529513, 10784, 445, 11, 40, "Input",ExpressionUUID->"b470bdba-b620-4394-b5a7-01b4e4b8710f"],
Cell[529961, 10797, 203, 4, 42, "Output",ExpressionUUID->"85dfe3ad-945f-4a2e-abfc-a9bd067c15c0"]
}, Open  ]],
Cell[530179, 10804, 345, 5, 44, "Text",ExpressionUUID->"15e928b7-dd10-47fe-a484-726d338b2795"],
Cell[CellGroupData[{
Cell[530549, 10813, 3272, 88, 112, "Input",ExpressionUUID->"82c63251-3817-4e57-a99e-098939a342e1"],
Cell[533824, 10903, 2777, 78, 115, "Output",ExpressionUUID->"0981096f-edfe-46a1-b0b7-d5b896a8476f"]
}, Open  ]],
Cell[536616, 10984, 409, 6, 44, "Text",ExpressionUUID->"c67acbfa-3cfb-4f0c-b9b4-5b3fb8affd71"],
Cell[537028, 10992, 3980, 100, 171, "Input",ExpressionUUID->"758e6ceb-1de5-4887-8b16-ef7deda5ef85"],
Cell[541011, 11094, 1066, 27, 117, "Input",ExpressionUUID->"176e19f3-cf9e-443b-9323-2d4895f08e4e"],
Cell[542080, 11123, 154, 3, 37, "Input",ExpressionUUID->"37f103bb-5fac-407d-aa8b-673da8267072"],
Cell[CellGroupData[{
Cell[542259, 11130, 778, 17, 64, "Input",ExpressionUUID->"b07b3e32-f884-4702-b353-e855a7d58667"],
Cell[543040, 11149, 381, 7, 42, "Output",ExpressionUUID->"f1bf5a6f-0b89-4a4d-b6fe-03249888c9e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543458, 11161, 617, 14, 64, "Input",ExpressionUUID->"49943158-8bfb-4a05-89c2-5466e883cdfe"],
Cell[544078, 11177, 303, 8, 57, "Output",ExpressionUUID->"e3cbadc8-002d-4e69-bede-780e3d6b5023"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544418, 11190, 665, 14, 64, "Input",ExpressionUUID->"b33c2f9f-db72-475e-9337-825d0ad138ae"],
Cell[545086, 11206, 1298, 40, 93, "Output",ExpressionUUID->"bd5a2e0e-5c05-4004-9666-b7be0f049bd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546421, 11251, 392, 10, 37, "Input",ExpressionUUID->"f5278a72-19d8-454b-ba27-bfaf7909c364"],
Cell[546816, 11263, 1107, 35, 93, "Output",ExpressionUUID->"89e2a8aa-3fc7-4ad1-a028-806725e30591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547960, 11303, 1956, 53, 161, "Input",ExpressionUUID->"47b97102-3880-4cb7-8e7e-b62739191e8c"],
Cell[549919, 11358, 1283, 39, 91, "Output",ExpressionUUID->"91a60960-0eb2-4d51-ab48-0fc499ba18d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551239, 11402, 1852, 51, 154, "Input",ExpressionUUID->"03045dd5-504b-4520-b96d-697ba347fddb"],
Cell[553094, 11455, 1025, 32, 88, "Output",ExpressionUUID->"753bc953-1850-48fb-827c-8acea95dea30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554156, 11492, 1942, 54, 174, "Input",ExpressionUUID->"6353f058-731a-49ef-8100-a898a33f7745"],
Cell[556101, 11548, 878, 27, 88, "Output",ExpressionUUID->"d988c2c8-a227-4201-9101-715c042cd923"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557016, 11580, 1250, 37, 93, "Input",ExpressionUUID->"b311a2a6-8ce5-4648-9980-c0a2c154f3d6"],
Cell[558269, 11619, 1094, 36, 88, "Output",ExpressionUUID->"dde478e4-d4b1-4731-a777-584ce0869000"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559400, 11660, 1787, 49, 135, "Input",ExpressionUUID->"43ac9a65-58d0-4c01-9dea-0222ef7705d2"],
Cell[561190, 11711, 182, 3, 42, "Output",ExpressionUUID->"ae79125a-2cc6-4290-ad3e-3810769f8905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561409, 11719, 1461, 40, 127, "Input",ExpressionUUID->"cb133a82-2b27-4ca3-ab16-2d44361a31a0"],
Cell[562873, 11761, 160, 3, 42, "Output",ExpressionUUID->"623b27ac-5d7e-485f-99f3-0b406f57b8a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563070, 11769, 1868, 52, 135, "Input",ExpressionUUID->"980bbd16-1836-463a-a7c6-0750814b9cf7"],
Cell[564941, 11823, 362, 9, 35, "Message",ExpressionUUID->"5c8ef267-3022-4423-af98-b6f3415c2f9c"],
Cell[565306, 11834, 1774, 52, 134, "Output",ExpressionUUID->"8a98d00a-1b84-4c53-9a68-4f039ba9741d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567117, 11891, 19654, 425, 1561, "Input",ExpressionUUID->"762bef3a-d201-4881-9a41-203fe28d49e6"],
Cell[586774, 12318, 7074, 141, 430, "Output",ExpressionUUID->"9dc3efbd-1bda-4b86-80a4-bb3ab515d07f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[593897, 12465, 194, 3, 67, "Subsection",ExpressionUUID->"323169ae-4e87-4ea9-bc99-79271dd8ed80"],
Cell[594094, 12470, 303, 6, 37, "Input",ExpressionUUID->"8b25ea49-8c9c-4af2-83c7-4eb1ca98d6e0"],
Cell[594400, 12478, 4111, 102, 224, "Input",ExpressionUUID->"12cf03b6-fea9-47d1-8e75-b92a240ef3eb"],
Cell[CellGroupData[{
Cell[598536, 12584, 936, 20, 64, "Input",ExpressionUUID->"8481ab4b-b8c6-4a2d-b3ed-cb02613c6c0a"],
Cell[599475, 12606, 1383, 41, 109, "Output",ExpressionUUID->"9d6714d0-78ce-4191-a8dc-315e4b420ff4"]
}, Open  ]],
Cell[600873, 12650, 222, 5, 44, "Text",ExpressionUUID->"0e04f833-3741-47f4-bec8-523c2fab40b5"],
Cell[CellGroupData[{
Cell[601120, 12659, 1128, 28, 95, "Input",ExpressionUUID->"7b507c92-57bd-468e-9c7e-d077a343cfba"],
Cell[602251, 12689, 371, 9, 48, "Message",ExpressionUUID->"b82b4ce2-f43e-4000-8b74-31b6efb954bc"],
Cell[602625, 12700, 232, 3, 42, "Output",ExpressionUUID->"bea5f850-9a81-484f-8d3a-67026bc0a8f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602894, 12708, 996, 23, 95, "Input",ExpressionUUID->"a117e3fb-60e6-4629-b5bf-ba3b6097f606"],
Cell[603893, 12733, 912, 27, 87, "Output",ExpressionUUID->"8f2b2071-26cd-414e-bb44-a87c6ad87fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604842, 12765, 744, 20, 95, "Input",ExpressionUUID->"9a0c85d7-766c-437e-b040-37718fae552e"],
Cell[605589, 12787, 177, 3, 42, "Output",ExpressionUUID->"7672c1db-0057-4c17-a927-0a6dd17e6466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605803, 12795, 194, 3, 56, "Subsubsection",ExpressionUUID->"1c38a10e-29b1-4540-a3cb-c098c7d23b0b"],
Cell[606000, 12800, 488, 10, 131, "Text",ExpressionUUID->"55a6f4f6-9cd9-45ae-900e-b8f034b1a760"],
Cell[606491, 12812, 177845, 2921, 409, "Input",ExpressionUUID->"028a91a3-927e-4d39-959d-80ac3343484b"],
Cell[784339, 15735, 179, 2, 44, "Text",ExpressionUUID->"af5b3e70-80f2-41fe-a76d-c8799a21cd78"],
Cell[CellGroupData[{
Cell[784543, 15741, 566, 15, 58, "Input",ExpressionUUID->"c363ad00-338f-402e-b852-18a82073f65e"],
Cell[785112, 15758, 205, 5, 59, "Output",ExpressionUUID->"948bb520-bc69-4112-a6c9-d28a288c63f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785354, 15768, 514, 14, 58, "Input",ExpressionUUID->"af27f213-a802-4a62-a674-5dca022f665c"],
Cell[785871, 15784, 252, 7, 59, "Output",ExpressionUUID->"20a6e601-da12-4ca1-8358-245d57d63e12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786160, 15796, 389, 11, 58, "Input",ExpressionUUID->"34ad2494-8160-4ee9-9e6d-8b00a4336ccf"],
Cell[786552, 15809, 377, 11, 60, "Output",ExpressionUUID->"1858a28e-25b7-4157-9a95-48b9ac367af7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786966, 15825, 577, 17, 60, "Input",ExpressionUUID->"269d3131-4e85-492c-9aa0-514abdf0f4d6"],
Cell[787546, 15844, 314, 8, 63, "Output",ExpressionUUID->"f96503ee-023c-483d-a52c-9c1008adec63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[787897, 15857, 454, 12, 61, "Input",ExpressionUUID->"6e1d3fc2-431b-41ba-87e0-84bab1e23d7a"],
Cell[788354, 15871, 254, 7, 59, "Output",ExpressionUUID->"7d88b0b8-2a95-4f7e-9237-b40d3ce5c2dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788645, 15883, 480, 12, 61, "Input",ExpressionUUID->"a31b4516-3cc6-4948-9897-3bdfb7b73b7e"],
Cell[789128, 15897, 205, 5, 59, "Output",ExpressionUUID->"2023d2d7-2e72-495d-be4c-512ba8758b50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789370, 15907, 696, 19, 60, "Input",ExpressionUUID->"907aa1e1-a091-49c8-96f9-6f0a85c43404"],
Cell[790069, 15928, 353, 8, 63, "Output",ExpressionUUID->"2a2733e9-ed8c-48b0-82dd-64f279410b4b"]
}, Open  ]],
Cell[790437, 15939, 299, 7, 44, "Text",ExpressionUUID->"0cb84ca8-4da8-42fa-b5e2-7c68e6688792"],
Cell[790739, 15948, 2348, 61, 92, "Input",ExpressionUUID->"637db5c4-29c3-4ce6-a635-357b843c3c9d"],
Cell[CellGroupData[{
Cell[793112, 16013, 1954, 45, 165, "Input",ExpressionUUID->"01503527-6912-4f9e-847c-363b8253c05d"],
Cell[795069, 16060, 250, 4, 42, "Output",ExpressionUUID->"d4b632f7-f9ad-4f56-a472-b560d5e360e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[795356, 16069, 2274, 56, 204, "Input",ExpressionUUID->"d56b943b-2ade-4237-b4a5-0795c1501827"],
Cell[797633, 16127, 845, 16, 84, "Message",ExpressionUUID->"6adbdd65-3cd8-4a60-80fe-e0f82af07616"],
Cell[798481, 16145, 246, 4, 42, "Output",ExpressionUUID->"908a308b-8121-4703-85d5-6e12e12fe2ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798764, 16154, 1741, 41, 170, "Input",ExpressionUUID->"ba902729-64bf-41bb-8834-2025c92a2429"],
Cell[800508, 16197, 4364, 123, 203, "Output",ExpressionUUID->"d6caa4a7-ac0c-42cb-b597-88fcfc365636"]
}, Open  ]],
Cell[804887, 16323, 3043, 86, 142, "Input",ExpressionUUID->"e75c6063-41c5-49ea-804a-7145b49950a1"],
Cell[807933, 16411, 1065, 31, 93, "Input",ExpressionUUID->"15a69e15-1183-4b59-bf0d-857f5f03303a"],
Cell[CellGroupData[{
Cell[809023, 16446, 2096, 53, 195, "Input",ExpressionUUID->"275079b6-51bf-4524-9f65-4f11bb9fdd7a"],
Cell[811122, 16501, 197, 4, 59, "Output",ExpressionUUID->"8f445f58-f87e-4c43-9a42-73f12d8f5ba9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[811368, 16511, 241, 4, 56, "Subsubsection",ExpressionUUID->"42070032-7d37-445b-86e4-be6bc2593e09"],
Cell[CellGroupData[{
Cell[811634, 16519, 1547, 38, 127, "Input",ExpressionUUID->"7533308c-9db3-47a2-bc27-df0e6bbc2b35"],
Cell[813184, 16559, 939, 26, 89, "Output",ExpressionUUID->"8b42c565-4b78-4763-b612-ae720ca038a3"]
}, Open  ]],
Cell[814138, 16588, 238, 6, 44, "Text",ExpressionUUID->"5d94671f-a148-471a-a782-707554b6ee57"],
Cell[CellGroupData[{
Cell[814401, 16598, 2263, 52, 179, "Input",ExpressionUUID->"ca3293b3-d084-44a5-8aa9-55a3e3d36d3a"],
Cell[816667, 16652, 846, 21, 65, "Output",ExpressionUUID->"012aa89c-118a-4e95-8c28-e3f80ecb853d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817550, 16678, 1904, 47, 179, "Input",ExpressionUUID->"d1f6d159-d453-42ae-9744-197ad83fab46"],
Cell[819457, 16727, 625, 17, 65, "Output",ExpressionUUID->"64cd28a6-c743-42a2-9c54-f3aa6345b643"]
}, Open  ]],
Cell[CellGroupData[{
Cell[820119, 16749, 2609, 62, 195, "Input",ExpressionUUID->"58d34ce3-aef8-4932-a28b-b516a008d96d"],
Cell[822731, 16813, 627, 17, 65, "Output",ExpressionUUID->"f10a213b-6bcc-4876-8142-3fe05b1f91de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[823395, 16835, 2880, 68, 195, "Input",ExpressionUUID->"cfd7b3d2-9bf7-4a52-a995-bde4043a70ab"],
Cell[826278, 16905, 182, 3, 42, "Output",ExpressionUUID->"147cf428-5c1a-4239-9f5c-33f15f1252e2"]
}, Open  ]],
Cell[826475, 16911, 216, 5, 44, "Text",ExpressionUUID->"50077d32-233c-4f7b-9b92-db52be839436"],
Cell[826694, 16918, 5539, 128, 381, "Input",ExpressionUUID->"b553a386-dc4e-4e1f-a920-4ffbfc29e4c3"],
Cell[CellGroupData[{
Cell[832258, 17050, 593, 12, 37, "Input",ExpressionUUID->"20b0faac-83fd-4c16-a411-6ec4b34183d9"],
Cell[832854, 17064, 558, 10, 42, "Output",ExpressionUUID->"ccc96c1e-ef6d-4908-87d8-899410fc5c4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833449, 17079, 697, 13, 37, "Input",ExpressionUUID->"54ea9c7e-e270-43eb-b223-f3211ab50da2"],
Cell[834149, 17094, 606, 10, 42, "Output",ExpressionUUID->"2eb23d43-176b-413e-8552-8a27c2a1c272"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834792, 17109, 491, 13, 65, "Input",ExpressionUUID->"6c740166-a058-414e-b558-b49a6ffc2cc9"],
Cell[835286, 17124, 184, 3, 42, "Output",ExpressionUUID->"f87336ac-6ff2-4995-9930-0723a498f7c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835507, 17132, 247, 5, 37, "Input",ExpressionUUID->"4412b385-ff68-4be5-afdb-48b126d456a7"],
Cell[835757, 17139, 188, 5, 46, "Output",ExpressionUUID->"33c1d89f-cbd9-494f-a8e1-77b7a73f6f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835982, 17149, 1093, 24, 90, "Input",ExpressionUUID->"d54dfa54-fae7-4d59-82e6-53dde2c89c16"],
Cell[837078, 17175, 3632, 55, 120, "Message",ExpressionUUID->"2820710b-c409-4cfd-aa7e-4595628b6f96"],
Cell[840713, 17232, 3578, 100, 153, "Output",ExpressionUUID->"d0a47f12-fe14-4950-84a1-98d9505ed716"]
}, Open  ]],
Cell[844306, 17335, 201, 3, 44, "Text",ExpressionUUID->"b4a90d2d-4227-400f-9cd9-cf88719e8337"],
Cell[844510, 17340, 6169, 139, 431, "Input",ExpressionUUID->"c4cb734e-42b9-40ff-b7b4-f3a6c7e92140"],
Cell[CellGroupData[{
Cell[850704, 17483, 593, 12, 37, "Input",ExpressionUUID->"56ebb634-8834-49f1-bd10-a5bce5efb8b7"],
Cell[851300, 17497, 557, 11, 42, "Output",ExpressionUUID->"4f715030-5c23-47bc-8fc7-46574212876a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[851894, 17513, 410, 9, 37, "Input",ExpressionUUID->"53714d9b-28b0-49a6-96b2-7b371a9fdc5c"],
Cell[852307, 17524, 293, 5, 42, "Output",ExpressionUUID->"a35ec471-c89c-4fd3-b71c-9fa74cf33f75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[852637, 17534, 1093, 24, 90, "Input",ExpressionUUID->"8c3cc907-479f-445e-8888-09c1d8ff7305"],
Cell[853733, 17560, 4143, 111, 165, "Output",ExpressionUUID->"f2dbd23e-ee8b-4d90-9b3d-ae37f0755b63"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[857937, 17678, 218, 5, 67, "Subsection",ExpressionUUID->"33342a90-eb8a-45ca-b3c5-963c878b58a5"],
Cell[858158, 17685, 522, 15, 44, "Text",ExpressionUUID->"4860bf06-5ab6-43cc-8326-5cf1768cae8d"],
Cell[CellGroupData[{
Cell[858705, 17704, 606, 16, 40, "Input",ExpressionUUID->"fcd22963-608d-4a1a-ba81-1e1e0c64bbb5"],
Cell[859314, 17722, 365, 10, 63, "Output",ExpressionUUID->"d85cd8a1-a29d-4db3-a438-a881bc73675d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[859716, 17737, 561, 15, 40, "Input",ExpressionUUID->"09f4d70a-601a-43c5-887e-0919adbcfe16"],
Cell[860280, 17754, 870, 27, 71, "Output",ExpressionUUID->"115b877a-df1e-47f7-9a8b-2e34a6ae9205"]
}, Open  ]],
Cell[CellGroupData[{
Cell[861187, 17786, 2813, 57, 379, "Input",ExpressionUUID->"28820d6c-2bbb-483f-85bd-2ebbcaf3f5e5"],
Cell[864003, 17845, 685, 19, 70, "Output",ExpressionUUID->"cbe1eab4-da86-47da-8965-5e7a864e05e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[864725, 17869, 810, 23, 68, "Input",ExpressionUUID->"62c0cfd8-7d96-4dad-9eb0-d7c1d1f44a9b"],
Cell[865538, 17894, 921, 30, 73, "Output",ExpressionUUID->"2df1b7cc-9b5d-47ac-b34a-c10cbc457425"]
}, Open  ]],
Cell[CellGroupData[{
Cell[866496, 17929, 682, 20, 68, "Input",ExpressionUUID->"2a45a8bf-4b70-431a-b624-70b0ca7ab923"],
Cell[867181, 17951, 661, 20, 70, "Output",ExpressionUUID->"daf18b5d-4b3b-4058-9294-643d5ab2c81c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[867879, 17976, 1448, 40, 148, "Input",ExpressionUUID->"e2cc9ed0-bb57-4b6f-a9a9-cfd4f72dea67"],
Cell[869330, 18018, 2150, 44, 443, "Output",ExpressionUUID->"21f7ee5a-f443-4cf4-a66a-148972bdf6ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871517, 18067, 2376, 51, 379, "Input",ExpressionUUID->"1053b92d-1546-4f1f-9702-32d26b33875a"],
Cell[873896, 18120, 758, 22, 74, "Output",ExpressionUUID->"fc23ce56-9036-4edf-a1bb-4e2f7402098c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874691, 18147, 2019, 47, 237, "Input",ExpressionUUID->"5f64b446-8c09-4165-8fe2-af4b80243d9c"],
Cell[876713, 18196, 254, 4, 42, "Output",ExpressionUUID->"2e1a90d3-4632-4efd-9e1f-716fa7b5dab6"]
}, Open  ]],
Cell[876982, 18203, 1246, 29, 148, "Text",ExpressionUUID->"56856981-e841-4cca-a37e-71df457c10d1"],
Cell[878231, 18234, 175, 3, 37, "Input",ExpressionUUID->"18b5d2c7-df66-4495-a9a7-80af940df0bb"]
}, Open  ]]
}
]
*)

